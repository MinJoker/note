{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"MinJoker's Notebook","text":"<p>Quote</p> <p>\u4ff1\u5f80\u77e3\u3002\u7136\u800c\uff0c\u300c\u7f8e\u300d\u7684\u5386\u7a0b\u5374\u662f\u6307\u5411\u672a\u6765\u7684\u3002 <p>\u2014\u2014\u2014\u2014 \u674e\u6cfd\u539a \u00a0 \u00a0 </p></p>"},{"location":"link/","title":"Friends!!!","text":"<p> \u7ea6 44 \u4e2a\u5b57 </p> <p>Info</p> <p>\u4e00\u4e9b\u597d\u670b\u53cb\u4eec\u634f\uff01\u6b22\u8fce\u7559\u4e0b\u53cb\u94fe\u4ea4\u6362\uff01</p> <p> Isshiki\u4fee's Notebook \u4fee\u4f6c tql! </p> <p> Bowling's TechStack blgg \u6d47\u6d47 </p> <p> STDquantum's Blog \u795e\u5947\u7684\u5c0f\u7b11\uff01 </p> <p> Humble's Qzone \ud83d\ude0d\u5c0a\u5c0a\ud83d\ude0d </p>"},{"location":"courses/","title":"Courses","text":"<p> \u7ea6 28 \u4e2a\u5b57 </p> <p>Abstrace</p> <p>\u8fd9\u91cc\u7528\u6765\u5b58\u653e ZJU \u8bfe\u7a0b\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u4e3b\u8981\u5173\u4e8e\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f</p>"},{"location":"courses/ads/","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790","text":"<p> \u7ea6 77 \u4e2a\u5b57 </p> <p>Abstract</p> <ul> <li>\u6d59\u6c5f\u5927\u5b66\u300a\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\u300b\u8bfe\u7a0b\u7b14\u8bb0</li> <li>\u53c2\u8003\u8d44\u6599\uff1a<ul> <li>\u8bfe\u7a0b\u52a9\u6559\u63d0\u4f9b\u7684\u8865\u5145\u9605\u8bfb\u6750\u6599</li> <li>Isshiki\u4fee's Notebook</li> </ul> </li> </ul>"},{"location":"courses/ads/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784</li> <li>\u7b97\u6cd5\u5206\u6790<ul> <li>\u57fa\u672c\u6ca1\u5199\uff0c\u53ea\u5199\u4e86\u56de\u6eaf\u548c\u5206\u6cbb</li> </ul> </li> </ul>"},{"location":"courses/ads/note1/","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784","text":"<p> \u7ea6 5076 \u4e2a\u5b57  119 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 22 \u5206\u949f</p>"},{"location":"courses/ads/note1/#avl","title":"AVL\u2009\u6811","text":"<ul> <li>AVL \u6811\u662f\u4e00\u79cd\u81ea\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5176\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc7 1</li> <li>AVL \u6811\u7684\u9ad8\u5ea6 $h = \\Omicron(\\log n)$</li> <li>AVL \u6811\u7684\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a $\\Omicron(\\log n)$</li> </ul>"},{"location":"courses/ads/note1/#_2","title":"\u518d\u5e73\u8861","text":"<p>AVL \u6811\u7684\u518d\u5e73\u8861\u901a\u8fc7\u6240\u8c13\u7684\u201c\u65cb\u8f6c\u201d\u64cd\u4f5c\u5b9e\u73b0\uff0c\u5176\u7cbe\u9ad3\u5728\u4e8e\u628a\u8282\u70b9\u5728\u7ad6\u76f4\u65b9\u5411\u4e0a\u8fdb\u884c\u5347\u964d\uff0c\u800c\u4e0d\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u505a\u79fb\u52a8\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811\u6027\u8d28\u4e0d\u88ab\u7834\u574f\u3002</p> <p>\u65cb\u8f6c\u64cd\u4f5c\u5206\u4e3a\u4ee5\u4e0b\u56db\u79cd\u60c5\u51b5\uff0c\u8fd9\u91cc\u8bb0\u5e73\u8861\u56e0\u5b50\u4e34\u65f6\u4e3a $\\pm 2$ \u7684\u8282\u70b9\u4e3a X\uff0c\u8bb0\u5176\u8f83\u9ad8\u5b50\u6811\u7684\u6839\u8282\u70b9\u4e3a Z\uff0c\u5e73\u8861\u56e0\u5b50\u8bb0\u4e3a BF = \u53f3\u5b50\u6811\u9ad8\u5ea6 - \u5de6\u5b50\u6811\u9ad8\u5ea6\uff1a</p> <ul> <li>RR\uff1aZ \u662f X \u7684\u53f3\u513f\u5b50\uff0cBF(Z) &gt;= 0 =&gt; rotateLeft</li> <li>LL\uff1aZ \u662f X \u7684\u5de6\u513f\u5b50\uff0cBF(Z) &lt;= 0 =&gt; rotateRight</li> <li>RL\uff1aZ \u662f X \u7684\u53f3\u513f\u5b50\uff0cBF(Z) &lt; 0 =&gt; rotateRightLeft</li> <li>LR\uff1aZ \u662f X \u7684\u5de6\u513f\u5b50\uff0cBF(Z) &gt; 0 =&gt; rotateLeftRight</li> </ul> <p>\u4e0b\u9762\u5c55\u793a\u5404\u79cd\u60c5\u51b5\u4e0b\u7684 rotate \u64cd\u4f5c\uff0c\u4ee5 RR \u548c RL \u4e3a\u4f8b\uff08LL \u548c LR \u5bf9\u79f0\u5373\u53ef\uff09\uff0c\u7d20\u6750\u6e90\u81ea Wikipedia\uff1a</p> RR: rotateLeftRL: rotateRightLeft <p></p> <p>\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u53d1\u751f\u5728\uff1a</p> <ol> <li>\u63d2\u5165\u64cd\u4f5c\u5bfc\u81f4 $t_4$ \u9ad8\u5ea6\u589e\u52a0 1</li> <li>\u5220\u9664\u64cd\u4f5c\u5bfc\u81f4 $t_1$ \u9ad8\u5ea6\u51cf\u5c11 1</li> </ol> <pre><code>node *rotateLeft(node *X, node *Z) {\n    // rotate\n    t23 = Z-&gt;left;\n    X-&gt;right = t23;\n    if (t23 != NULL) t23-&gt;parent = X;\n    Z-&gt;left = X;\n    X-&gt;parent = Z;\n    // update BF\n    if (BF(Z) == 0) {\n        // 1st case, only happens with deletion\n        BF(X) = +1;\n        BF(Z) = -1;\n    } else {\n        // 2nd case\n        BF(X) = 0;\n        BF(Z) = 0;\n    }\n    return Z; // return new root of rotated subtree\n}\n</code></pre> <p></p> <p>\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u53d1\u751f\u5728\uff1a</p> <ol> <li>\u63d2\u5165 $Y$ \u672c\u8eab\uff0c\u6216\u8005\u63d2\u5165\u64cd\u4f5c\u5bfc\u81f4\u5176\u5b50\u6811 $t_2$ \u6216 $t_3$ \u9ad8\u5ea6\u589e\u52a0 1</li> <li>\u5220\u9664\u64cd\u4f5c\u5bfc\u81f4 $t_1$ \u9ad8\u5ea6\u51cf\u5c11 1</li> </ol> <pre><code>node *rotateRightLeft(node *X, node *Z) {\n    // rotate\n    Y = Z-&gt;left;\n    t3 = Y-&gt;right;\n    Z-&gt;left = t3;\n    if (t3 != NULL) t3-&gt;parent = Z;\n    Y-&gt;right = Z;\n    Z-&gt;parent = Y;\n    t2 = Y-&gt;left;\n    X-&gt;right = t2;\n    if (t2 != NULL) t2-&gt;parent = X;\n    Y-&gt;left = X;\n    X-&gt;parent = Y;\n    // update BF\n    if (BF(Y) == 0) { // 1st case\n        BF(X) = 0;\n        BF(Z) = 0;\n    } else if (BF(Y) &gt; 0) { // 2nd case\n        BF(X) = -1;\n        BF(Z) = 0;\n    } else { // 3nd case\n        BF(X) = 0;\n        BF(Z) = +1;\n    }\n    BF(Y) = 0;\n    return Y; // return new root of rotated subtree\n}\n</code></pre>"},{"location":"courses/ads/note1/#_3","title":"\u63d2\u5165\u4e0e\u5220\u9664","text":"<p>AVL \u6811\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u601d\u8def\u90fd\u662f\u9996\u5148\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\uff0c\u7136\u540e\u81ea\u5e95\u5411\u4e0a\u56de\u6eaf\u4ee5\u66f4\u65b0 BF \u503c\u5e76\u7ef4\u62a4\u5e73\u8861\u6027\uff0c\u4f46\u5176\u5177\u4f53\u5b9e\u73b0\u76f8\u5f53\u7e41\u7410\u3002\u7ed3\u8bba\u662f\uff0c\u63d2\u5165\u540e\u6700\u591a\u53ea\u9700\u8981\u4e00\u6b21 rotate \u5373\u53ef\u5b9e\u73b0\u518d\u5e73\u8861\uff0c\u800c\u5220\u9664\u540e\u53ef\u80fd\u9700\u8981\u591a\u6b21 rotate \u624d\u80fd\u5b9e\u73b0\u518d\u5e73\u8861\uff08\u6700\u574f\u60c5\u51b5\u9700\u8981 $\\log n$ \u6b21\uff09\u3002</p> \u63d2\u5165\u64cd\u4f5c\u5220\u9664\u64cd\u4f5c <ol> <li>\u7528\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u63d2\u5165\u64cd\u4f5c\u63d2\u5165\u65b0\u8282\u70b9</li> <li>\u4ece\u65b0\u63d2\u5165\u7684\u8282\u70b9\u5f00\u59cb\u5411\u4e0a\u56de\u6eaf\uff0c\u5e76\u4e0d\u65ad\u66f4\u65b0\u8282\u70b9\u7684 BF \u503c\uff1a<ul> <li>\u5982\u679c BF: $\\pm 1$ -&gt; 0\uff0c\u505c\u6b62\u56de\u6eaf</li> <li>\u5982\u679c BF: 0 -&gt; $\\pm 1$\uff0c\u7ee7\u7eed\u56de\u6eaf</li> <li>\u5982\u679c BF: $\\pm 1$ -&gt; $\\pm 2$\uff0c\u6267\u884c\u76f8\u5e94\u7684 rotate \u64cd\u4f5c\uff0c\u5e76\u505c\u6b62\u56de\u6eaf\uff08\u539f\u56e0\uff1a\u6ce8\u610f\u5230\u8fd9\u65f6\u5019 rotate \u8fd4\u56de\u7684\u5b50\u6811\u5177\u6709\u4e0e\u63d2\u5165\u524d\u76f8\u540c\u7684\u9ad8\u5ea6\uff0c\u4e14\u5176\u6839\u8282\u70b9 BF = 0\uff09</li> </ul> </li> </ol> <p>\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\u3002</p> <ol> <li>\u7528\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5220\u9664\u64cd\u4f5c\u5220\u9664\u76ee\u6807\u8282\u70b9</li> <li>\u4ece\u88ab\u5220\u9664\u7684\u8282\u70b9\u5f00\u59cb\u5411\u4e0a\u56de\u6eaf\uff0c\u5e76\u4e0d\u65ad\u66f4\u65b0\u8282\u70b9\u7684 BF \u503c\uff1a<ul> <li>\u5982\u679c BF: 0 -&gt; $\\pm 1$\uff0c\u505c\u6b62\u56de\u6eaf</li> <li>\u5982\u679c BF: $\\pm 1$ -&gt; 0\uff0c\u7ee7\u7eed\u56de\u6eaf</li> <li>\u5982\u679c BF: $\\pm 1$ -&gt; $\\pm 2$\uff0c\u6267\u884c\u76f8\u5e94\u7684 rotate \u64cd\u4f5c\uff0c\u5e76\u89c6\u60c5\u51b5\u5224\u65ad\u662f\u5426\u9700\u8981\u7ee7\u7eed\u56de\u6eaf\uff08\u82e5 rotate \u8fd4\u56de\u7684\u5b50\u6811\u5177\u6709\u4e0e\u5220\u9664\u524d\u76f8\u540c\u7684\u9ad8\u5ea6\uff0c\u5219\u505c\u6b62\u56de\u6eaf\uff1b\u82e5 rotate \u8fd4\u56de\u7684\u5b50\u6811\u9ad8\u5ea6\u6bd4\u5220\u9664\u524d\u5c0f 1\uff0c\u5219\u7ee7\u7eed\u56de\u6eaf\uff09</li> </ul> </li> </ol> <p>\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\u3002</p>"},{"location":"courses/ads/note1/#splay","title":"Splay\u2009\u6811","text":"<ul> <li>Splay \u6811\u901a\u8fc7\u5c06\u6240\u6709\u8bbf\u95ee\u64cd\u4f5c\u4e0e\u6240\u8c13\u201c\u5c55\u5f00\u201d\u64cd\u4f5c\u76f8\u7ed3\u5408\uff0c\u4ece\u800c\u5b9e\u73b0\u5747\u644a\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6</li> <li>Splay \u6811\u4f7f\u5f97\u6700\u8fd1\u8bbf\u95ee\u7684\u8282\u70b9\u88ab\u79fb\u52a8\u5230\u6839\u8282\u70b9\u9644\u8fd1\uff0c\u4ece\u800c\u53ef\u4ee5\u5feb\u901f\u518d\u6b21\u8bbf\u95ee\uff0c\u5177\u6709\u8f83\u597d\u7684\u8bbf\u95ee\u5c40\u90e8\u6027</li> <li>Splay \u6811\u4e0d\u5177\u5907\u4e25\u683c\u7684\u81ea\u5e73\u8861\u80fd\u529b\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u9ad8\u5ea6\u53ef\u80fd\u662f\u7ebf\u6027\u7684\uff08\u4f8b\u5982\u4ee5\u975e\u964d\u5e8f\u8bbf\u95ee\u6240\u6709\u8282\u70b9\u540e\u5c31\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff09</li> <li>Splay \u6811\u7684\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u644a\u8fd8\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a $\\Omicron(\\log n)$</li> </ul>"},{"location":"courses/ads/note1/#_4","title":"\u5c55\u5f00","text":"<p>\u5c55\u5f00\u64cd\u4f5c\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff0c\u8fd9\u91cc\u8bb0\u5f85\u79fb\u52a8\u5230\u6839\u8282\u70b9\u7684\u8282\u70b9\u4e3a X\uff0c\u8bb0\u5176\u7236\u8282\u70b9\u4e3a P\uff0c\u5982\u679c\u7236\u8282\u70b9\u7684\u7236\u8282\u70b9\u5b58\u5728\uff0c\u5219\u8bb0\u4e3a G\uff1b\u7d20\u6750\u6e90\u81ea Wikipedia\uff1a</p> zigzig-zigzig-zag <p></p> <p>\u5f53 G \u4e0d\u5b58\u5728\u65f6\uff08\u5373 P \u4e3a\u6839\u8282\u70b9\uff09\u6267\u884c\u6b64\u6b65\u9aa4\u3002</p> <p>\u76f4\u63a5 rotate \u5373\u53ef\uff0c\u4e0e AVL \u6811\u7684 rotateRight \u64cd\u4f5c\u662f\u4e00\u81f4\u7684\u3002</p> <p></p> <p>\u5f53 G \u5b58\u5728\u4e14 X \u548c P \u90fd\u662f\u5de6\u513f\u5b50\u6216\u53f3\u513f\u5b50\u65f6\u6267\u884c\u6b64\u6b65\u9aa4\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\u662f\u9996\u5148\u5bf9 P \u548c G \u8fdb\u884c rotate\uff0c\u7136\u540e\u518d\u5bf9 X \u548c P \u8fdb\u884c rotate\uff1b\u6ce8\u610f\u8fd9\u91cc\u7684\u987a\u5e8f\u662f\u91cd\u8981\u7684\uff0c\u5982\u679c\u53cd\u8fc7\u6765\u64cd\u4f5c\u7684\u8bdd\uff0c\u5219\u662f\u4e00\u79cd\u7531  Allen &amp; Munro \u63d0\u51fa\u7684 naive \u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u5b9e\u73b0\u5747\u644a\u5bf9\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> <p></p> <p>\u5f53 G \u5b58\u5728\u4e14 X \u548c P \u4e00\u4e2a\u662f\u5de6\u513f\u5b50\u4e00\u4e2a\u662f\u53f3\u513f\u5b50\u65f6\u6267\u884c\u6b64\u6b65\u9aa4\u3002</p> <p>\u8fdb\u884c\u4e24\u6b21 rotate\uff0c\u4e0e AVL \u6811\u7684 rotateLeftRight \u64cd\u4f5c\u662f\u4e00\u81f4\u7684\u3002</p> <p>\u6240\u6709\u7684\u8bbf\u95ee\u64cd\u4f5c\uff08\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\uff09\u90fd\u4f1a\u5f15\u53d1\u5c55\u5f00\u64cd\u4f5c\uff1a</p> <ul> <li>\u641c\u7d22\uff1a\u76f4\u63a5\u627e\u5230\u76ee\u6807\u8282\u70b9\u5e76\u5bf9\u5176\u8fdb\u884c\u5c55\u5f00\u5373\u53ef</li> <li>\u63d2\u5165\uff1a\u7528\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u63d2\u5165\u64cd\u4f5c\u63d2\u5165\u65b0\u8282\u70b9\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u5c55\u5f00</li> <li>\u5220\u9664\uff1a\u7528\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5220\u9664\u64cd\u4f5c\u5220\u9664\u76ee\u6807\u8282\u70b9\uff0c\u5e76\u5bf9\u5176\u7236\u8282\u70b9\u8fdb\u884c\u5c55\u5f00<ul> <li>\u6216\u8005\uff0c\u5c06\u76ee\u6807\u8282\u70b9\u5c55\u5f00\u5230\u6811\u7684\u6839\u8282\u70b9\u4f4d\u7f6e\uff0c\u7136\u540e\u5220\u9664\u6839\u8282\u70b9\u5e76\u5408\u5e76\u5de6\u53f3\u5b50\u6811</li> </ul> </li> </ul>"},{"location":"courses/ads/note1/#_5","title":"\u644a\u8fd8\u5206\u6790","text":"<p>\u644a\u8fd8\u5206\u6790\uff08amortized analysis\uff09\u4ece\u7a7a\u7684\u7ed3\u6784\u5f00\u59cb\uff0c\u8003\u8651\u53ef\u80fd\u51fa\u73b0\u7684\u64cd\u4f5c\u5e8f\u5217\u4e2d\u7684\u6700\u5dee\u5e8f\u5217\u3002</p> <p>\u644a\u8fd8\u5206\u6790\u662f\u4e00\u79cd\u6709\u7528\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u8865\u5145\u6700\u5dee\u60c5\u51b5\u548c\u5e73\u5747\u60c5\u51b5\u5206\u6790\uff1a\u4e00\u65b9\u9762\u644a\u8fd8\u5206\u6790\u6392\u9664\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u56e0\u800c\u4e0d\u50cf\u7b80\u5355\u7c97\u66b4\u7684\u6700\u5dee\u60c5\u51b5\u5206\u6790\u90a3\u4e48\u60b2\u89c2\uff1b\u53e6\u4e00\u65b9\u9762\u644a\u8fd8\u5206\u6790\u6bd4\u5e73\u5747\u60c5\u51b5\u5206\u6790\u66f4\u52a0\u5bb9\u6613\uff0c\u6bd5\u7adf\u540e\u8005\u6d89\u53ca\u201c\u5982\u4f55\u5b9a\u4e49\u5e73\u5747\u60c5\u51b5\u201d\u7b49\u6982\u7387\u95ee\u9898\u3002</p> <p>\u644a\u8fd8\u5206\u6790\u5e38\u89c1\u65b9\u6cd5\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a</p> <ul> <li>\u805a\u5408\u6cd5\uff1a\u5bfb\u627e\u53ef\u80fd\u51fa\u73b0\u7684\u64cd\u4f5c\u5e8f\u5217\u4e2d\u7684\u6700\u5dee\u5e8f\u5217\u5e76\u5206\u6790\u5176\u6210\u672c $T(n)$\uff0c\u76f4\u63a5\u7528 $T(n)/n$ \u8868\u793a\u6bcf\u4e2a\u64cd\u4f5c\u7684\u644a\u8fd8\u6210\u672c</li> <li>\u6838\u7b97\u6cd5\uff1a\u4f7f\u7528\u201c\u622a\u957f\u8865\u77ed\u201d\u601d\u60f3\uff0c\u4e3a\u6bcf\u4e00\u79cd\u64cd\u4f5c\u4f30\u8ba1\u644a\u8fd8\u6210\u672c $\\hat{c _ i} = c _ i + \\varDelta _ i$ \u4e14 $\\sum _ {i=1} ^ n \\hat{c _ i} \\geq \\sum _ {i=1} ^ n c _ i$</li> <li>\u52bf\u80fd\u6cd5\uff1a\u4f7f\u7528\u201c\u622a\u957f\u8865\u77ed\u201d\u601d\u60f3\uff0c\u8bbe\u8ba1\u52bf\u80fd\u51fd\u6570 $\\varPhi (D _ i)$\uff0c\u4e3a\u6bcf\u4e00\u6b65\u64cd\u4f5c\u4f30\u8ba1\u644a\u8fd8\u6210\u672c $\\hat{c _ i} = c _ i + (\\varPhi (D _ i) - \\varPhi (D _ {i-1}))$ \u4e14 $\\varPhi (D _ n) \\geq \\varPhi (D _ 0)$<ul> <li>Splay \u6811\u7684\u52bf\u80fd\u6cd5\u644a\u8fd8\u5206\u6790\u53ef\u4ee5\u53c2\u8003\u4fee\u4f6c\u7684\u7b14\u8bb0</li> </ul> </li> </ul>"},{"location":"courses/ads/note1/#_6","title":"\u7ea2\u9ed1\u6811","text":"\u663e\u5f0f NIL\u9690\u5f0f NIL <p>\u53f6\u8282\u70b9 NIL \u662f\u7ea2\u9ed1\u6811\u7279\u6709\u7684\u5b9a\u4e49\uff0c\u7528\u4e8e\u8f85\u52a9\u9ed1\u9ad8\u5e73\u8861\u7684\u5b9a\u4e49\u3002</p> <ul> <li>\u7ea2\u9ed1\u6811\u662f\u6ee1\u8db3\u5982\u4e0b\u4e94\u6761\u6027\u8d28\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff1a<ol> <li>\u6bcf\u4e2a\u8282\u70b9\u6216\u8005\u662f\u7ea2\u8272\u7684\uff0c\u6216\u8005\u662f\u9ed1\u8272\u7684\uff1b</li> <li>\u6839\u8282\u70b9\u662f\u9ed1\u8272\u7684\uff08optional\uff09</li> <li>\u53f6\u8282\u70b9\uff08NIL\uff09\u662f\u9ed1\u8272\u7684\uff1b</li> <li>\u7ea2\u8272\u8282\u70b9\u7684\u5b50\u8282\u70b9\u90fd\u662f\u9ed1\u8272\u7684\uff1b</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u4ece\u8be5\u8282\u70b9\u5230\u5176\u6240\u6709\u540e\u4ee3 NIL \u7684\u7b80\u5355\u8def\u5f84\u4e0a\uff0c\u5305\u542b\u7684\u9ed1\u8272\u8282\u70b9\u4e2a\u6570\uff08\u79f0\u4e3a\u8be5\u8282\u70b9\u7684\u9ed1\u9ad8\uff09\u76f8\u540c</li> </ol> </li> <li>\u7ea2\u9ed1\u6811\u7684\u9ad8\u5ea6\u81f3\u591a\u4e3a $2\\log (n+1)$\uff0c\u5176\u4e2d $n$ \u4e3a\u8282\u70b9\u603b\u6570\uff08\u4e0d\u542b NIL\uff09</li> <li>\u7ea2\u9ed1\u6811\u7684\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a $\\Omicron(\\log n)$</li> </ul>"},{"location":"courses/ads/note1/#_7","title":"\u63d2\u5165","text":"<p>\u4e3a\u4e86\u5c3d\u91cf\u4e0d\u7834\u574f\u5e73\u8861\u6027\u8d28\uff0c\u6bcf\u6b21\u63d2\u5165\u7684\u65b0\u8282\u70b9\u9ed8\u8ba4\u67d3\u6210\u7ea2\u8272\u3002\u5982\u679c\u65b0\u8282\u70b9\u63d2\u5165\u7a7a\u6811\u5219\u53ea\u9700\u67d3\u9ed1\u5373\u53ef\uff0c\u5982\u679c\u65b0\u8282\u70b9\u63d2\u5165\u5728\u9ed1\u8272\u8282\u70b9\u4e0b\u9762\u5219\u65e0\u9700\u8c03\u6574\uff0c\u800c\u5982\u679c\u65b0\u8282\u70b9\u63d2\u5165\u5728\u7ea2\u8272\u8282\u70b9\u4e0b\u9762\u5219\u6709\u53ef\u80fd\u7834\u574f\u5e73\u8861\uff0c\u5177\u4f53\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a</p> 123 <p> </p> <p> </p> <p> </p> <p>\u4ee5\u65b0\u8282\u70b9 N \u63d2\u5165\u5728\u7956\u7236 G \u5de6\u4fa7\u4e3a\u4f8b\uff08\u53f3\u4fa7\u5bf9\u79f0\u5373\u53ef\uff09\uff0c\u7d20\u6750\u6e90\u81ea Wikipedia\uff1a</p> <ul> <li>case 1\uff1aN \u7684\u53d4\u53d4 U \u662f\u7ea2\u8272\u7684\uff0c\u65e0\u8bba N \u662f\u5de6\u513f\u5b50\u8fd8\u662f\u53f3\u513f\u5b50<ul> <li>\u5c06\u7236\u4eb2 P \u548c\u53d4\u53d4 U \u67d3\u9ed1\uff0c\u5e76\u628a\u7956\u7236 G \u67d3\u7ea2</li> <li>\u6b64\u65f6\u7956\u7236 G \u6709\u53ef\u80fd\u5f15\u53d1\u65b0\u7684\u95ee\u9898\uff08\u5982\u679c G \u7684\u7236\u4eb2\u662f\u7ea2\u8272\u7684\uff09\u5e76\u5411\u4e0a\u9012\u5f52\u505a\u8c03\u6574</li> </ul> </li> <li>case 2\uff1aN \u7684\u53d4\u53d4 U \u662f\u9ed1\u8272\u7684\uff0c\u4e14 N \u662f\u53f3\u513f\u5b50<ul> <li>\u5bf9 N \u548c\u7236\u4eb2 P \u8fdb\u884c rotate\uff0c\u4e0e AVL \u6811\u7684 rotateLeft \u64cd\u4f5c\u662f\u4e00\u81f4\u7684</li> <li>\u6b64\u65f6\u95ee\u9898\u8fd8\u6ca1\u6709\u89e3\u51b3\uff0c\u4f46\u662f\u8f6c\u53d8\u4e3a case 3</li> </ul> </li> <li>case 3\uff1aN \u7684\u53d4\u53d4 U \u662f\u9ed1\u8272\u7684\uff0c\u4e14 N \u662f\u5de6\u513f\u5b50<ul> <li>\u5bf9 P \u548c\u7956\u7236 G \u8fdb\u884c rotate\uff0c\u4e0e AVL \u6811\u7684 rotateRight \u64cd\u4f5c\u662f\u4e00\u81f4\u7684</li> <li>rotate \u64cd\u4f5c\u540e\u4ea4\u6362 P \u548c G \u7684\u989c\u8272\uff08\u4e8b\u5b9e\u4e0a\u6240\u6709\u7684 rotate \u64cd\u4f5c\u90fd\u4f34\u968f\u7740\u989c\u8272\u4e92\u6362\uff09</li> </ul> </li> </ul>"},{"location":"courses/ads/note1/#_8","title":"\u5220\u9664","text":"<p>\u56de\u987e\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u5220\u9664\u64cd\u4f5c\u4e0d\u96be\u53d1\u73b0\uff0c\u7b2c\u4e09\u79cd\u60c5\u51b5\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b65\u4ea4\u6362\uff08\u6ce8\u610f\u8fd9\u91cc\u53ea\u4ea4\u6362\u952e\u503c\u4e0d\u4ea4\u6362\u989c\u8272\uff09\u76f4\u63a5\u8f6c\u5316\u4e3a\u7b2c\u4e00\u6216\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u7b2c\u4e00\u548c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d\u66ff\u4ee3\u88ab\u5220\u9664\u8282\u70b9\u7684\u662f NIL\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u66ff\u4ee3\u88ab\u5220\u9664\u8282\u70b9\u7684\u662f\u5176\u5b50\u8282\u70b9\u3002\u5982\u679c\u88ab\u5220\u9664\u7684\u8282\u70b9\u662f\u7ea2\u8272\u7684\u5219\u65e0\u9700\u8c03\u6574\uff0c\u5982\u679c\u88ab\u5220\u9664\u7684\u8282\u70b9\u662f\u9ed1\u8272\u7684\u4e14\u66ff\u4ee3\u4e0a\u6765\u7684\u8282\u70b9\u662f\u7ea2\u8272\u5219\u53ea\u9700\u67d3\u9ed1\u5373\u53ef\u3002</p> <p>\u800c\u5982\u679c\u88ab\u5220\u9664\u7684\u8282\u70b9\u662f\u9ed1\u8272\u7684\u4e14\u66ff\u4ee3\u4e0a\u6765\u7684\u8282\u70b9\u4e5f\u662f\u9ed1\u8272\u7684\uff08\u6ce8\u610f NIL \u4e5f\u662f\u9ed1\u8272\u7684\uff09\uff0c\u5219\u95ee\u9898\u4f1a\u53d8\u5f97\u76f8\u5f53\u68d8\u624b\u3002\u6bd4\u8f83\u5de7\u5999\u7684\u601d\u8def\u662f\u5c06\u66ff\u4ee3\u4e0a\u6765\u7684\u9ed1\u8272\u8282\u70b9\u4e34\u65f6\u67d3\u6210\u201c\u53cc\u9ed1\u201d\uff0c\u4ece\u800c\u4fdd\u8bc1\u7b2c\u4e94\u6761\u6027\u8d28\u4e0d\u88ab\u7834\u574f\uff0c\u7136\u540e\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u901a\u8fc7\u8c03\u6574\u6765\u628a\u8fd9\u4e2a\u201c\u53cc\u9ed1\u201d\u8282\u70b9\u591a\u51fa\u6765\u7684\u4e00\u91cd\u9ed1\u8272\u53bb\u9664\uff0c\u4ece\u800c\u4fdd\u8bc1\u7b2c\u4e00\u6761\u6027\u8d28\u4e0d\u88ab\u7834\u574f\u3002\u5177\u4f53\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u56db\u79cd\u60c5\u51b5\uff1a</p> 12.12.234 <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p>\u4ee5\u88ab\u5220\u9664\u7684\u8282\u70b9 N \u4f4d\u4e8e\u7236\u4eb2 P \u5de6\u4fa7\u4e3a\u4f8b\uff08\u53f3\u4fa7\u5bf9\u79f0\u5373\u53ef\uff09\uff0c\u7d20\u6750\u6e90\u81ea Wikipedia\uff1a</p> <ul> <li>case 1\uff1aN \u7684\u5144\u5f1f S \u662f\u7ea2\u8272\u7684<ul> <li>\u5bf9 S \u548c\u7236\u4eb2 P \u8fdb\u884c rotate\uff0c\u4e0e AVL \u6811\u7684 rotateLeft \u64cd\u4f5c\u662f\u4e00\u81f4\u7684\uff1b\u5e76\u4ea4\u6362\u989c\u8272</li> <li>\u6b64\u65f6\u201c\u53cc\u9ed1\u201d\u8fd8\u6ca1\u6709\u88ab\u89e3\u51b3\uff0c\u8f6c\u53d8\u4e3a\u5176\u4ed6 case</li> </ul> </li> <li>case 2\uff1aN \u7684\u5144\u5f1f S \u662f\u9ed1\u8272\u7684\uff0c\u4e14 S \u7684\u4e24\u4e2a\u513f\u5b50\u4e5f\u90fd\u662f\u9ed1\u8272\u7684<ul> <li>\u95ee\u9898\u53ef\u4ee5\u6839\u636e P \u7684\u989c\u8272\u8fdb\u4e00\u6b65\u7ec6\u5206\u6210 2.1 \u548c 2.2</li> <li>2.1 \u9996\u5148\u5c06 S \u67d3\u7ea2\u5e76\u5c06 N \u53bb\u6389\u4e00\u91cd\u9ed1\u8272\uff0c\u7136\u540e\u5c06 P \u67d3\u9ed1\uff0c\u95ee\u9898\u89e3\u51b3</li> <li>2.2 \u9996\u5148\u5c06 S \u67d3\u7ea2\u5e76\u5c06 N \u53bb\u6389\u4e00\u91cd\u9ed1\u8272\uff0c\u7136\u540e\u5c06 P \u67d3\u6210\u201c\u53cc\u9ed1\u201d\uff0c\u95ee\u9898\u5411\u4e0a\u9012\u5f52</li> </ul> </li> <li>case 3\uff1aN \u7684\u5144\u5f1f S \u662f\u9ed1\u8272\u7684\uff0c\u4e14\u8fd1\u4f84\u5b50 C \u662f\u7ea2\u8272\u7684\uff0c\u8fdc\u4f84\u5b50 D \u662f\u9ed1\u8272\u7684<ul> <li>\u5bf9 C \u548c S \u8fdb\u884c rotate\uff0c\u4e0e AVL \u6811\u7684 rotateRight \u64cd\u4f5c\u662f\u4e00\u81f4\u7684\uff1b\u5e76\u4ea4\u6362\u989c\u8272</li> <li>\u6b64\u65f6\u201c\u53cc\u9ed1\u201d\u8fd8\u6ca1\u6709\u88ab\u89e3\u51b3\uff0c\u8f6c\u53d8\u4e3a case 4</li> </ul> </li> <li>case 4\uff1aN \u7684\u5144\u5f1f S \u662f\u9ed1\u8272\u7684\uff0c\u4e14\u8fdc\u4f84\u5b50 D \u662f\u7ea2\u8272\u7684\uff0c\u8fd1\u4f84\u5b50\u968f\u610f<ul> <li>\u5bf9 S \u548c P \u8fdb\u884c rotate\uff0c\u4e0e AVL \u6811\u7684 rotateLeft \u64cd\u4f5c\u662f\u4e00\u81f4\u7684\uff1b\u5e76\u4ea4\u6362\u989c\u8272</li> <li>\u7136\u540e\u5c06 D \u67d3\u9ed1\u5e76\u5c06 N \u53bb\u6389\u4e00\u91cd\u9ed1\u8272\uff0c\u95ee\u9898\u89e3\u51b3</li> </ul> </li> </ul>"},{"location":"courses/ads/note1/#avl_1","title":"\u6bd4\u8f83\u2009AVL\u2009\u6811\u4e0e\u7ea2\u9ed1\u6811","text":"<ul> <li>\u603b\u7684\u6765\u8bf4 AVL \u6811\u662f\u4e25\u683c\u5e73\u8861\u7684\uff0c\u800c\u7ea2\u9ed1\u6811\u53ea\u662f\u4e25\u683c\u7684\u9ed1\u9ad8\u5e73\u8861\uff0c\u5176\u4e2d\u7ea2\u8272\u8282\u70b9\u662f\u5c11\u91cf\u4e0d\u5e73\u8861\u7684\u56e0\u7d20\uff1b\u9664\u6b64\u4e4b\u5916\uff0c\u4e24\u8005\u90fd\u662f\u901a\u8fc7\u65cb\u8f6c\u5b9e\u73b0\u518d\u5e73\u8861\uff0c\u6ca1\u6709\u5f88\u5927\u7684\u5dee\u522b\uff1b\u4f46\u6709\u8da3\u7684\u662f\uff0c\u5f88\u591a\u5e93\u51fd\u6570\u5728\u9009\u62e9\u5e73\u8861\u641c\u7d22\u6811\u5b9e\u73b0\u529f\u80fd\u65f6\u4f1a\u66f4\u5e38\u7528\u7ea2\u9ed1\u6811\uff08\u4f8b\u5982 C++ \u7684 std::map \u548c Java \u7684 HashMap \u7b49\uff09</li> <li>AVL \u6811\u6700\u5dee\u9ad8\u5ea6\u7ea6\u4e3a $1.44 \\log n$\uff0c\u7ea2\u9ed1\u6811\u6700\u5dee\u9ad8\u5ea6\u7ea6\u4e3a $2 \\log n$\uff0c\u4ece\u800c\u5982\u679c\u5bf9\u4e00\u68f5\u6811\u7684\u641c\u7d22\u64cd\u4f5c\u5c45\u591a\uff0c\u5219 AVL \u6811\u53ef\u80fd\u4f1a\u662f\u66f4\u597d\u7684\u9009\u62e9</li> <li>AVL \u6811\u867d\u7136\u63d2\u5165\u53ea\u9700\u8981\u5e38\u6570\u6b21\u65cb\u8f6c\uff0c\u4f46\u5728\u5220\u9664\u65f6\u53ef\u80fd\u9700\u8981 $\\Omicron(\\log n)$ \u6b21\u65cb\u8f6c\uff0c\u800c\u7ea2\u9ed1\u6811\u7684\u63d2\u5165\u548c\u5220\u9664\u90fd\u6700\u591a\u53ea\u9700\u8981\u5e38\u6570\u6b21\u65cb\u8f6c\uff1b\u5f88\u591a\u4eba\u8ba4\u4e3a\u4ee3\u7801\u5b9e\u73b0\u65f6\u65cb\u8f6c\u662f\u63d2\u5165\u548c\u5220\u9664\u4e2d\u5f00\u9500\u6700\u5927\u7684\u64cd\u4f5c\uff0c\u4ece\u800c\u5982\u679c\u5bf9\u4e00\u68f5\u6811\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u5f88\u591a\uff0cAVL \u6811\u4e0d\u5982\u7ea2\u9ed1\u6811\u5feb</li> <li>AVL \u6811\u9700\u8981\u7ef4\u62a4\u5e73\u8861\u56e0\u5b50\uff0c\u800c\u7ea2\u9ed1\u6811\u53ea\u9700\u8981 1 bit \u6765\u8868\u793a\u7ea2\u4e0e\u9ed1\uff0c\u66f4\u8282\u7701\u7a7a\u95f4</li> <li>\u7ea2\u9ed1\u6811\u662f\u53ef\u6301\u4e45\u5316\u7684\u6570\u636e\u7ed3\u6784\uff0c\u56e0\u6b64\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u5bb9\u6613\u5b9e\u73b0\uff1b\u800c\u4e14\u7ea2\u9ed1\u6811\u652f\u6301\u5206\u88c2\u3001\u5408\u5e76\u7b49\u64cd\u4f5c\uff0c\u8fd9\u4f7f\u5f97\u5b83\u53ef\u4ee5\u505a\u6279\u91cf\u5e76\u884c\u7684\u63d2\u5165\u3001\u5220\u9664</li> </ul>"},{"location":"courses/ads/note1/#b","title":"B+\u2009\u6811","text":"<ul> <li>$M$ \u9636 B+ \u6811\u662f\u6ee1\u8db3\u5982\u4e0b\u6027\u8d28\u7684\u6811\uff1a<ol> <li>\u6839\u8282\u70b9\u6216\u8005\u662f\u53f6\u5b50\uff0c\u6216\u8005\u6709 2 \u5230 $M$ \u4e2a\u513f\u5b50</li> <li>\u975e\u53f6\u8282\u70b9\uff08\u6839\u8282\u70b9\u9664\u5916\uff09\u7d22\u5f15 $\\lceil M/2 \\rceil$ \u5230 $M$ \u4e2a\u513f\u5b50</li> <li>\u53f6\u5b50\u8282\u70b9\uff08\u6839\u8282\u70b9\u9664\u5916\uff09\u5b58\u50a8 $\\lceil M/2 \\rceil$ \u5230 $M$ \u4e2a\u6570\u636e</li> </ol> </li> <li>2-3-4 \u6811\uff084 \u9636\uff09\u548c 2-3 \u6811\uff083 \u9636\uff09\u8fd9\u79cd\u522b\u79f0\u8868\u8fbe\u4e86\u8282\u70b9\u53ef\u80fd\u542b\u6709\u7684\u513f\u5b50\u4e2a\u6570</li> <li>\u4e0d\u540c\u5730\u65b9\u5bf9 B+ \u6811\u7684\u5b9a\u4e49\u5e76\u4e0d\u5b8c\u5168\u76f8\u540c\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e9b\u7248\u672c\uff08\u524d\u4e24\u5f20\u6765\u81ea\u8fd9\u95e8\u8bfe\u7a0b\u7684 PPT\uff0c\u7b2c\u4e09\u7ae0\u6765\u81ea\u6570\u636e\u5e93\u6559\u6750 Database System Concepts 7<sup>th</sup>\uff09</li> </ul> 2-3-4 tree2-3 treedb tree"},{"location":"courses/ads/note1/#_9","title":"\u641c\u7d22\u3001\u63d2\u5165\u4e0e\u5220\u9664","text":"<ul> <li>\u641c\u7d22\uff1a\u641c\u7d22\u65b9\u6cd5\u662f\u5f88\u663e\u7136\u7684<ul> <li>\u4e00\u65b9\u9762\uff0c\u6811\u7684\u9ad8\u5ea6\u4e0d\u8d85\u8fc7 $\\Omicron(\\log _ {\\lceil M/2 \\rceil} N)$\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u7531\u4e8e\u6bcf\u5c42\u7684\u952e\u503c\u662f\u6709\u5e8f\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u5224\u65ad\u641c\u7d22\u65b9\u5411\uff0c\u590d\u6742\u5ea6\u4e3a $\\Omicron(\\log _ 2 M)$\uff1b\u7efc\u4e0a\u53ef\u5f97\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(\\log _ {\\lceil M/2 \\rceil} N \\cdot \\log _ 2 M) = \\Omicron(\\log N)$</li> </ul> </li> <li>\u63d2\u5165\uff1a\u63d2\u5165\u65b9\u6cd5\u4e5f\u662f\u5f88\u663e\u7136\u7684\uff0c\u5f53\u8282\u70b9\u6ea2\u51fa\u65f6\uff0c\u5206\u88c2\u8282\u70b9\u5e76\u5411\u4e0a\u4f20\u9012<ul> <li>\u4e00\u65b9\u9762\uff0c\u6811\u7684\u9ad8\u5ea6\u4e0d\u8d85\u8fc7 $\\Omicron(\\log _ {\\lceil M/2 \\rceil} N)$\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u6bcf\u5c42\u7684\u64cd\u4f5c\u6700\u591a\u662f $\\Omicron(M)$ \u7684\uff1b\u7efc\u4e0a\u53ef\u5f97\u63d2\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(\\log _ {\\lceil M/2 \\rceil} N \\cdot M) = \\Omicron(\\frac{M}{\\log M} \\log N)$</li> </ul> </li> <li>\u5220\u9664\uff1a\u5f53\u8282\u70b9\u5411\u4e0b\u6ea2\u51fa\u65f6\uff0c\u5c1d\u8bd5\u91cd\u65b0\u5206\u914d\u952e\u503c\uff08\u4e0e\u76f8\u90bb\u7684\u5144\u5f1f\u8282\u70b9\uff09\u6216\u76f4\u63a5\u5408\u5e76\u8282\u70b9\uff08\u5f53\u91cd\u65b0\u5206\u914d\u5931\u8d25\u65f6\uff09<ul> <li>\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\u4e0e\u63d2\u5165\u7c7b\u4f3c\uff0c\u4e5f\u4e3a $\\Omicron(\\frac{M}{\\log M} \\log N)$</li> </ul> </li> </ul>"},{"location":"courses/ads/note1/#b_1","title":"\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u2009B+\u2009\u6811","text":"<ul> <li>B+ \u6811\u548c AVL \u6811\u3001\u7ea2\u9ed1\u6811\u7b49\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u76ee\u7684\u4e0d\u5b8c\u5168\u4e00\u81f4\uff1a\u524d\u8005\u670d\u52a1\u4e8e\u6570\u636e\u5e93\u7cfb\u7edf\u6216\u6587\u4ef6\u7cfb\u7edf\uff0c\u641c\u7d22\u5b58\u50a8\u5728\u786c\u76d8\u4e2d\u7684\u6d77\u91cf\u6570\u636e\uff0c\u800c\u540e\u8005\u670d\u52a1\u4e8e\u4e00\u822c\u7684\u5185\u5b58\u8fd0\u7b97<ul> <li>B+ \u6811\u5177\u6709\u6781\u5c0f\u7684\u6811\u9ad8\uff08$M$ \u5f88\u5927\u65f6\uff09\u4ece\u800c\u78c1\u76d8\u5bfb\u8def\u6b21\u6570\u5927\u5e45\u51cf\u5c11\uff0c\u9002\u5408\u4e8e\u4ee5\u9875\u4e3a\u5355\u4f4d\u8bfb\u5199\u7684\u5b58\u50a8\u7cfb\u7edf</li> </ul> </li> <li>\u4e8b\u5b9e\u4e0a\u7ea2\u9ed1\u6811\u7684\u63d0\u51fa\u6b63\u662f\u4e3a\u4e86\u66f4\u65b9\u4fbf\u7684\u5b9e\u73b0 B \u6811\uff0c\u6211\u4eec\u5b66\u4e60\u7684\u7ea2\u9ed1\u6811\u5bf9\u5e94\u4e8e 2-3-4 \u6811\uff0c\u800c Sedgewick \u63d0\u51fa\u7684\u4e00\u79cd\u53d8\u4f53\u5de6\u503e\u7ea2\u9ed1\u6811\u5219\u5bf9\u5e94\u4e8e 2-3 \u6811</li> </ul>"},{"location":"courses/ads/note1/#_10","title":"\u5012\u6392\u7d22\u5f15","text":"<ul> <li>\u5012\u6392\u7d22\u5f15\u662f\u4e00\u79cd\u6570\u636e\u5e93\u7d22\u5f15\uff0c\u5b58\u50a8\u4ece\u5185\u5bb9\u5230\u5176\u5728\u6587\u6863\u4e2d\u4f4d\u7f6e\u7684\u6620\u5c04</li> <li>\u5012\u6392\u7d22\u5f15\u7684\u76ee\u7684\u662f\u652f\u6301\u5feb\u901f\u5168\u6587\u641c\u7d22\uff0c\u4ee3\u4ef7\u662f\u5c06\u65b0\u6587\u6863\u6dfb\u52a0\u8fdb\u6570\u636e\u5e93\u65f6\u5f00\u9500\u8f83\u5927</li> </ul> <p>\u5012\u6392\u7d22\u5f15\u76f8\u5173\u5185\u5bb9\u6bd4\u8f83\u7b80\u5355\uff0c\u8fd9\u91cc\u4ec5\u5217\u51fa\u4e00\u4e9b\u503c\u5f97\u6ce8\u610f\u7684\u7ec6\u8282\uff1a</p> <ul> <li>\u5012\u6392\u7d22\u5f15\u4e2d\u4fdd\u5b58\u5355\u8bcd\u7684\u51fa\u73b0\u9891\u6b21\u662f\u56e0\u4e3a\u5f53\u641c\u7d22\u5305\u542b\u591a\u4e2a\u5173\u952e\u5b57\u65f6\uff0c\u4ece\u9891\u6b21\u8f83\u5c11\u7684\u8bcd\u5f00\u59cb\u641c\u7d22\u4f1a\u66f4\u5feb</li> <li>\u5012\u6392\u7d22\u5f15\u7684\u6784\u5efa\u6709\u5f88\u591a\u6280\u5de7\uff0c\u6bd4\u5982 stemming\u3001stop words \u7b49\u5206\u8bcd\u7b56\u7565\uff0c\u8bbf\u95ee\u5355\u8bcd\u65f6\u9009\u62e9\u4f7f\u7528\u641c\u7d22\u6811\u8fd8\u662f\u54c8\u5e0c\uff0c\u5206\u5e03\u5f0f\u5916\u5b58\u9009\u62e9 term-partitioned \u8fd8\u662f document-partitioned</li> <li>\u641c\u7d22\u5f15\u64ce\u7684\u8bc4\u4ef7\uff1a<ul> <li>\u533a\u5206 data retrieval \u548c information retrieval\uff0c\u524d\u8005\u641c\u7d22\u7684\u662f\u7ed3\u6784\u5316\u7684\u6570\u636e\uff0c\u540e\u8005\u641c\u7d22\u7684\u662f\u975e\u7ed3\u6784\u5316\u7684\u6587\u7ae0\u3001\u7f51\u9875\u7b49</li> <li>\u54cd\u5e94\u65f6\u95f4\u548c\u7d22\u5f15\u7a7a\u95f4\u90fd\u662f\u8bc4\u4ef7\u8fd9\u4e24\u79cd\u641c\u7d22\u7684\u6307\u6807\uff0c\u800c\u7b54\u6848\u96c6\u7684\u76f8\u5173\u5ea6\u5219\u53ea\u9488\u5bf9\u540e\u8005</li> <li>\u7b54\u6848\u96c6\u7684\u76f8\u5173\u5ea6\u53ef\u4ee5\u901a\u8fc7\u51c6\u786e\u5ea6\u3001\u56de\u8c03\u7387\u7b49\u6307\u6807\u91cf\u5316</li> </ul> </li> </ul>"},{"location":"courses/ads/note1/#_11","title":"\u5de6\u5f0f\u5806","text":"<p>\u7ecf\u5178\u7684\u4e8c\u53c9\u5806\u53ef\u4ee5\u5728 $\\Omicron(\\log n)$ \u65f6\u95f4\u5185\u5b9e\u73b0\u63d2\u5165\u3001\u5220\u9664\u3001\u4fee\u6539\u6743\u503c\u7b49\u64cd\u4f5c\uff0c\u4ee5\u53ca\u7ebf\u6027\u65f6\u95f4\u5efa\u5806\u3002\u800c\u5bf9\u4e8e\u5408\u5e76\u64cd\u4f5c\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u4f3c\u4e4e\u662f\u76f4\u63a5\u5408\u5e76\u4e24\u4e2a\u5b58\u50a8\u4e8c\u53c9\u5806\u7684\u6570\u7ec4\u5e76\u5efa\u5806\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(n)$\uff0c\u800c\u6211\u4eec\u5e0c\u671b\u5408\u5e76\u64cd\u4f5c\u4e5f\u80fd\u5728 $\\Omicron(\\log n)$ \u65f6\u95f4\u5185\u5b8c\u6210\uff0c\u6240\u4ee5\u9700\u8981\u5b9a\u4e49\u65b0\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e5f\u5c31\u662f\u4e0b\u6587\u7684\u4e09\u79cd\u53ef\u5408\u5e76\u5806\u3002</p> <ul> <li>\u8282\u70b9\u7684\u96f6\u8def\u5f84\u957f Npl \u5b9a\u4e49\u4e3a\u4ece\u8be5\u8282\u70b9\u5230\u4e00\u4e2a\u6ca1\u6709\u513f\u5b50\u7684\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\uff0c\u4e14\u89c4\u5b9a Npl(null) = -1<ul> <li>Npl(X) = min{ Npl(X-&gt;left), Npl(X-&gt;right) } + 1</li> </ul> </li> <li>\u5de6\u5f0f\u5806\u8981\u6c42\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u513f\u5b50 Npl \u5927\u4e8e\u7b49\u4e8e\u53f3\u513f\u5b50 Npl</li> <li>\u5de6\u5f0f\u5806\u4e2d\u82e5\u53f3\u8def\u5f84\u4e0a\u6709 $r$ \u4e2a\u8282\u70b9\uff0c\u5219\u6574\u4e2a\u5806\u81f3\u5c11\u6709 $2 ^ r - 1$ \u4e2a\u8282\u70b9</li> </ul>"},{"location":"courses/ads/note1/#_12","title":"\u5408\u5e76","text":"<p>\u5de6\u5f0f\u5806\u7684\u63d2\u5165\u3001\u5220\u9664\u6700\u5c0f\u503c\uff08\u6216\u6700\u5927\u503c\uff09\u90fd\u6700\u7ec8\u5f52\u7ed3\u4e8e\u5408\u5e76\u64cd\u4f5c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5b8c\u5168\u6765\u6e90\u4e8e\u5408\u5e76\u64cd\u4f5c\uff1a</p> <ul> <li>\u63d2\u5165\u53ef\u4ee5\u89c6\u4f5c\u4e00\u4e2a\u5de6\u5f0f\u5806\u548c\u4e00\u4e2a\u5355\u8282\u70b9\u7684\u5de6\u5f0f\u5806\u7684\u5408\u5e76</li> <li>\u5220\u9664\u6700\u5c0f\u503c\uff08\u6216\u6700\u5927\u503c\uff09\u76f4\u63a5\u5220\u9664\u6839\u8282\u70b9\u5e76\u5408\u5e76\u4e24\u4e2a\u5b50\u6811\u5373\u53ef</li> </ul> 1234 <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>\u4e0b\u9762\u5c55\u793a\u5408\u5e76\u64cd\u4f5c\u7684\u9012\u5f52\u5b9e\u73b0\uff0c\u56fe\u7247\u6e90\u81ea Wikipedia\uff1a</p> <ol> <li>\u5411\u4e0b\u9012\u8fdb\u8fdb\u884c\u5806\u7684\u5408\u5e76</li> <li>\u5411\u4e0a\u56de\u5f52\u8fdb\u884c Npl \u7684\u66f4\u65b0</li> </ol> <pre><code>PriorityQueue merge(PriorityQueue H1, PriorityQueue H2) {\n    if (H1 == NULL) return H2;\n    if (H2 == NULL) return H1;\n    if (H1-&gt;Element &lt; H2-&gt;Element) return mergeHelper(H1, H2);\n    else                           return mergeHelper(H2, H1);\n}\n\nstatic PriorityQueue mergeHelper(PriorityQueue H1, PriorityQueue H2) {\n    if (H1-&gt;Left == NULL) {\n        H1-&gt;Left = H2;\n    } else {\n        H1-&gt;Right = merge(H1-&gt;Right, H2);\n        if (H1-&gt;Left-&gt;Npl &lt; H1-&gt;Right-&gt;Npl)\n            swapChildren(H1);\n        H1-&gt;Npl = H1-&gt;Right-&gt;Npl + 1;\n    }\n    return H1;\n}\n</code></pre> <p>\u5408\u5e76\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(\\log n _ 1 + n _ 2) = \\Omicron(\\log n _ 1 n _ 2) = \\Omicron(\\log \\sqrt{n _ 1 n _ 2}) = \\Omicron(\\log (n _ 1 + n _ 2))$\uff0c\u5176\u4e2d $n _ 1, n _ 2$ \u5206\u522b\u8868\u793a\u4e24\u4e2a\u5806\u7684\u8282\u70b9\u6570\uff0c\u6ce8\u610f\u5230\u6700\u540e\u4e00\u6b65\u8fd0\u7528\u4e86\u57fa\u672c\u4e0d\u7b49\u5f0f\u3002</p> <p>\u5de6\u5f0f\u5806\u7684\u5408\u5e76\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fed\u4ee3\u5b9e\u73b0\uff0c\u5177\u4f53\u53ef\u4ee5\u7406\u89e3\u4e3a\u9996\u5148\u8fdb\u884c\u4e00\u4e2a\u6392\u5e8f\u5e76\u5408\u5e76\uff08\u6392\u5e8f\u7684\u5bf9\u8c61\u662f\u4e24\u4e2a\u5806\u53f3\u8def\u5f84\u4e0a\u7684\u5404\u4e2a\u8282\u70b9\u53ca\u5176\u5de6\u5b50\u6811\uff09\uff0c\u7136\u540e\u81ea\u4e0b\u800c\u4e0a\u66f4\u65b0 Npl\uff0c\u8be6\u7ec6\u8fc7\u7a0b\u53ef\u4ee5\u53c2\u8003\u4fee\u4f6c\u7684\u7b14\u8bb0\u3002</p>"},{"location":"courses/ads/note1/#_13","title":"\u659c\u5806","text":"<ul> <li>\u659c\u5806\u4e0e\u5de6\u5f0f\u5806\u7684\u5173\u7cfb\u7c7b\u4f3c\u4e8e Splay \u6811\u4e0e AVL \u6811\u7684\u5173\u7cfb<ul> <li>Splay \u6811\u4e0d\u518d\u7ef4\u62a4 BF\uff0c\u800c\u662f\u5728\u6bcf\u6b21\u8bbf\u95ee\u8282\u70b9\u540e\u4e0d\u65ad\u5c06\u5176\u5411\u4e0a\u7ffb\u76f4\u81f3\u6839\u8282\u70b9</li> <li>\u659c\u5806\u4e0d\u518d\u7ef4\u62a4 Npl\uff0c\u800c\u662f\u5728\u5408\u5e76\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u5c06\u5de6\u53f3\u5b50\u6811\u505a\u4ea4\u6362\u76f4\u81f3\u5408\u5e76\u5b8c\u6210</li> </ul> </li> <li>\u659c\u5806\u7684\u5408\u5e76\u64cd\u4f5c\u7684\u644a\u8fd8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(\\log n)$\uff0c\u5176\u4e2d $n = n _ 1 + n _ 2$</li> </ul>"},{"location":"courses/ads/note1/#_14","title":"\u5408\u5e76","text":"<p>\u6700\u76f4\u89c2\u7684\u7406\u89e3\u7c7b\u4f3c\u4e8e\u5de6\u5f0f\u5806\u7684\u8fed\u4ee3\u5f0f\u5408\u5e76\uff0c\u5c06\u4e24\u4e2a\u539f\u59cb\u5806\u7684\u53f3\u8def\u5f84\u8282\u70b9\u6392\u5e8f\u540e\u4f9d\u6b21\u653e\u5728\u5806\u7684\u5de6\u8def\u5f84\u4e0a\uff0c\u4e14\u5b83\u4eec\u7684\u5de6\u5b50\u6811\u90fd\u6362\u5230\u5404\u81ea\u7684\u53f3\u8fb9\u3002</p> beginend <p> </p> <p> </p>"},{"location":"courses/ads/note1/#_15","title":"\u644a\u8fd8\u5206\u6790","text":"<p>\u644a\u4e0d\u52a8\u4e00\u70b9\u2026\u2026</p>"},{"location":"courses/ads/note1/#_16","title":"\u4e8c\u9879\u5806","text":"<p>\u7ecf\u5178\u7684\u4e8c\u53c9\u5806\u53ef\u4ee5\u5728 $\\Omicron(n)$ \u65f6\u95f4\u5185\u5b9e\u73b0 $n$ \u4e2a\u8282\u70b9\u7684\u63d2\u5165\u5efa\u5806\u64cd\u4f5c\uff0c\u4ece\u800c\u62e5\u6709\u5e38\u6570\u7684\u5747\u644a\u65f6\u95f4\uff0c\u800c\u5de6\u5f0f\u5806\u548c\u659c\u5806\u4e0d\u53ef\u4ee5\u3002\u4e8c\u9879\u5806\u7684\u5f15\u5165\u662f\u4e3a\u4e86\u5728\u4fdd\u6301\u5bf9\u6570\u65f6\u95f4\u5408\u5e76\u64cd\u4f5c\u7684\u6761\u4ef6\u4e0b\u8fdb\u4e00\u6b65\u4f18\u5316\u63d2\u5165\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p> <p></p> <ul> <li>\u4e8c\u9879\u5806\u662f\u7531\u82e5\u5e72\u4e8c\u9879\u6811\uff08\u9636\u6570\u76f8\u5f02\u4e14\u6ee1\u8db3\u5806\u6027\u8d28\uff09\u6784\u6210\u7684\u68ee\u6797</li> <li>$k$ \u9636\u4e8c\u9879\u6811\u6709 $2 ^ k$ \u4e2a\u8282\u70b9\uff0c\u6df1\u5ea6\u4e3a $d$ \u7684\u8282\u70b9\u6570\u662f\u4e8c\u9879\u7cfb\u6570 $\\begin{pmatrix} k \\cr d \\end{pmatrix}$</li> <li>\u4e8c\u9879\u5806\u7684\u7ed3\u6784\u4e0e\u4e8c\u8fdb\u5236\u662f\u76f8\u547c\u5e94\u7684\uff0c\u53ef\u4ee5\u501f\u52a9\u4e8c\u8fdb\u5236\u5e2e\u52a9\u7406\u89e3</li> <li>\u4e8c\u9879\u5806\u7684\u63d2\u5165\u64cd\u4f5c\u662f $\\Omicron(\\log n)$ \u7684\uff0c\u4f46\u4ece\u7a7a\u5f00\u59cb\u5efa\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\Omicron(1)$ \u7684</li> </ul>"},{"location":"courses/ads/note1/#_17","title":"\u5408\u5e76\u3001\u63d2\u5165\u4e0e\u5220\u9664","text":"<p>\u63d2\u5165\u4e0e\u5220\u9664\u6700\u5c0f\u503c\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5f52\u7ed3\u4e8e\u5408\u5e76\u64cd\u4f5c\uff1a\u63d2\u5165\u76f8\u5f53\u4e8e\u5408\u5e76\u4e00\u4e2a\u5355\u8282\u70b9\u7684 $0$ \u9636\u4e8c\u9879\u6811\uff1b\u5220\u9664\u6700\u5c0f\u503c\u64cd\u4f5c\u9996\u5148\u7528 $\\Omicron(\\log n)$ \u65f6\u95f4\u627e\u5230\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5408\u5e76\u4e24\u4e2a\u5806\uff0c\u5176\u4e00\u662f\u539f\u59cb\u5806\u79fb\u9664 $B _ k$ \u540e\u5269\u4e0b\u7684\u5806\uff0c\u5176\u4e8c\u662f $B _ k$ \u79fb\u9664\u6839\u8282\u70b9\u540e\u5269\u4e0b\u7684\u5806\u3002</p> \u5408\u5e76\u5220\u9664 <pre><code>BinTree combine(BinTree T1, BinTree T2) {\n    if (T1-&gt;Element &gt; T2-&gt;Element) return combine(T2, T1);\n    T2-&gt;NextSibling = T1-&gt;LeftChild;\n    T1-&gt;LeftChild = T2;\n    return T1;\n}\n\nBinQueue merge(BinQueue H1, BinQueue H2) {\n    if (H1-&gt;CurrentSize + H2-&gt;CurrentSize &gt; Capacity) error();\n    H1-&gt;CurrentSize += H2-&gt;CurrentSize;\n    BinTree T1, T2, Carry = NULL;\n    for (int i = 0, j = 1; j &lt;= H1-&gt;CurrentSize; i++, j *= 2) {\n        T1 = H1-&gt;TheTrees[i];\n        T2 = H2-&gt;TheTrees[i];\n        switch(4 * !!Carry + 2 * !!T2 + !!T1) { /* convert to bool type */\n            case 0: /* 000 */\n            case 1: /* 001 */                                                  break;\n            case 2: /* 010 */ H1-&gt;TheTrees[i] = T2; H2-&gt;TheTrees[i] = NULL;    break;\n            case 3: /* 011 */ Carry = combine(T1, T2);\n                              H1-&gt;TheTrees[i] = H2-&gt;TheTrees[i] = NULL;        break;\n            case 4: /* 100 */ H1-&gt;TheTrees[i] = Carry; Carry = NULL;           break;\n            case 5: /* 101 */ Carry = combine(T1, Carry);\n                              H1-&gt;TheTrees[i] = NULL;                          break;\n            case 6: /* 110 */ Carry = combine(T2, Carry);\n                              H2-&gt;TheTrees[i] = NULL;                          break;\n            case 7: /* 111 */ Carry = combine(T1, T2);\n                              H1-&gt;TheTrees[i] = Carry; H2-&gt;TheTrees[i] = NULL; break;\n        }\n    }\n    return H1;\n}\n</code></pre> <pre><code>ElementType deleteMin(BinQueue H) {\n    if (isEmpty(H)) { error(); return -Infinity; }\n    ElementType MinItem = Infinity;\n    int MinTree;\n    for (int i = 0; i &lt; MaxTrees; i++) {\n        /* MaxTree can be replaced by the actual number of roots */\n        if (H-&gt;TheTrees[i] &amp;&amp; H-&gt;TheTrees[i]-&gt;Element &lt; MinItem) {\n            MinItem = H-&gt;TheTrees[i]-&gt;Element;\n            MinTree = i;\n        }\n    }\n    Position DeletedTree = H-&gt;TheTrees[i]-&gt;LeftChild;\n    H-&gt;TheTrees[i] = NULL;\n    BinQueue DeletedQueue = Initialize();\n    for (int j = MinTree - 1; j &gt;= 0; j--) {\n        DeletedQueue-&gt;TheTrees[j] = DeletedTree;\n        DeletedTree = DeletedTree-&gt;NextSibling;\n        DeletedQueue-&gt;TheTrees[j]-&gt;NextSibling = NULL;\n    }\n    DeletedQueue-&gt;CurrentSize = (1 &lt;&lt; MinTree) - 1; /* 2^{MinTree} - 1 */\n    H-&gt;CurrentSize -= DeletedQueue-&gt;CurrentSize + 1;\n    H = merge(H, DeletedQueue);\n    return MinItem;\n}\n</code></pre>"},{"location":"courses/ads/note1/#_18","title":"\u644a\u8fd8\u5206\u6790","text":"<p>\u6c42\u89e3\u4ece\u7a7a\u5f00\u59cb\u63d2\u5165\u5efa\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fdb\u884c\u644a\u8fd8\u5206\u6790\u3002</p> <p>\u6700\u7b80\u5355\u7684\u4e00\u79cd\u601d\u8def\u662f\u805a\u5408\u6cd5\uff0c\u7c7b\u6bd4\u5408\u5e76\u64cd\u4f5c\u4e0e\u4e8c\u8fdb\u5236\u52a0\u6cd5\u53ef\u4ee5\u53d1\u73b0\uff0c\u4ece\u7a7a\u5f00\u59cb\u63d2\u5165 $n$ \u4e2a\u8282\u70b9\u5efa\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u4ece $0$ \u5f00\u59cb\u4e0d\u65ad\u52a0 $1$ \u505a\u4e8c\u8fdb\u5236\u52a0\u6cd5\u65f6\u6bd4\u7279\u7ffb\u8f6c\u603b\u6b21\u6570\u662f\u4e00\u81f4\u7684\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6700\u4f4e\u4f4d\u6bcf\u6b21\u52a0 $1$ \u90fd\u4f1a\u7ffb\u8f6c\uff0c\u6b21\u4f4e\u4f4d\u6bcf\u4e24\u6b21\u52a0 $1$ \u7ffb\u8f6c\u4e00\u6b21\uff0c\u5012\u6570\u7b2c\u4e09\u4f4d\u6bcf\u56db\u6b21\u52a0 $1$ \u7ffb\u8f6c\u4e00\u6b21\u2026\u2026\u4ee5\u6b64\u7c7b\u63a8 $n$ \u6b21\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(n + \\frac{n}{2} + \\frac{n}{4} + \\cdots + \\frac{n}{2 ^ {\\lfloor \\log n \\rfloor + 1}}) = \\Omicron(2n)$\uff0c\u4ece\u800c\u5355\u6b65\u64cd\u4f5c\u7684\u644a\u8fd8\u65f6\u95f4\u662f $\\Omicron(1)$ \u7684\u3002</p>"},{"location":"courses/ads/note2/","title":"\u7b97\u6cd5\u5206\u6790","text":"<p> \u7ea6 551 \u4e2a\u5b57  49 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"},{"location":"courses/ads/note2/#_2","title":"\u56de\u6eaf","text":"<ul> <li>\u56de\u6eaf\u6cd5\u7528\u4e8e\u5bfb\u627e\u67d0\u4e9b\u8ba1\u7b97\u95ee\u9898\uff08\u5c24\u5176\u662f\u7ea6\u675f\u6ee1\u8db3\u95ee\u9898\uff09\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u662f\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u66b4\u529b\u679a\u4e3e</li> <li>\u56de\u6eaf\u6cd5\u5728\u9690\u5f0f\u7684\u641c\u7d22\u6811\u4e0a\u6267\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u8fdb\u884c\u8bc4\u4f30\uff0c\u5f53\u6ca1\u6709\u5fc5\u8981\u7ee7\u7eed\u5411\u4e0b\u641c\u7d22\u65f6\u679c\u65ad\u653e\u5f03\u8be5\u8282\u70b9\u53ca\u5176\u5b50\u6811\uff08\u526a\u679d\uff09</li> <li>\u56de\u6eaf\u6cd5\u904d\u5386\u7684\u5b9e\u9645\u6811\u53ea\u662f\u6574\u68f5\u641c\u7d22\u6811\u7684\u4e00\u90e8\u5206\uff0c\u56de\u6eaf\u6cd5\u7684\u6548\u7387\u4e0e\u6570\u636e\u89c4\u6a21\u3001\u526a\u679d\u7b56\u7565\u3001\u5b9e\u9645\u6811\u7684\u5927\u5c0f\u4e0e\u5f62\u6001\u6709\u5173\uff0c\u590d\u6742\u5ea6\u5206\u6790\u901a\u5e38\u8f83\u96be\u5b8c\u6210</li> </ul> <p>\u56de\u6eaf\u6cd5\u6709\u8bb8\u591a\u7ecf\u5178\u6848\u4f8b\uff0c\u6bd4\u5982\u516b\u7687\u540e\u95ee\u9898\u548c\u4e0b\u9762\u7528\u4f2a\u4ee3\u7801\u5c55\u793a\u7684\u6536\u8d39\u516c\u8def\u91cd\u5efa\u95ee\u9898\uff1a</p> \u56de\u6eaf\u6cd5\u6a21\u7248\u6536\u8d39\u516c\u8def\u91cd\u5efa\u95ee\u9898 <pre><code>bool backtracking(int i) {\n    bool found = false;\n    if (i &gt; N) return true; /* solved with X[1]...X[N] */\n    for (each X[i] in S[i]) {\n        /* check if satisfies the restriction R */\n        ok = check(X, R);            /* pruning */\n        if (ok) {\n            count X[i] in;\n            found = backtracking(i+1);\n            if (!found) undo(i); /* backtrack to X[1]...X[i-1] */\n        }\n        if (found) break;\n    }\n    return found;\n}\n</code></pre> <pre><code>bool reconstruct(DistType[] X, DistSet D, int N, int left, int right) {\n    /* X[1]...X[left-1] and X[right+1]...X[N] are solved */\n    bool found = false;\n    if (isEmpty(D)) return true;\n    maxD = findMax(D);\n    /* option 1: X[right] = maxD */\n    /* check if every |maxD-X[i]| is in D for all X[i]'s that have been solved */\n    ok = check(maxD, N, left, right);\n    if (ok) {\n        X[right] = maxD;\n        for (i = 1; i &lt; left; i++)     delete(|X[right]-X[i]|, D);\n        for (i = right+1; i &lt;= N; i++) delete(|X[right]-X[i]|, D);\n        found = reconstruct(X, D, N, left, right-1);\n        if (!found) { /* backtrack */\n            for (i = 1; i &lt; left; i++)     insert(|X[right]-X[i]|, D);\n            for (i = right+1; i &lt;= N; i++) insert(|X[right]-X[i]|, D);\n        }\n    }\n    /* option 2: X[left] = X[N] - maxD */\n    if (!found) {\n        ok = check(X[N]-maxD, N, left, right);\n        if (ok) {\n            X[left] = X[N] - maxD;\n            for (i = 1; i &lt; left; i++)     delete(|X[left]-X[i]|, D);\n            for (i = right+1; i &lt;= N; i++) delete(|X[left]-X[i]|, D);\n            found = reconstruct(X, D, N, left+1, right);\n            if (!found) { /* backtrack */\n                for (i = 1; i &lt; left; i++)     insert(|X[left]-X[i]|, D);\n                for (i = right+1; i &lt;= N; i++) insert(|X[left]-X[i]|, D);\n            }\n        }\n    }\n    return found;\n}\n</code></pre>"},{"location":"courses/ads/note2/#alpha-beta","title":"$\\alpha$-$\\beta$\u2009\u526a\u679d","text":"<ul> <li>$\\alpha$-$\\beta$ \u526a\u679d\u662f\u4e00\u79cd\u5bf9\u6297\u6027\u641c\u7d22\u7b97\u6cd5\uff0c\u5e38\u7528\u4e8e\u53cc\u4eba\u5bf9\u5f08\u6e38\u620f</li> <li>\u53f3\u56fe\u7684\u535a\u5f08\u6811\u53ef\u4ee5\u4ee3\u8868\u4e00\u4e2a\u53cc\u4eba\u96f6\u548c\u6e38\u620f\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6548\u7528\u51fd\u6570</li> <li>$\\alpha$ \u526a\u679d\u5c31\u662f\u6700\u5927\u5316\u73a9\u5bb6\u603b\u662f\u8981\u6700\u5927\u5316\u5bf9\u624b\u6700\u5c0f\u5316\u7684\u6548\u7528\uff0c$\\beta$ \u526a\u679d\u5c31\u662f\u6700\u5c0f\u5316\u73a9\u5bb6\u603b\u662f\u8981\u6700\u5c0f\u5316\u5bf9\u624b\u6700\u5927\u5316\u7684\u6548\u7528</li> </ul>"},{"location":"courses/ads/note2/#_3","title":"\u5206\u6cbb","text":"<ul> <li>\u5206\u6cbb\u6cd5\u9012\u5f52\u5730\u5c06\u95ee\u9898\u5206\u89e3\u6210\u591a\u4e2a\u540c\u7c7b\u5b50\u95ee\u9898\uff0c\u76f4\u5230\u95ee\u9898\u53d8\u5f97\u8db3\u591f\u7b80\u5355\uff0c\u7136\u540e\u628a\u5b50\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u5408\u5e76\u4ee5\u7ed9\u51fa\u539f\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848</li> <li>\u5206\u6cbb\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u6c42\u89e3\u65b9\u6cd5\u6709\uff0c\u5148\u731c\u540e\u8bc1\uff08\u6ce8\u610f\u5e38\u6570\u9879\u5fc5\u987b\u4fdd\u6301\uff09\u3001\u9012\u5f52\u6811\u6cd5\uff08\u6bcf\u5c42\u7684\u5408\u5e76\u590d\u6742\u5ea6 + \u6700\u5c0f\u5b50\u95ee\u9898\u7684\u590d\u6742\u5ea6\uff09\uff0c\u4ee5\u53ca\u8bb8\u591a\u76f8\u5173\u5b9a\u7406</li> </ul>"},{"location":"courses/ads/note2/#_4","title":"\u4e3b\u5b9a\u7406","text":"<p>\u5047\u8bbe\u6709\u9012\u63a8\u5173\u7cfb $T(n)=aT(\\frac{n}{b})+f(n)$\uff0c\u5219\uff1a</p> <ul> <li>\u5982\u679c\u5b58\u5728\u6b63\u7684\u5e38\u6570 $\\epsilon$\uff0c\u4f7f\u5f97 $f(n)=\\Omicron(n^ {\\log_{b}a-\\epsilon})$\uff0c\u5219 $T(n)=\\Theta(n^ {\\log_{b}a})$</li> <li>\u5982\u679c\u5b58\u5728\u975e\u8d1f\u5e38\u6570 $\\epsilon$\uff0c\u4f7f\u5f97 $f(n)=\\Omega(n^ {\\log_{b}a+\\epsilon})$\uff0c\u4e14\u5b58\u5728\u5e38\u6570 $c&lt;1$ \u4f7f\u5f97\u5bf9\u4e8e\u5145\u5206\u5927\u7684 $n$ \u6709 $af(\\frac{n}{b})\\leq cf(n)$\uff0c\u5219 $T(n)=\\Theta(f(n))$</li> <li>\u5982\u679c\u5b58\u5728\u975e\u8d1f\u5e38\u6570 $k$\uff0c\u4f7f\u5f97 $f(n)=\\Theta(n^ {\\log_{b}a}\\log^ {k}n)$\uff0c\u5219 $T(n)=\\Theta(n^ {\\log_{b}a}\\log^ {k+1}n)$</li> </ul> <p>\u7406\u89e3\u4e3b\u5b9a\u7406\u7684\u5173\u952e\u5728\u4e8e\u6bd4\u8f83 $n ^ {\\log_{b}a}$ \u548c $f(n)$\uff0c\u524d\u8005\u5927\u5219\u6700\u5c0f\u5b50\u95ee\u9898\u590d\u6742\u5ea6\u5360\u4e3b\u5bfc\uff0c\u540e\u8005\u5927\u5219\u5408\u5e76\u590d\u6742\u5ea6\u5360\u4e3b\u5bfc\u3002</p> <p>\u4e0b\u9762\u7ed9\u51fa\u6bd4\u4e3b\u5b9a\u7406\u66f4\u5f3a\u7684\u7ed3\u8bba\uff0c\u5b9e\u9645\u4e0a\u8865\u5145\u4e86\u4e3b\u5b9a\u7406\u7684\u7b2c\u4e8c\u3001\u4e09\u6761\uff0c\u5047\u8bbe\u6709\u9012\u63a8\u5173\u7cfb $T(n) = aT(n/b) + \\Theta(n ^ k \\log ^ p n)$\uff0c\u5176\u4e2d $a \\geq 1, b &gt; 1, k \\geq 0$ \u4e14 $p$ \u4e3a\u4efb\u610f\u5b9e\u6570\uff0c\u5219\uff1a</p> <ul> <li>\u82e5 $a &gt; b ^ k$\uff0c\u5219 $T(n) = \\Theta(n ^ {\\log_{b}a})$</li> <li>\u82e5 $a &lt; b ^ k$\uff0c\u5219\uff1a<ul> <li>\u82e5 $p \\geq 0$\uff0c$T(n) = \\Theta(n ^ k \\log ^ p n)$</li> <li>\u82e5 $p &lt; 0$\uff0c$T(n) = \\Theta(n ^ k)$</li> </ul> </li> <li>\u82e5 $a = b ^ k$\uff0c\u5219\uff1a<ul> <li>\u82e5 $p &gt; -1$\uff0c$T(n) = \\Theta(n ^ k \\log ^ {p+1} n)$</li> <li>\u82e5 $p = -1$\uff0c$T(n) = \\Theta(n ^ k \\log \\log n)$</li> <li>\u82e5 $p &lt; -1$\uff0c$T(n) = \\Theta(n ^ k)$</li> </ul> </li> </ul>"},{"location":"courses/ads/note2/#_5","title":"\u52a8\u6001\u89c4\u5212","text":""},{"location":"courses/co/","title":"\u8ba1\u7b97\u673a\u7ec4\u6210","text":"<p> \u7ea6 85 \u4e2a\u5b57 </p> <p>Abstract</p> <ul> <li>\u6d59\u6c5f\u5927\u5b66\u300a\u8ba1\u7b97\u673a\u7ec4\u6210\u300b\u8bfe\u7a0b\u7b14\u8bb0</li> <li>\u53c2\u8003\u8d44\u6599\uff1a<ul> <li>Computer Organization and Design   RISC-V Edition, David A.Patterson, John L.Hennessy</li> <li>\u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4</li> <li>HobbitQia \u7684\u7b14\u8bb0\u672c</li> </ul> </li> </ul>"},{"location":"courses/co/#table-of-contents","title":"Table of Contents","text":"<ul> <li>RISC-V \u6307\u4ee4</li> <li>RISC-V \u5904\u7406\u5668<ul> <li>\u6d41\u6c34\u7ebf\u6ca1\u5199\uff0c\u4f46\u662f\u8fd9\u90e8\u5206\u5185\u5bb9\u5f88\u91cd\u8981</li> </ul> </li> <li>Cache \u6ca1\u5199\uff0c\u4f46\u662f\u8fd9\u90e8\u5206\u5185\u5bb9\u4e5f\u5f88\u91cd\u8981</li> </ul>"},{"location":"courses/co/note1/","title":"RISC-V\u2009\u6307\u4ee4","text":"<p> \u7ea6 572 \u4e2a\u5b57  20 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"},{"location":"courses/co/note1/#_1","title":"\u6307\u4ee4\u96c6","text":"<p>RISC-V \u6307\u4ee4\u96c6\u5305\u62ec\u57fa\u7840\u6307\u4ee4\u96c6\u548c\u6269\u5c55\u6307\u4ee4\u96c6\u3002\u57fa\u7840\u6307\u4ee4\u96c6\u5177\u6709 32-bit \u56fa\u5b9a\u957f\u5ea6\uff0c\u6269\u5c55\u6307\u4ee4\u96c6\u652f\u6301 16-bit \u4efb\u610f\u6574\u6570\u500d\u7684\u53ef\u53d8\u957f\u5ea6\u3002</p> <p>RISC-V \u57fa\u7840\u6307\u4ee4\u96c6\u5177\u6709 R\u3001I\u3001S\u3001SB\u3001U\u3001UJ \u516d\u79cd\u7ed3\u6784\uff0c\u5982\u56fe\u81ea\u4e0a\u800c\u4e0b\u3002</p> <p></p> <p>RISC-V \u57fa\u7840\u6307\u4ee4\u96c6\u4e2d\u6709\u4e9b\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff1a</p> <ul> <li>\u5bf9\u4e8e I \u578b\u6307\u4ee4\uff0c\u7acb\u5373\u6570\u79fb\u4f4d <code>slli</code> <code>srli</code> <code>srai</code> \u4f1a\u628a\u6307\u4ee4 [31:26] \u7528\u4f5c\u989d\u5916\u7684\u64cd\u4f5c\u7801\uff0c\u56e0\u4e3a\u79fb\u4f4d\u7acb\u5373\u6570\u4e0d\u4f1a\u8d85\u8fc7 64</li> <li>\u5bf9\u4e8e SB \u548c UJ \u578b\u6307\u4ee4\uff0c\u6267\u884c PC \u76f8\u5bf9\u5bfb\u5740\uff0c\u7acb\u5373\u6570\u4f4e\u4f4d\u81ea\u52a8\u8865 <code>0</code>\uff0c\u76f8\u5bf9\u5bfb\u5740\u6b65\u957f\u4e3a 16-bit\uff0c\u4ee5\u9002\u5e94\u6307\u4ee4\u96c6\u7684\u6700\u5c0f\u957f\u5ea6</li> <li>\u5bf9\u4e8e U \u578b\u6307\u4ee4\uff0c<code>lui</code> <code>auipc</code> \u628a\u7acb\u5373\u6570\u7f6e\u5165\u5bc4\u5b58\u5668\u7684 [31:12] \u4f4d\uff0c\u4f4e\u4f4d\u81ea\u52a8\u8865 <code>0</code>\uff0c\u901a\u5e38\u914d\u5408 <code>addi</code> \u8865\u4e0a\u4f4e\u4f4d\uff0c\u4ece\u800c\u6784\u9020\u5927\u7acb\u5373\u6570</li> </ul>"},{"location":"courses/co/note1/#_2","title":"\u6307\u4ee4\u52a9\u8bb0\u5361","text":"\u8ba1\u7ec4\u8bfe\u5802\u6559\u6750\u9644\u5f55 <p>source: \u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4</p> <p></p>"},{"location":"courses/co/note1/#_3","title":"\u5bc4\u5b58\u5668\u7ec4","text":"<p>RISC-V \u67b6\u6784\u63d0\u4f9b 32 \u4e2a\u6574\u6570\u5bc4\u5b58\u5668\uff0c\u6bcf\u4e2a\u5bc4\u5b58\u5668\u662f 64-bit \u7684\uff0c\u53ef\u4ee5\u5bfb\u5740 $2 ^ {64}$ \u4e2a\u5730\u5740\u3002\u5f53\u5b9e\u73b0\u6d6e\u70b9\u6269\u5c55\u65f6\uff0c\u8fd8\u63d0\u4f9b 32 \u4e2a\u6d6e\u70b9\u5bc4\u5b58\u5668\uff0c\u8ba1\u7ec4\u8bfe\u7a0b\u4e0d\u6d89\u53ca\u3002</p> <p>\u5bc4\u5b58\u5668\u8bbf\u95ee\u901f\u5ea6\u5feb\u4e8e\u5185\u5b58\uff0c\u7f16\u8bd1\u5668\u4f18\u5148\u8c03\u7528\u5bc4\u5b58\u5668\u7a7a\u95f4\u3002\u5f53\u5bc4\u5b58\u5668\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u901a\u8fc7\u628a\u90e8\u5206\u5bc4\u5b58\u5668\u6570\u636e\u538b\u5165\u5185\u5b58\u6765\u91ca\u653e\u5bc4\u5b58\u5668\u7a7a\u95f4\u3002</p> <p></p> <p>source: \u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4</p>"},{"location":"courses/co/note1/#_4","title":"\u5bfb\u5740","text":"<p>RISC-V \u67b6\u6784\u4e0b\u5185\u5b58\u5730\u5740\u662f 64-bit\u3001\u5c0f\u7aef\u5e8f\u3001\u975e\u5bf9\u9f50\u7684\u3002\u6ce8\u610f\u6211\u4eec\u79f0 32-bit \u4e3a\u4e00\u4e2a word\uff0c64-bit \u4e3a\u4e00\u4e2a doubleword\u3002</p> <p>RISC-V \u662f\u4e00\u79cd load-store \u67b6\u6784\uff0c\u5373\u9664\u4e86 load \u548c store \u7cfb\u6307\u4ee4\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58\uff0c\u5176\u4f59\u6307\u4ee4\u4ec5\u53ef\u8bbf\u95ee\u5bc4\u5b58\u5668\u3002RISC-V \u67b6\u6784\u5177\u6709\u7acb\u5373\u6570\u5bfb\u5740\u3001\u5bc4\u5b58\u5668\u5bfb\u5740\u3001\u57fa\u5740\u5bfb\u5740\u3001PC \u76f8\u5bf9\u5bfb\u5740\u56db\u79cd\u5bfb\u5740\u65b9\u5f0f\uff0c\u5982\u56fe\u81ea\u4e0a\u800c\u4e0b\u3002</p> <p></p>"},{"location":"courses/co/note1/#_5","title":"\u7a0b\u5e8f\u8c03\u7528","text":"<p>RISC-V \u4f7f\u7528\u6307\u4ee4 <code>jal x1, ProcedureAddress</code> \u6765\u8c03\u7528\u5b50\u7a0b\u5e8f\uff0c\u4f7f\u7528\u6307\u4ee4 <code>jalr x0, 0(x1)</code> \u6765\u8fd4\u56de\u6bcd\u7a0b\u5e8f\u3002</p> <p>\u5728\u7a0b\u5e8f\u8c03\u7528\u4e2d\uff0cRISC-V \u5fc5\u987b\u4f7f\u7528\u989d\u5916\u7684\u6307\u4ee4\u5728\u8c03\u7528\u524d\u5c06\u90e8\u5206\u5bc4\u5b58\u5668\u6570\u636e\u538b\u5165\u5185\u5b58\u6808\uff0c\u5728\u8c03\u7528\u540e\u5c06\u8fd9\u4e9b\u5bc4\u5b58\u5668\u6570\u636e\u5f39\u51fa\u5185\u5b58\u6808\uff0c\u4ece\u800c\u5b9e\u73b0\u7a0b\u5e8f\u8c03\u7528\u524d\u540e\u8fd9\u4e9b\u6570\u636e\u7684\u4e0d\u53d8\u6027\u3002</p> <p></p> <p></p>"},{"location":"courses/co/note1/#_6","title":"\u4f8b\uff1a\u9012\u5f52","text":"C program<pre><code>long long int fact(long long int n) {\n    if ( n &lt; 1 ) return 1;\n    else         return n * fact(n - 1);\n}\n</code></pre> RISC-V assembly code<pre><code>fact: addi sp, sp, -16      # adjust stack for 2 items\n      sd   x1, 8(sp)        # save the return address\n      sd   x10, 0(sp)       # save the argument n\n      addi x5, x10, -1      # x5 = n - 1\n      bge  x5, x0, L1       # if n &gt;= 1, go to L1\n      addi x10, x0, 1       # return 1\n      addi sp, sp, 16       # adjust stack to pop 2 items (no need to ld)\n      jalr x0, 0(x1)        # return to caller\nL1:   addi x10, x10, -1     # n &gt;= 1: argument gets (n - 1)\n      jal  x1, fact         # call fact with (n - 1)\n      addi x6, x10, 0       # move result of fact (n - 1) to x6\n      ld   x10, 0(sp)       # restore argument n\n      ld   x1, 8(sp)        # restore the return address\n      addi sp, sp, 16       # adjust stack to pop 2 items\n      mul  x10, x10, x6     # return n * fact(n - 1)\n      jalr x0, 0(x1)        # return to the caller\n</code></pre>"},{"location":"courses/co/note1/#_7","title":"\u5185\u5b58\u7ba1\u7406","text":""},{"location":"courses/co/note2/","title":"RISC-V\u2009\u5904\u7406\u5668","text":"<p> \u7ea6 153 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"courses/co/note2/#_1","title":"\u5355\u5468\u671f","text":"<p>\u5355\u5468\u671f\u5904\u7406\u5668\u662f RISC-V \u5904\u7406\u5668\u7684\u4e00\u79cd\u7b80\u5355\u5b9e\u73b0\u3002\u6240\u8c13\u5355\u5468\u671f\uff0c\u6307\u6240\u6709\u6307\u4ee4\u90fd\u5728\u5355\u4e2a\u65f6\u949f\u5468\u671f\u5185\u5b8c\u6210\uff0c\u5373 CPI = 1\u3002</p> <p>\u5904\u7406\u5668\u53ef\u4ee5\u5206\u4e3a\u63a7\u5236\u5355\u5143\u548c\u6570\u636e\u901a\u8def\uff08\u4e0b\u56fe\u901a\u8fc7\u9ed1\u8272\u548c\u84dd\u8272\u4f5c\u533a\u5206\uff09\uff0c\u8be5\u56fe\u8868\u793a\u7684\u5904\u7406\u5668\u652f\u6301 <code>add</code> <code>sub</code> <code>and</code> <code>or</code> <code>ld</code> <code>sd</code> <code>beq</code> \u7b49\u6307\u4ee4\uff0c\u4e0d\u652f\u6301 <code>jal</code> \u6307\u4ee4\u3002</p> <p></p>"},{"location":"courses/co/note2/#_2","title":"\u4f8b\uff1a\u5e38\u7528\u6307\u4ee4\u6570\u636e\u901a\u8def","text":"R \u578b\u6307\u4ee4load \u7cfb\u6307\u4ee4<code>beq</code> \u6307\u4ee4"},{"location":"courses/co/note2/#_3","title":"\u63a7\u5236\u903b\u8f91","text":"<p>\u4e0a\u6587\u56fe\u7247\u8868\u793a\u7684\u5904\u7406\u5668\u7684\u63a7\u5236\u5355\u5143\u903b\u8f91\u5982\u4e0b\uff1a</p> ControlALU control <p></p> <p></p>"},{"location":"courses/co/note2/#_4","title":"\u6d41\u6c34\u7ebf","text":""},{"location":"courses/dd/","title":"\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1","text":"<p> \u7ea6 175 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <ul> <li>\u6d59\u6c5f\u5927\u5b66\u300a\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1\u300b\u8bfe\u7a0b\u7b14\u8bb0</li> <li>\u8bfe\u7a0b\u7684\u6838\u5fc3\u7b14\u8bb0\u5df2\u7ecf\u66f4\u65b0\u5230 Isshiki\u4fee's Notebook \u4e2d\uff0c\u8bf7\u79fb\u6b65\u4fee\u4f6c\u7684\u6570\u903b\u7b14\u8bb0</li> <li>\u8fd9\u91cc\u4ec5\u6536\u5f55\u90e8\u5206\u6570\u903b\u76f8\u5173\u7684\u77e5\u8bc6\u4e0e\u601d\u8003\uff0c\u4f5c\u4e3a\u4e0a\u8ff0\u7b14\u8bb0\u7684\u8865\u5145\u5185\u5bb9</li> <li>\u53c2\u8003\u8d44\u6599\uff1a<ul> <li>Logic and Computer Design Fundamentals   Fifth Edition, M.Morris Mano, Charles R.Kime, Tom Martin</li> </ul> </li> </ul>"},{"location":"courses/dd/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u6570\u5b57\u903b\u8f91\u57fa\u7840</li> <li>\u7ec4\u5408\u903b\u8f91\u8bbe\u8ba1<ul> <li>\u63a8\u8350\u9605\u8bfb\uff1a\u4ece\u5168\u52a0\u5668\u5230\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668</li> </ul> </li> <li>\u65f6\u5e8f\u903b\u8f91\u8bbe\u8ba1<ul> <li>\u63a8\u8350\u9605\u8bfb\uff1a\u4ece\u9501\u5b58\u5668\u5230\u89e6\u53d1\u5668</li> </ul> </li> <li>\u6559\u6750\u914d\u5957\u7684 Companion Website \u4e2d\u6709\u90e8\u5206\u4e60\u9898\u89e3\u7b54\u3001\u8865\u5145\u9605\u8bfb\u6750\u6599\u3001Verilog \u793a\u4f8b\u7b49\uff0c\u53ef\u4f9b\u53c2\u8003</li> </ul>"},{"location":"courses/dd/note1/","title":"\u6570\u5b57\u903b\u8f91\u57fa\u7840","text":"<p> \u7ea6 1643 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p>"},{"location":"courses/dd/note1/#_2","title":"\u6570\u5b57\u7cfb\u7edf\u4e0e\u7f16\u7801","text":""},{"location":"courses/dd/note1/#_3","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u4e24\u79cd\u903b\u8f91\u7cfb\u7edf\uff1a</p> <ul> <li>\u7ec4\u5408\u903b\u8f91\uff08Combinational Logic\uff09\uff1a\u4efb\u610f\u65f6\u523b\u7684\u8f93\u51fa\u4ec5\u53d6\u51b3\u4e8e\u8be5\u65f6\u523b\u7684\u8f93\u5165</li> <li>\u65f6\u5e8f\u903b\u8f91\uff08Suquential Logic\uff09\uff1a\u4efb\u610f\u65f6\u523b\u7684\u8f93\u51fa\u65e2\u53d6\u51b3\u4e8e\u8be5\u65f6\u523b\u7684\u8f93\u5165\uff0c\u4e5f\u53d6\u51b3\u4e8e\u7535\u8def\u539f\u6765\u7684\u72b6\u6001<ul> <li>\u540c\u6b65\uff08Synchronous\uff09\uff1aState updated at discrete times</li> <li>\u5f02\u6b65\uff08Asynchronous\uff09\uff1aState updated at any time</li> </ul> </li> </ul> <p>\u6570\u5b57\u7cfb\u7edf\u4e0e\u7f16\u7801\u7684\u6982\u5ff5\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u4ed4\u7ec6\u601d\u8003\u5c31\u53ef\u4ee5\u53d1\u73b0\u4e24\u8005\u7684\u4e0d\u540c\u4e4b\u5904\uff1a</p> <ul> <li>\u6570\u5b57\u7cfb\u7edf\uff08Number System\uff09\uff1a\u6307\u6570\u5b57\u7684\u4e0d\u540c\u8fdb\u5236\u7cfb\u7edf\uff0c\u5982\u5341\u8fdb\u5236\u3001\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236<ul> <li>\u6570\u5b57\u7cfb\u7edf\u7684\u524d\u5bfc <code>0</code> \u53ef\u4ee5\u7701\u7565</li> </ul> </li> <li>\u7f16\u7801\uff08Codes\uff09\uff1a\u8f83\u4e3a\u7075\u6d3b\uff0c\u53ea\u8981\u6c42\u4e00\u4e00\u6620\u5c04\u5373\u4e3a\u5408\u6cd5\u7f16\u7801<ul> <li>\u7f16\u7801\u7cfb\u7edf\u7684\u524d\u5bfc <code>0</code> \u4e0d\u80fd\u7701\u7565</li> </ul> </li> </ul>"},{"location":"courses/dd/note1/#_4","title":"\u4f59\u4e09\u7801\u8865\u5145","text":"<p>\u4f59\u4e09\u7801\u7684\u4e00\u4e2a\u5173\u952e\u70b9\u5728\u4e8e\u5176\u89e3\u51b3\u4e86 BCD \u7801\u7684\u52a0\u51cf\u6cd5\u8fdb\u4f4d\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u660e\u767d\u4f59\u4e09\u7801\u505a\u4e86\u4ec0\u4e48\uff1a</p> BCD \u7801\u7684\u52a0\u6cd5\u793a\u4f8b <p></p>"},{"location":"courses/dd/note1/#_5","title":"\u683c\u96f7\u7801\u8865\u5145","text":"<p>\u683c\u96f7\u7801\u7684\u4e00\u79cd\u7b80\u5355\u7c97\u66b4\u7684\u5199\u6cd5\uff0c\u662f\u901a\u8fc7\u300c\u955c\u50cf\u300d\u7684\u6280\u5de7\u6765\u500d\u589e\u5df2\u77e5\u7684\u683c\u96f7\u7f16\u7801\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u73b0\u5728\u6709 <code>0</code> - <code>3</code> \u7684\u683c\u96f7\u7801\uff0c\u5206\u522b\u662f <code>00</code>\uff0c<code>01</code>\uff0c<code>11</code>\uff0c<code>10</code>\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u589e\u6dfb\u4e00\u4f4d\u524d\u5bfc <code>0</code>\uff0c\u7136\u540e\u955c\u9762\u5bf9\u79f0\u5730\u4e66\u5199\u51fa\u5e26\u6709\u524d\u5bfc <code>1</code> \u7684 <code>4</code> - <code>7</code> \u7684\u683c\u96f7\u7801\u3002</p> <p>\u6700\u7ec8\u6211\u4eec\u5f97\u5230\u7684 <code>0</code> - <code>7</code> \u7684\u683c\u96f7\u7801\u662f\uff1a<code>000</code>\uff0c<code>001</code>\uff0c<code>011</code>\uff0c<code>010</code>\uff0c<code>110</code>\uff0c<code>111</code>\uff0c<code>101</code>\uff0c<code>100</code></p>"},{"location":"courses/dd/note1/#_6","title":"\u7ec4\u5408\u903b\u8f91\u57fa\u7840","text":""},{"location":"courses/dd/note1/#_7","title":"\u5e03\u5c14\u4ee3\u6570\u8865\u5145\u516c\u5f0f","text":"<p>\u9999\u519c\u516c\u5f0f\uff08Shannon formula\uff09\uff1a</p> <p>\u57fa\u4e8e $X \\overline{X} = 0$ \u548c $X X = 1$ \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u516c\u5f0f\uff1a</p> <p>$$ x f( x, \\overline{x}, y,... ) = x f( 1, 0, y,... ) $$</p> <p>$$ \\overline{x} f( x, \\overline{x}, y,... ) = \\overline{x} f( 0, 1, y,... ) $$</p> <p>\u57fa\u4e8e $X + \\overline{X}Y = X + Y$ \u548c $X + XY = X$ \uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u516c\u5f0f\uff08\u6216\u8005\u901a\u8fc7\u4e0a\u9762\u7684\u516c\u5f0f\u5bf9\u5076\u5f97\u5230\uff09\uff1a</p> <p>$$ x + f( x, \\overline{x}, y,... ) = x + f( 0, 1, y,... ) $$</p> <p>$$ \\overline{x} + f(  x, \\overline{x}, y,... ) = \\overline{x} + f( 1, 0, y,... ) $$</p> <p>\u903b\u8f91\u51fd\u6570\u5206\u89e3\uff08Shannon Expansion\uff09\uff1a</p> <p>$$ \\begin{aligned} F(x,\\overline{x},y,...) &amp; = xf_1(x,\\overline{x},y,...) + \\overline{x}f_2(x,\\overline{x},y,...) \\cr &amp; = xf_1(1,0,y,...) + \\overline{x}f_2(0,1,y,...) \\end{aligned} $$</p> <p>\u8fd9\u79cd\u5206\u89e3\u601d\u8def\u53ef\u4ee5\u5c06\u4efb\u4f55\u540c\u65f6\u542b\u6709 $x$ \u548c $\\overline{x}$ \u7684\u51fd\u6570\u8fdb\u884c\u5206\u89e3\uff0c\u5e76\u8f6c\u5316\u4e3a\u53ef\u4ee5\u5e94\u7528\u9999\u519c\u516c\u5f0f\u7684\u5f62\u5f0f\uff0c\u4ece\u800c\u5316\u7b80\u51fd\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed9\u4e0d\u542b $x$ \u6216 $\\overline{x}$ \u7684\u9879\u201c\u4e0e\u201d\u4e0a $(x+\\overline{x})$ \u6765\u5b9e\u73b0\u8be5\u8f6c\u5316\u3002</p> <p>\u540c\u6837\u7684\uff0c\u8be5\u516c\u5f0f\u4e5f\u6709\u5bf9\u5076\u5f62\u5f0f\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002</p> \u4e00\u4e2a\u6709\u8da3\u7684\u63a8\u8bba <p>$$ \\begin{aligned} f(x,y,z) &amp; = xyzf(1,1,1)+xy\\overline{z}f(1,1,0) \\cr &amp; + x\\overline{y}zf(1,0,1)+x\\overline{y}\\overline{z}f(1,0,0) \\cr &amp; + \\overline{x}yzf(0,1,1)+\\overline{x}y\\overline{z}f(0,1,0) \\cr &amp; + \\overline{x}\\overline{y}zf(0,0,1)+\\overline{x}\\overline{y}\\overline{z}f(0,0,0) \\end{aligned} $$</p>"},{"location":"courses/dd/note1/#_8","title":"\u6807\u51c6\u5f62\u5f0f\u4e0e\u89c4\u8303\u5f62\u5f0f","text":"<ul> <li>\u6807\u51c6\u5f62\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u5e03\u5c14\u8868\u8fbe\u5f0f\u5316\u7b80\u7684\u65b9\u5411\uff08\u4f46\u5176\u5f62\u5f0f\u5e76\u4e0d\u552f\u4e00\u786e\u5b9a\uff0c\u5373\u4e00\u4e2a\u8868\u8fbe\u5f0f\u53ef\u4ee5\u6709\u591a\u4e2a\u6807\u51c6\u5f62\u5f0f\uff09</li> <li>\u89c4\u8303\u5f62\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u552f\u4e00\u786e\u5b9a\u7684\u8868\u8fbe\u5f62\u5f0f\uff08\u8fd9\u5bf9\u4e8e\u628a\u590d\u6742\u7684\u903b\u8f91\u8fd0\u7b97\u4ea4\u7531\u673a\u5668\u53bb\u5b8c\u6210\u662f\u5f88\u91cd\u8981\u7684\uff09</li> </ul> <p>SOP \u4e0e POS\uff1a</p> <p>\u4efb\u4f55\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u5316\u6210 SOP \u548c POS \u8fd9\u6837\u7684\u6807\u51c6\u5f62\u5f0f\u3002</p> <ul> <li>SOP\uff08Standard Sum-of-Products\uff09\u5373\u628a\u8868\u8fbe\u5f0f\u5199\u6210 <code>OR of AND</code> \u7684\u5f62\u5f0f\uff1b</li> <li>POS\uff08Standard Product-of-Sums\uff09\u5373\u628a\u8868\u8fbe\u5f0f\u5199\u6210 <code>AND of OR</code> \u7684\u5f62\u5f0f\uff1b</li> </ul> <p>SOM \u4e0e POM\uff1a</p> <p>SOM\uff08Sum of Minterms\uff09\u4e0e POM\uff08Product of Maxterms\uff09\u8574\u542b\u7740\u4e00\u79cd\u7cbe\u5de7\u7684\u5bf9\u79f0\u6027\uff0c\u5177\u4f53\u4f53\u73b0\u6709\uff1a</p> <ul> <li>SOM \u4e0e POM \u7684\u81ea\u7136\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u5173\u952e\u70b9\u5c31\u5728\u4e8e\u6211\u4eec\u5bf9 <code>1</code> \u548c <code>0</code> \u8c01\u662f\u4e3b\u4f53\u7684\u7406\u89e3\uff0c\u4e24\u8005\u7684\u63a8\u5bfc\u8fc7\u7a0b\u662f\u5b8c\u5168\u5bf9\u79f0\u7684</li> <li>SOM \u4e0e POM \u8fd8\u5b58\u5728\u4e00\u79cd\u53d6\u53cd\u7684\u5bf9\u79f0\u6027\uff0c\u6bd4\u5982\u5047\u8bbe $F(x,y,z)=\\sum_m(1,3,5,7)$ \uff0c\u5219\u6709 $\\overline{F}(x,y,z)=\\sum_m(0,2,4,6) = \\prod_M(1,3,5,7)$\uff0c\u4ee5\u53ca $F(x,y,z)=\\prod_M(0,2,4,6)$</li> </ul> <p>\u4efb\u4f55\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u5316\u6210 SOM \u548c POM \u8fd9\u6837\u7684\u89c4\u8303\u5f62\u5f0f\uff0c\u4ee5\u7531 SOP \u5f97\u5230 SOM \u4e3a\u4f8b\uff1a</p> <p>$$ \\begin{aligned} f &amp; = x + \\overline{x}\\overline{y} \\cr &amp; = x(y+\\overline{y}) + \\overline{x}\\overline{y} \\cr &amp; = xy + x\\overline{y} + \\overline{x}\\overline{y} \\end{aligned} $$</p>"},{"location":"courses/dd/note1/#_9","title":"\u4e3b\u8574\u542b\u9879\u9009\u62e9\u89c4\u5219","text":"<p>\u4e3b\u8574\u542b\u9879\u9009\u62e9\u89c4\u5219\uff08Prime Implicant Selection Rule\uff09\u662f\u4e00\u79cd\u5361\u8bfa\u56fe\u4f18\u5316\u6b65\u9aa4\uff0c\u5176\u4e3b\u8981\u601d\u8def\u662f\u5c3d\u53ef\u80fd\u51cf\u5c11\u8574\u542b\u9879\u7684\u91cd\u5408\uff08overlap\uff09\uff1a</p> <ol> <li>\u627e\u5230\u6240\u6709\u4e3b\u8574\u542b\u9879\uff1b</li> <li>\u9009\u4e2d\u6240\u6709\u300c\u57fa\u672c\u4e3b\u8574\u542b\u9879\u300d\uff1b</li> <li>\u9009\u62e9\u5c3d\u91cf\u5c11\u7684\u975e\u57fa\u672c\u4e3b\u8574\u542b\u9879\u6765\u8986\u76d6\u6240\u6709\u6700\u5c0f\u9879\uff08\u6216\u6700\u5927\u9879\uff09\uff1b</li> </ol> Warning <p>\u8bf7\u6ce8\u610f\uff0c\u57fa\u672c\u4e3b\u8574\u542b\u9879\u4e5f\u662f\u4e3b\u8574\u542b\u9879\uff0c\u9700\u8981\u6ee1\u8db3\u300c\u6781\u5927\u300d\u8fd9\u4e2a\u7279\u5f81\u3002</p> <p>\u6211\u4eec\u5728\u505a\u9898\u7684\u65f6\u5019\uff0c\u5f80\u5f80\u4e0d\u4f1a\u6309\u90e8\u5c31\u73ed\u5730\u5148\u627e\u51fa\u6240\u6709\u4e3b\u8574\u542b\u9879\uff0c\u518d\u7b5b\u9009\u51fa\u57fa\u672c\u4e3b\u8574\u542b\u9879\u3002\u6211\u4eec\u5f80\u5f80\u76f4\u63a5\u5f00\u59cb\u6846\u9009\u57fa\u672c\u4e3b\u8574\u542b\u9879\u548c\u975e\u57fa\u672c\u4e3b\u8574\u542b\u9879\u3002\u6709\u65f6\u5019\u5bb9\u6613\u72af\u4e00\u4e9b\u5c0f\u9519\u8bef\uff0c\u6bd4\u5982\u8bef\u4f1a overlap \u7684\u5185\u6db5\uff0c\u4ece\u800c\u6846\u9009\u51fa\u4e86\u4e0d\u591f\u6781\u5927\u7684\u8574\u542b\u9879\uff1a</p> <p></p>"},{"location":"courses/dd/note1/#_10","title":"\u7ecf\u5178\u7ec4\u5408\u7535\u8def\u8865\u5145","text":"<p>\u7f13\u51b2\u5668\uff08Buffer\uff09\uff1a$F=X$</p> <ul> <li>buffer \u53ef\u4ee5\u4f5c\u4e3a\u653e\u5927\u5668\uff0c\u63d0\u9ad8\u7535\u8def\u7684\u7535\u538b\u6c34\u5e73\uff08\u56de\u5fc6\u6570\u5b57\u4fe1\u53f7\u7684\u5bbd\u8fdb\u4e25\u51fa\uff09</li> <li>buffer \u53ef\u4ee5\u63d0\u9ad8\u7535\u8def\u8fd0\u884c\u7684\u901f\u5ea6</li> </ul> <p>\u4e09\u6001\u95e8\uff083-State Buffer\uff09</p> \u4e09\u6001\u95e8\u89e3\u51b3\u591a\u8def\u8f93\u51fa\u4e92\u8054\u95ee\u9898\uff08multiplexed output line\uff09\u7684\u4e00\u4e2a\u4f8b\u5b50 <p></p> <p>\u4f20\u8f93\u95e8\uff08Transmission Gate\uff09</p> <p>\u4f20\u8f93\u95e8\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u5f00\u5173\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1a</p> <ul> <li>\u4f20\u8f93\u95e8\u4e0e\u4e09\u6001\u95e8\u5e76\u4e0d\u76f8\u540c\uff0c\u5c3d\u7ba1\u4e24\u8005\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u90fd\u53ef\u4ee5\u8d77\u5230\u5f00\u5173\u7684\u4f5c\u7528<ul> <li>\u5173\u4e8e\u4e24\u8005\u5177\u4f53\u6709\u4f55\u533a\u522b\uff0c\u6211\u6682\u65f6\u6ca1\u6709\u627e\u5230\u5f88\u5408\u9002\u7684\u7b54\u6848</li> </ul> </li> <li>\u4f20\u8f93\u95e8\u8fd9\u4e2a\u6982\u5ff5\u653e\u5728\u8fd9\u91cc\u4f3c\u4e4e\u5e76\u4e0d\u5408\u9002\uff0c\u4f46\u662f\u9a6c\u5fb7\u8001\u5e08\u8bb2\u89e3\u5230\u4e86\uff0c\u9042\u63d0\u4e00\u7b14</li> </ul> <p></p> <p>\u5f02\u6216\u95e8 \u540c\u6216\u95e8</p> <ul> <li>\u5f02\u6216\u548c\u540c\u6216\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u5947\u6821\u9a8c\u548c\u5076\u6821\u9a8c\u3002</li> <li>\u800c\u4e14\u89c2\u5bdf\u5176\u5361\u8bfa\u56fe\u7684\u5f62\u72b6\uff08\u68cb\u76d8\u5f62\uff09\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b83\u4eec\u662f\u5929\u7136\u4f18\u5316\u7684\uff0c\u5373\u4e0d\u53ef\u4f18\u5316\u7684\u3002</li> </ul>"},{"location":"courses/dd/note1/#_11","title":"\u903b\u8f91\u5408\u6210","text":"<p>\u903b\u8f91\u5408\u6210\uff08Logic Synthesis\uff09\u662f\u6240\u8bbe\u8ba1\u6570\u5b57\u7535\u8def\u7684\u9ad8\u62bd\u8c61\u7ea7\u8868\u8fbe\uff0c\u7ecf\u8fc7\u5316\u7b80\u3001\u4f18\u5316\u540e\uff0c\u8f6c\u6362\u5230\u903b\u8f91\u95e8\u7ea7\u522b\u7684\u7535\u8def\u8fde\u7ebf\u7f51\u8868\uff08netlist\uff09\u7684\u8fc7\u7a0b\u3002</p> <p>\u903b\u8f91\u5408\u6210\u662f\u7535\u5b50\u8bbe\u8ba1\u81ea\u52a8\u5316\uff08EDA\uff09\u4e2d\u7535\u8def\u8bbe\u8ba1\u7684\u4e00\u4e2a\u6b65\u9aa4\u3002</p> <p> <p></p> <p></p> <p>\u901a\u5e38\u901a\u8fc7\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\uff08HDL\uff09\u6765\u5b9e\u73b0\u7535\u8def\u7684\u9ad8\u7ea7\u62bd\u8c61\u3002\u4ee5 Verilog \u4e3a\u4f8b\uff0c\u903b\u8f91\u5408\u6210\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a behavioral description \u8f6c\u5316\u4e3a structural description \u7684\u8fc7\u7a0b\u3002</p> Verilog: Structural &amp; Behavioral Description <p>Structural Description:</p> <p></p> <p>Behavioral Description:</p> <p></p>"},{"location":"courses/dd/note2/","title":"\u7ec4\u5408\u903b\u8f91\u8bbe\u8ba1","text":"<p> \u7ea6 2827 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p>"},{"location":"courses/dd/note2/#_2","title":"\u57fa\u672c\u529f\u80fd\u5757","text":""},{"location":"courses/dd/note2/#_3","title":"\u8bd1\u7801\u5668","text":"<p>\u8bd1\u7801\u5668\uff08Decoder\uff09\u80fd\u5c06\u4fe1\u606f\u4ece $n$ \u4e2a\u8f93\u5165\u8f6c\u6362\u4e3a $2^n$ \u4e2a\u6216\u66f4\u5c11\u7684\u552f\u4e00\u8f93\u51fa\u3002\u5177\u4f53\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u5462\uff1f\u8bd1\u7801\u5668\u5b9e\u9645\u4e0a\u662f\u5728\u679a\u4e3e $n$ \u4e2a\u8f93\u5165\u7684\u6240\u6709\u6392\u5217\u65b9\u5f0f\uff08\u5171 $2^n$ \u79cd\uff09\u3002\u66f4\u8fdb\u4e00\u6b65\u7684\uff0c\u8fd9\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u5728\u679a\u4e3e\u6700\u5c0f\u9879\uff08minterms\uff09\u3002\u6bd4\u5982 $3-to-8$ \u8bd1\u7801\u5668\uff0c\u5f53\u8f93\u5165\u4e3a\u67d0\u4e2a\u7279\u5b9a\u7ec4\u5408 <code>101</code> \u65f6\uff0c\u53ea\u6709\u76f8\u5e94\u7684\u8868\u793a <code>101</code>\uff08\u6216\u8005\u8bf4 $\\sum_m(5)$\uff09\u8fd9\u4e2a\u7ec4\u5408\u7684\u8f93\u51fa\u662f <code>1</code>\u3002</p> <p>\u5982\u4f55\u6784\u9020\u4e00\u4e2a $n-to-2^n$ \u8bd1\u7801\u5668\uff1f\u6211\u4eec\u7528\u9012\u5f52\u7684\u601d\u8def\u6765\u6c42\u89e3\uff1a</p> <ol> <li>\u8bbe $k=n$\uff1b</li> <li>\u5982\u679c $k$ \u4e3a\u5076\u6570\uff0c\u95ee\u9898\u5206\u89e3\u4e3a\u8bbe\u8ba1\u4e24\u4e2a $\\frac{k}{2}-to-2^{\\frac{k}{2}}$ \u8bd1\u7801\u5668\uff0c\u5e76\u5c06\u5b83\u4eec\u7528 $2^k$ \u4e2a\u4e0e\u95e8\u8fde\u63a5\u8d77\u6765\uff1b</li> <li>\u5982\u679c $k$ \u4e3a\u5947\u6570\uff0c\u95ee\u9898\u5206\u89e3\u4e3a\u8bbe\u8ba1\u4e00\u4e2a $\\frac{k-1}{2}-to-2^{\\frac{k-1}{2}}$ \u548c\u4e00\u4e2a $\\frac{k+1}{2}-to-2^{\\frac{k+1}{2}}$ \u8bd1\u7801\u5668\uff0c\u5e76\u5c06\u5b83\u4eec\u7528 $2^k$ \u4e2a\u4e0e\u95e8\u8fde\u63a5\u8d77\u6765\uff1b</li> <li>\u5bf9\u6bcf\u4e2a\u8bd1\u7801\u5668\u91cd\u590d\u7b2c\u4e8c\u6b65\uff0c\u76f4\u5230 $k=1$\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a $1-to-2$ \u8bd1\u7801\u5668\uff1b</li> </ol> \u6bd4\u5982\u8fd9\u4e2a $3-to-8$ \u8bd1\u7801\u5668 <p></p> <p>\u524d\u9762\u63d0\u5230\u8bd1\u7801\u5668\u672c\u8d28\u4e0a\u5b8c\u6210\u4e86\u679a\u4e3e\u6700\u5c0f\u9879\u7684\u5de5\u4f5c\uff0c\u5982\u679c\u6211\u4eec\u5728\u8bd1\u7801\u5668\u7684\u8f93\u51fa\u540e\u9762\u63a5\u4e0a\u6216\u95e8\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0 SOM \u7684\u903b\u8f91\u8868\u8fbe\u3002\u56e0\u4e3a SOM \u53ef\u4ee5\u8868\u8fbe\u4efb\u4f55\u7ec4\u5408\u903b\u8f91\uff0c\u6240\u4ee5\u8bd1\u7801\u5668\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4efb\u4f55\u7684\u7ec4\u5408\u903b\u8f91\u3002</p> <p>\u8bd1\u7801\u5668\u7684\u5e94\u7528\u6709\u5f88\u591a\uff0c\u6bd4\u5982\u8bbe\u8ba1\u52a0\u6cd5\u5668\u30017 \u6bb5\u6570\u7801\u7ba1\u7b49\u3002</p> \u52a0\u6cd5\u5668\u7528 7 \u6bb5\u6570\u7801\u7ba1\u663e\u793a BCD \u7801 <p></p> <p></p>"},{"location":"courses/dd/note2/#_4","title":"\u7f16\u7801\u5668","text":"<p>\u7f16\u7801\u5668\uff08Encoder\uff09\u4e0e\u8bd1\u7801\u5668\u662f\u5bf9\u79f0\u7684\uff0c\u80fd\u5c06\u4fe1\u606f\u4ece $2^n$ \u4e2a\u6216\u66f4\u5c11\u7684\u8f93\u5165\u8f6c\u6362\u4e3a $n$ \u4e2a\u8f93\u51fa\u3002\u4f46\u548c\u8bd1\u7801\u5668\u4e0d\u540c\u7684\u662f\uff0c\u666e\u901a\u7f16\u7801\u5668\u5fc5\u987b\u8981\u6c42\u8f93\u5165\u662f one-hot \u7684\uff0c\u5373\u53ea\u5141\u8bb8\u5b58\u5728\u4e00\u4e2a\u8f93\u5165\u4e3a <code>1</code>\uff0c\u5426\u5219\u65e0\u6cd5\u5224\u65ad\u5f97\u51fa\u552f\u4e00\u8f93\u51fa\u3002\u6b64\u5916\uff0c\u7f16\u7801\u5668\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u548c\u5177\u4f53\u7535\u8def\u5b9e\u73b0\uff0c\u901a\u5e38\u90fd\u6bd4\u8bd1\u7801\u5668\u66f4\u4e3a\u590d\u6742\u3002</p> <p>\u8bd1\u7801\u5668\u548c\u7f16\u7801\u5668</p> <p>\u8bd1\u7801\u5668\u548c\u7f16\u7801\u5668\u5728\u539f\u7406\u4e0a\u662f\u5bf9\u79f0\u7684\uff0c\u4e24\u8005\u7684\u533a\u522b\u5728\u4e8e\u4ea4\u6362\u4e86 $n$ \u7aef\u548c $2^n$ \u7aef\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c$2^n$ \u7aef\u6bcf\u6b21\u53ea\u5141\u8bb8\u4e00\u4e2a\u4fe1\u53f7\u662f\u6d3b\u52a8\u7684\uff08\u4e00\u822c\u6765\u8bf4\u662f <code>1</code>\uff0c\u5176\u4ed6\u4fe1\u53f7\u5219\u4e3a <code>0</code>\uff09\uff0c\u8fd9\u662f\u56e0\u4e3a $2^n$ \u7aef\u7684\u542b\u4e49\u662f $n$ \u7aef\u4fe1\u53f7\u7684\u67d0\u4e2a\u6392\u5217\u65b9\u5f0f\uff08\u6700\u5c0f\u9879\uff09\uff0c\u6bd4\u5982 $2^n$ \u7aef\u7684 <code>101</code> \u4e0e $n$ \u7aef\u7684 <code>1</code> <code>0</code> <code>1</code> \u662f\u552f\u4e00\u5bf9\u5e94\u7684\u3002</p> $10-to-4$ \u7f16\u7801\u5668\u5b9e\u73b0\u5341\u8fdb\u5236\u8f6c BCD \u7801 <p></p> <p></p> <p>\u4f18\u5148\u7f16\u7801\u5668\uff08Priority Encoder\uff09\u53ef\u4ee5\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u3002\u5728\u4f18\u5148\u7f16\u7801\u5668\u4e2d\uff0c\u5982\u679c\u591a\u4e2a\u8f93\u5165\u5904\u5728\u6d3b\u52a8\u72b6\u6001\uff08\u8f93\u5165\u4e3a <code>1</code>\uff09\uff0c\u5219\u4f18\u5148\u7ea7\u9ad8\u7684\u8f93\u5165\u5c06\u4f18\u5148\uff0c\u800c\u4f18\u5148\u7ea7\u4f4e\u7684\u8f93\u5165\u5c06\u6210\u4e3a\u4e0d\u5b9a\u9879\uff08Don't Cares\uff09\u3002</p> \u4f18\u5148\u7f16\u7801\u5668\u793a\u4f8b <p></p>"},{"location":"courses/dd/note2/#_5","title":"\u591a\u8def\u590d\u7528\u5668","text":"<p>\u591a\u8def\u590d\u7528\u5668\uff08Multiplexer\uff0c\u6216\u79f0\u4e3a\u6570\u636e\u9009\u62e9\u5668\uff09\u53ef\u4ee5\u901a\u8fc7 $n$ \u4e2a\u63a7\u5236\u4fe1\u53f7\u8f93\u5165\uff0c\u5bf9 $2^n$ \u4e2a\u6216\u66f4\u5c11\u7684\u6570\u636e\u4fe1\u53f7\u8f93\u5165\u505a\u9009\u62e9\uff0c\u5e76\u5f97\u5230 $1$ \u4e2a\u9009\u62e9\u7ed3\u679c\u8f93\u51fa\u3002</p> <p>MUX \u548c\u8bd1\u7801\u5668\u4e00\u6837\uff0c\u90fd\u53ef\u4ee5\u8868\u8fbe\u4efb\u610f\u7ec4\u5408\u903b\u8f91\u3002\u8fd9\u662f\u56e0\u4e3a MUX \u7684\u5b9e\u73b0\u5185\u90e8\u5c31\u5b58\u5728\u4e00\u4e2a\u8bd1\u7801\u5668\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06 MUX \u7684\u63a7\u5236\u7aef\uff08\u4e5f\u5c31\u662f\u8bd1\u7801\u5668\uff09\u7528\u4f5c\u8f93\u5165\uff0c\u5c06\u7ec4\u5408\u903b\u8f91\u7684\u771f\u503c\u8868\u5199\u5165 MUX \u7684\u9009\u9879\u7aef\u8fdb\u884c\u9009\u62e9\uff0c\u5c31\u53ef\u4ee5\u8868\u8fbe\u4efb\u4f55\u7ec4\u5408\u903b\u8f91\u3002</p> <p>\u901a\u5e38\uff0c\u4e00\u4e2a $2^n-to-1$ MUX \u7684\u7ec4\u6210\u4e3a\uff1a</p> <ul> <li>\u4e00\u4e2a $n-to-2^n$ \u8bd1\u7801\u5668\uff08MUX \u5229\u7528\u4e86\u8bd1\u7801\u5668\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\u4e3a <code>1</code> \u7684\u7279\u6027\uff0c\u4ece\u800c\u5b9e\u73b0\u9009\u62e9\u529f\u80fd\uff09\uff1b</li> <li>$2^n \\times 2$ AND-OR\uff1b</li> </ul> \u6bd4\u5982\u8fd9\u4e2a $4-to-1$ MUX <p></p> <p>\u5f53\u7136\uff0c\u591a\u8def\u590d\u7528\u5668\u4e0d\u6b62\u53ef\u4ee5\u9009\u62e9\u5355\u4e2a\u6570\u636e\u4fe1\u53f7\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e00\u7ec4\u6570\u636e\u4fe1\u53f7\uff08\u6216\u79f0\u5411\u91cf\u5f62\u5f0f\u7684\u6570\u636e\u4fe1\u53f7\uff09\uff0c\u8fd9\u7ec4\u4fe1\u53f7\u7531 $m$ \u4e2a\u5355\u4e2a\u6570\u636e\u4fe1\u53f7\u7ec4\u6210\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u7528\u540c\u4e00\u4e2a\u8bd1\u7801\u5668\u6765\u63a7\u5236 $m$ \u4e2a $2^n \\times 2$ AND-OR\u3002</p> \u6bd4\u5982\u8fd9\u4e2a $m-$wide $4-to-1$ MUX <p></p> <p>\u9664\u4e86\u591a\u8def\u590d\u7528\u5668\uff0c\u9009\u62e9\u5668\u8fd8\u6709\u5176\u4ed6\u7684\u7535\u8def\u5b9e\u73b0\u65b9\u6cd5\uff0c\u6bd4\u5982\u4e09\u6001\u95e8\u548c\u4f20\u8f93\u95e8\u3002</p> Three-state logic in place of AND-ORDistributing the decoding across the three-state drivers <p></p> <p></p> <p>\u8fd9\u4e2a\u7535\u8def\u8bbe\u8ba1\u76f8\u5f53\u4e8e\uff0c\u5148\u8fdb\u884c\u56db\u9009\u4e8c\uff0c\u518d\u8fdb\u884c\u4e8c\u9009\u4e00\uff0c\u4ece\u800c\u5b9e\u73b0\u56db\u9009\u4e00\u3002</p> <p>MUX \u7684\u7535\u8def\u5b9e\u73b0\u6709\u4e00\u79cd\u4f18\u5316\u65b9\u6848\uff0c\u5c31\u662f\u901a\u8fc7\u628a\u4e00\u90e8\u5206\u7684\u63a7\u5236\u7aef\u7684\u8f93\u5165\u5199\u5230\u9009\u9879\u7aef\u4f5c\u4e3a\u5e38\u91cf\u6765\u88ab\u9009\u62e9\uff0c\u4ece\u800c\u7b80\u5316\u5143\u4ef6\uff08\u964d\u7ef4\uff09\u3002\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u770b\u770b\u600e\u4e48\u5b9e\u73b0\uff1a</p> MUX \u7684\u964d\u7ef4\u4f18\u5316 <p></p> <p></p> <p></p> <p>\u6ce8\uff1a\u4e0a\u56fe\u6709\u8bef\uff0c\u5e94\u8be5\u662f $4-to-1$ MUX\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ec4\u5408\u903b\u8f91\u8868\u8fbe\u5f0f\u6765\u66f4\u6df1\u523b\u5730\u7406\u89e3\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u6837\u505a\uff08\u4ee5 $Y$ \u4e3e\u4f8b\uff09\uff1a</p> <p>$$ \\begin{aligned} Y &amp; = \\overline{A}\\overline{B}C+\\overline{A}B\\overline{C}+A\\overline{B}C+AB\\overline{C} \\cr &amp; = \\overline{A}\\overline{B}\\overline{C}\\cdot 0+\\overline{A}\\overline{B}C\\cdot 1+\\overline{A}B\\overline{C}\\cdot 1+\\overline{A}BC\\cdot 0+A\\overline{B}\\overline{C}\\cdot 0+A\\overline{B}C\\cdot 1+AB\\overline{C}\\cdot 1+ABC\\cdot 0 \\cr &amp; = \\overline{A}\\overline{B}(\\overline{C}\\cdot 0+C\\cdot 1)+\\overline{A}B(\\overline{C}\\cdot 1+C\\cdot 0)+A\\overline{B}(\\overline{C}\\cdot 0+C\\cdot 1)+AB(\\overline{C}\\cdot 1+C\\cdot 0) \\end{aligned} $$</p> <p>\u8bd1\u7801\u5668\u4e0e\u591a\u8def\u590d\u7528\u5668</p> <p>\u8bd1\u7801\u5668\u548c\u591a\u8def\u590d\u7528\u5668\u7684\u539f\u7406\u4e0e\u5b9e\u73b0\u90fd\u6709\u76f8\u4f3c\u4e4b\u5904\u3002\u5982\u679c\u6211\u4eec\u8981\u5b9e\u73b0\u4efb\u4f55\u7ec4\u5408\u903b\u8f91\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u4f7f\u7528\u8bd1\u7801\u5668\u4f1a\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u53ea\u9700\u8981\u628a\u679a\u4e3e\u51fa\u7684\u6700\u5c0f\u9879\u7528\u4e00\u4e2a\u6216\u95e8\u8fde\u63a5\u5373\u53ef\uff0c\u800c MUX \u5219\u9700\u8981\u7528\u5f88\u591a\u7684\u4e0e\u95e8\u6765\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\u3002\u5f53\u7136\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b MUX \u53ef\u4ee5\u8fdb\u884c\u964d\u7ef4\u4f18\u5316\uff0c\u6709\u65f6\u5019\u4f1a\u6bd4\u8bd1\u7801\u5668\u6548\u679c\u66f4\u597d\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u6837\u7684\u6bd4\u8f83\u4e0d\u7b97\u516c\u5e73\uff0c\u56e0\u4e3a\u5b83\u4eec\u867d\u7136\u5f88\u76f8\u4f3c\uff0c\u4f46\u8bbe\u8ba1\u7684\u76ee\u7684\u662f\u5dee\u522b\u5f88\u5927\u7684\u3002\u8bd1\u7801\u5668\u7528\u4e8e\u8bd1\u7801\uff08interpret a coded data\uff09\uff0c\u800c MUX \u7528\u4e8e\u9009\u62e9\u5e76\u4f20\u8f93\u6570\u636e\uff08select and transmit data\uff09\u3002\u867d\u7136 MUX \u4e2d\u7ecf\u5e38\u7528\u8bd1\u7801\u5668\u6765\u4f5c\u4e3a\u63a7\u5236\u7aef\uff0c\u4f46 MUX \u4e2d\u7684\u8bd1\u7801\u5668\u548c\u4e00\u4e2a\u6b63\u5e38\u7684\u8bd1\u7801\u5668\u7684\u7528\u9014\u76f8\u53bb\u751a\u8fdc\uff1aMUX \u4e2d\u7684\u8bd1\u7801\u5668\u53ea\u7528\u4e8e\u63a7\u5236\uff0c\u5b83\u7528 $n$ \u4e2a\u8f93\u5165\u4fe1\u53f7\u6765\u8868\u793a\u9009\u62e9 $n$ \u4e2a\u5f85\u9009\u9879\u4e2d\u7684\u54ea\u4e00\u9879\uff0c\u8bd1\u7801\u5668\u4fe1\u53f7\u672c\u8eab\u5e76\u4e0d\u4f20\u9012\u9664\u4e86\u201c\u9009\u62e9\u201d\u4e4b\u5916\u7684\u4efb\u4f55\u610f\u4e49\uff1b\u800c\u5728\u4e00\u4e2a\u6b63\u5e38\u7684\u8bd1\u7801\u5668\u4e2d\uff0c$n$ \u4e2a\u8f93\u5165\u663e\u7136\u662f\u6709\u610f\u4e49\u7684\uff0c\u5b83\u4eec\u5c31\u662f\u8bd1\u7801\u5668\u6240\u201c\u8bd1\u201d\u7684\u201c\u7801\u201d\u3002\u8fd9\u5c31\u662f\u4e24\u8005\u7684\u533a\u522b\u3002</p>"},{"location":"courses/dd/note2/#_6","title":"\u7b97\u672f\u903b\u8f91\u7535\u8def","text":""},{"location":"courses/dd/note2/#_7","title":"\u4ece\u5168\u52a0\u5668\u5230\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668","text":"<p>\u9996\u5148\u6211\u4eec\u5148\u628a\u6ce8\u610f\u529b\u653e\u5728\u4e00\u4e2a\u5168\u52a0\u5668\u4e0a\u3002\u8981\u628a\u591a\u4e2a\u5168\u52a0\u5668\u8fde\u63a5\u8d77\u6765\u5f62\u6210\u80fd\u591f\u8ba1\u7b97\u66f4\u5927\u6570\u636e\u7684\u52a0\u6cd5\u5668\uff0c\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5904\u7406\u597d\u5168\u52a0\u5668\u4e4b\u95f4\u300c\u8fdb\u4f4d\u300d\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5168\u52a0\u5668\u800c\u8a00\uff0c\u5b83\u5411\u540e\u4e00\u4e2a\u5168\u52a0\u5668\u7684\u8fdb\u4f4d\uff08$C$\uff0ccarry\uff09\u6709\u4e24\u4e2a\u6765\u6e90\uff0c\u4e00\u4e2a\u662f\u81ea\u8eab\u52a0\u6cd5\u4ea7\u751f\u7684\u8fdb\u4f4d\uff0c\u8bb0\u4e3a $G$\uff08generate\uff09\uff0c\u53e6\u4e00\u4e2a\u662f\u524d\u4e00\u4e2a\u5168\u52a0\u5668\u4f20\u9012\u8fc7\u6765\u7684\u8fdb\u4f4d\uff0c\u8bb0\u4e3a $P$\uff08propagate\uff09\uff0c\u6211\u4eec\u6709\uff1a</p> <p>$$ C_{i+1} = A_i B_i + (A_i \\oplus B_i) C_i = G_i + P_i \\cdot C_i $$</p> <p>\u5177\u4f53\u7535\u8def\u5b9e\u73b0\u5982\u4e0b\u56fe\uff1a</p> <p>\u6700\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u628a\u5168\u52a0\u5668\u76f4\u63a5\u94fe\u5f0f\u8fde\u63a5\uff0c\u5373\u76f4\u63a5\u628a\u524d\u4e00\u4e2a\u5168\u52a0\u5668\u7684\u8fdb\u4f4d\u8fde\u63a5\u5230\u540e\u4e00\u4e2a\u5168\u52a0\u5668\u4e0a\uff0c\u8fd9\u6837\u7684\u505a\u6cd5\u53eb\u505a\u884c\u6ce2\u52a0\u6cd5\u5668\uff08ripple-carry adder\uff09\u3002\u884c\u6ce2\u52a0\u6cd5\u5668\u6700\u5927\u7684\u5f0a\u7aef\u5728\u4e8e\uff0c\u540e\u4e00\u4e2a\u5168\u52a0\u5668\u9700\u8981\u7b49\u5f85\u524d\u4e00\u4e2a\u5168\u52a0\u5668\u7684\u8ba1\u7b97\u5b8c\u6bd5\u540e\uff0c\u624d\u80fd\u628a\u8fdb\u4f4d\u4f20\u9012\u8fc7\u6765\uff0c\u5f53\u5904\u7406\u8f83\u5927\u6570\u636e\u7684\u52a0\u6cd5\u65f6\uff0c\u884c\u6ce2\u52a0\u6cd5\u5668\u7684\u6548\u7387\u5c31\u592a\u4f4e\u4e86\u3002</p> <p>\u6240\u4ee5\uff0c\u6709\u6ca1\u6709\u529e\u6cd5\u63d0\u524d\u628a\u8fdb\u4f4d\u4f20\u9012\u4e0b\u53bb\uff0c\u800c\u4e0d\u9700\u8981\u7b49\u5f85\u524d\u9762\u7684\u5168\u52a0\u5668\u5b8c\u5168\u8ba1\u7b97\u5b8c\u6bd5\u5462\uff1f\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\uff08carry-lookahead adder, or CLA\uff09\u5c31\u662f\u7528\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u3002\u90a3\u4e48\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u662f\u600e\u4e48\u505a\u5230\u63d0\u524d\u628a\u8fdb\u4f4d\u4f20\u9012\u4e0b\u53bb\u7684\u5462\uff1f\u8ba9\u6211\u4eec\u518d\u628a\u6ce8\u610f\u529b\u8f6c\u5411\u516c\u5f0f\u63a8\u5bfc\uff1a</p> <p>$$ C_1 = G_0 + P_0 C_0 $$</p> <p>$$ \\begin{aligned} C_2 &amp; = G_1 + P_1 C_1 = G_1 + P_1 (G_0 + P_0 C_0) \\cr &amp; = G_1 + P_1 G_0 + P_1 P_0 C_0 \\end{aligned} $$</p> <p>$$ \\cdots $$</p> <p>$$ C_4 = G_3 + P_3 G_2 + P_3 P_2 G_1 + P_3 P_2 P_1 G_0 + P_3 P_2 P_1 P_0 C_0 $$</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c$C_4$ \u4e0d\u518d\u4f9d\u8d56\u4e8e $C_3$\uff0c\u800c\u662f\u76f4\u63a5\u4f9d\u8d56\u4e8e $C_0$\u3002\u6211\u4eec\u53ea\u9700\u8981\u5e76\u884c\u8ba1\u7b97\u6bcf\u4e2a\u5168\u52a0\u5668\u7684 $P$ \u548c $G$\uff0c\u7136\u540e\u628a $C_0$ \u4e0e\u5b83\u4eec\u7ed3\u5408\u5373\u53ef\u8ba1\u7b97\u5f97\u51fa\u6bcf\u4e2a\u5168\u52a0\u5668\u5411\u540e\u4f20\u9012\u7684\u8fdb\u4f4d $C_{i+1} = G_{0\\sim i} + P_{0\\sim i} C_0$\u3002</p> <p>\u5177\u4f53\u7535\u8def\u5b9e\u73b0\u5982\u4e0b\u56fe\uff0c\u6211\u4eec\u53d1\u73b0\u6240\u6709\u5168\u52a0\u5668\u7684 $P$ \u548c $G$ \u90fd\u662f\u5e76\u884c\u8ba1\u7b97\u7684\uff0c\u800c\u5bf9\u4e8e\u6bcf\u4e2a\u8fdb\u4f4d\u7684\u8ba1\u7b97\uff0c\u53ea\u9700\u8981\u989d\u5916\u6d88\u8017 $C_0$ \u7ecf\u8fc7\u4e00\u4e2a\u4e0e\u95e8\u548c\u4e00\u4e2a\u6216\u95e8\u7684\u65f6\u95f4\uff1a</p> <p>Source: https://en.wikipedia.org/wiki/Carry-lookahead_adder</p> <p>\u4f46\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u6837\u7684\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u867d\u7136\u89e3\u51b3\u4e86\u8fdb\u4f4d\u5ef6\u8fdf\u7684\u95ee\u9898\uff0c\u4f46\u662f\u4ecd\u7136\u65e0\u6cd5\u5927\u89c4\u6a21\u4f7f\u7528\uff0c\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u7535\u8def\u4e2d\u7684\u591a\u8f93\u5165\u4e0e\u95e8\u548c\u6216\u95e8\uff0c\u5982\u679c\u6211\u4eec\u8981\u8fde\u63a5 $n$ \u4e2a\u5168\u52a0\u5668\uff0c\u90a3\u4e48\u5c31\u9700\u8981 $n+1$ \u8f93\u5165\u7684\u4e0e\u95e8\u548c\u6216\u95e8\uff0c\u8fd9\u662f\u4e0d\u73b0\u5b9e\u7684\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u628a\u8fd9\u4e00\u4e2a 4-bit \u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u4f5c\u4e3a\u4e00\u4e2a\u6a21\u5757\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u7ec4\u5efa\u66f4\u5927\u7684\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u3002</p> <p>$$ C_4 = G_{0\\sim 3} + P_{0\\sim 3} C_0 $$</p> <p>$$ C_8 = G_{4\\sim 7} + P_{4\\sim 7} C_4 $$</p> <p>$$ \\cdots $$</p> <p>$$ \\begin{aligned} C_{16} &amp; = G_{12\\sim 15} + P_{12\\sim 15} C_12 \\cr &amp; = G_{12\\sim 15} + P_{12\\sim 15} G_{8\\sim 11} + P_{12\\sim 15} P_{8\\sim 11} G_{4\\sim 7} \\cr &amp; + P_{12\\sim 15} P_{8\\sim 11} P_{4\\sim 7} G_{0\\sim 3} + P_{12\\sim 15} P_{8\\sim 11} P_{4\\sim 7} P_{0\\sim 3} C_0 \\end{aligned} $$</p> <p>\u6211\u4eec\u60ca\u8bb6\u5730\u53d1\u73b0\uff0c\u8fd9\u4e2a $C_{16}$ \u8868\u8fbe\u5f0f\u7684\u5199\u6cd5\u548c\u4e4b\u524d\u63a8\u5bfc\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u65f6 $C_4$ \u7684\u5199\u6cd5\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u53ea\u9700\u8981\u505a\u4e00\u4e9b\u4e0b\u6807\u53d8\u6362\u5373\u53ef\u3002\u8fd9\u5c31\u542f\u53d1\u6211\u4eec\u5982\u4f55\u7ec4\u5efa\u66f4\u5927\u89c4\u6a21\u7684\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\uff1a\u6211\u4eec\u628a\u82e5\u5e72\u4e2a\u5c0f\u7684\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u8fde\u63a5\u8d77\u6765\uff0c\u5c31\u50cf\u6211\u4eec\u5f53\u521d\u628a\u82e5\u5e72\u4e2a\u5168\u52a0\u5668\u8fde\u63a5\u6210\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u4e00\u6837\uff01</p> 4-bit CLA16-bit CLA64-bit CLA <p> </p> <p> </p> <p> </p> <p>Source: https://en.wikipedia.org/wiki/Lookahead_carry_unit</p>"},{"location":"courses/dd/note2/#_8","title":"\u52a0\u51cf\u6cd5\u7684\u6ea2\u51fa\u68c0\u67e5","text":"<p>\u5e38\u89c1\u7684\u52a0\u51cf\u6cd5\u6ea2\u51fa\u60c5\u51b5\u662f\uff0c\u540c\u53f7\u76f8\u52a0\u548c\u5f02\u53f7\u76f8\u51cf\u3002\u4e0b\u9762\u7ed9\u51fa\u4e24\u79cd\u6700\u7b80\u5355\u7684\u6ea2\u51fa\u68c0\u67e5\uff08overflow detection\uff09\uff1a</p> <ul> <li>\u68c0\u67e5\u8f93\u51fa\u7684\u7b26\u53f7\u4f4d\u548c\u52a0\u6570\u6216\u51cf\u6570\uff08top operand\uff09\u7684\u7b26\u53f7\u4f4d\u662f\u5426\u4e00\u81f4</li> <li>\u5bf9\u4e8e $n$ \u4f4d\u52a0\u51cf\u6cd5\uff0c\u6ea2\u51fa\u53ef\u4ee5\u8868\u793a\u4e3a $V=C_n\\oplus C_{n-1}$\uff0c$V$ \u4e3a<code>1</code>\u8868\u793a\u6ea2\u51fa</li> </ul>"},{"location":"courses/dd/note2/#_9","title":"\u5176\u4ed6\u7b97\u6570\u51fd\u6570","text":"<ul> <li>\u81ea\u589e\uff08incrementing\uff09\u4e0e\u81ea\u51cf\uff08decrementing\uff09<ul> <li>\u81ea\u589e\u4e0e\u81ea\u51cf\u8fd0\u7b97\u53ef\u4ee5\u901a\u8fc7\u5bf9\u52a0\u51cf\u6cd5\u5668\u8fdb\u884c\u6536\u7f29\uff08contraction\uff09\u5f97\u5230</li> <li>\u5177\u4f53\u800c\u8a00\u5c31\u662f\u628a\u52a0\u51cf\u6cd5\u5668\u7684\u5176\u4e2d\u4e00\u4e2a\u8f93\u5165\u8bbe\u4e3a\u5e38\u91cf\uff08\u81ea\u589e\u81ea\u51cf\u7684\u6b65\u957f\uff09</li> </ul> </li> <li>\u4e58\u6cd5\u4e0e\u9664\u6cd5<ul> <li>\u4e0e $2^n$ \u7684\u4e58\u6570\u662f\u6700\u7b80\u5355\u7684\uff0c\u53ea\u9700\u8981\u901a\u8fc7\u79fb\u4f4d\u5c31\u53ef\u4ee5\u5b9e\u73b0</li> <li>\u4efb\u610f\u5e38\u6570\u7684\u4e58\u9664\u7684\u4e00\u79cd\u5b9e\u73b0\u601d\u8def\u662f\uff0c\u62c6\u5206\u6210\u4e0e\u82e5\u5e72\u4e2a $2^n$ \u7684\u4e58\u9664</li> </ul> </li> <li>\u96f6\u6269\u5c55\uff08zero fill\uff09\u4e0e\u7b26\u53f7\u4f4d\u6269\u5c55\uff08extension\uff09</li> </ul>"},{"location":"courses/dd/note3/","title":"\u65f6\u5e8f\u903b\u8f91\u8bbe\u8ba1","text":"<p> \u7ea6 1976 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p>"},{"location":"courses/dd/note3/#_2","title":"\u65f6\u5e8f\u903b\u8f91\u7406\u89e3","text":"<p>\u4ee5\u4e0b\u662f Wikipedia \u5bf9\u4e8e\u65f6\u5e8f\u903b\u8f91\u3001\u540c\u6b65\u4e0e\u5f02\u6b65\u7684\u5b9a\u4e49\uff1a</p> <p>Sequential logic is a type of logic circuit whose output depends on the present value of its input signals and on the sequence of past inputs. That is, sequential logic has state (memory) while combinational logic does not.</p> <p>Digital sequential logic circuits are divided into synchronous and asynchronous types. In synchronous sequential circuits, the state of the device changes only at discrete times in response to a clock signal. In asynchronous circuits the state of the device can change at any time in response to changing inputs.</p> <p>\u5f88\u81ea\u7136\u5730\uff0c\u5f02\u6b65\u65f6\u5e8f\u903b\u8f91\u662f input-driven \u7684\uff0c\u6bcf\u5f53\u8f93\u5165\u53d1\u751f\u53d8\u5316\uff0c\u5c31\u8981\u8fdb\u884c\u72b6\u6001\u7684\u66f4\u65b0\u3002\u4f46\u662f\uff0c\u5f02\u6b65\u65f6\u5e8f\u903b\u8f91\u7684\u5f0a\u7aef\u5728\u4e8e\uff0c\u5f53\u8f93\u5165\u5305\u542b\u591a\u4e2a\u53d8\u91cf\u800c\u5b83\u4eec\u7684\u62b5\u8fbe\u6709\u5148\u540e\u533a\u5206\u7684\u65f6\u5019\uff0c\u7535\u8def\u53ef\u80fd\u4f1a\u504f\u79bb\u9884\u671f\u800c\u8fdb\u5165\u9519\u8bef\u7684\u72b6\u6001\u3002</p> <p>\u540c\u6b65\u65f6\u5e8f\u903b\u8f91\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u65f6\u949f\u4fe1\u53f7\u6765\u540c\u6b65\uff08synchronize, or clock\uff09\u6240\u6709\u8f93\u5165\u53d8\u91cf\u4ea7\u751f\u4f5c\u7528\u7684\u65f6\u95f4\uff0c\u5373\u4f7f\u8f93\u5165\u53d8\u91cf\u5148\u540e\u62b5\u8fbe\uff0c\u5b83\u4eec\u4e5f\u5f97\u7b49\u5f85\u65f6\u949f\u4fe1\u53f7\u6765\u4e34\u65f6\u624d\u80fd\u53d1\u751f\u4f5c\u7528\uff0c\u4ece\u800c\u66f4\u65b0\u7535\u8def\u7684\u72b6\u6001\u3002</p> <p>\u5de5\u7a0b\u5e94\u7528\u4e2d\uff0c\u540c\u6b65\u65f6\u5e8f\u903b\u8f91\u5f80\u5f80\u66f4\u4e3a\u666e\u904d\uff0c\u56e0\u4e3a\u5176\u8bbe\u8ba1\u7b80\u5355\u800c\u4e14\u9c81\u68d2\u6027\u5f3a\u3002\u5f02\u6b65\u65f6\u5e8f\u903b\u8f91\u7684\u8bbe\u8ba1\u901a\u5e38\u66f4\u4e3a\u590d\u6742\uff0c\u591a\u7528\u4e8e\u9700\u8981\u66f4\u9ad8\u66f4\u65b0\u901f\u5ea6\u7684\u573a\u5408\uff08\u4e0d\u50cf\u540c\u6b65\u65f6\u5e8f\u903b\u8f91\u90a3\u6837\u53d7\u9650\u4e8e\u65f6\u949f\u4fe1\u53f7\u7684\u9891\u7387\uff09\u3002</p> \u65f6\u5e8f\u903b\u8f91\u540c\u6b65\u65f6\u5e8f\u903b\u8f91\u5f02\u6b65\u65f6\u5e8f\u903b\u8f91 <p> </p> <p> </p> <p> </p>"},{"location":"courses/dd/note3/#_3","title":"\u4ece\u9501\u5b58\u5668\u5230\u89e6\u53d1\u5668","text":"Buffer as a Storage$SR$ Latch with NOR Gates$\\overline{S} \\overline{R}$ Latch with NAND Gates$SR$ Latch with Control Input$D$ Latch <p>\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u5ef6\u8fdf\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0\u4fe1\u606f\u5b58\u50a8\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5b58\u5728 $t_G$ \u5ef6\u8fdf\u7684 buffer \u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u4fe1\u606f\u5728 $t_G$ \u8fd9\u6bb5\u65f6\u95f4\u5185\u662f\u4e0d\u53d8\u7684\uff0c\u5373\u88ab\u77ed\u6682\u5730\u5b58\u50a8\u4e86\uff08\u5982\u56fe a\uff09\u3002\u8fdb\u4e00\u6b65\u5730\uff0c\u628a buffer \u7684\u8f93\u51fa\u548c\u8f93\u5165\u76f8\u8fde\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4fe1\u606f\u7684\u957f\u4e45\u5b58\u50a8\uff08\u5982\u56fe bc\uff09\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u4fe1\u606f\u5b58\u50a8\u5355\u5143\u800c\u8a00\uff0c\u4fee\u6539\u5b58\u50a8\u7684\u4fe1\u606f\u5185\u5bb9\u662f\u4e0d\u65b9\u4fbf\u7684\u3002</p> <p>\u6211\u4eec\u628a\u7ec4\u6210 buffer \u7684\u975e\u95e8\uff08\u5982\u56fe d\uff09\u66ff\u6362\u6210\u6216\u975e\u95e8\u6216\u8005\u4e0e\u975e\u95e8\uff0c\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u4fee\u6539\u5b58\u50a8\u7684\u4fe1\u606f\u5185\u5bb9\uff0c\u8fd9\u5c31\u662f $SR$ Latch\u3002\u7a0d\u52a0\u601d\u8003\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u6837\u7684\u4e00\u4e2a $SR$ Latch \u5176\u5b9e\u662f\u5f02\u6b65\u7684\uff0c\u56e0\u800c\u8f93\u5165 S \u548c R \u7684\u5148\u540e\u62b5\u8fbe\u53ef\u80fd\u5bfc\u81f4\u7535\u8def\u504f\u79bb\u9884\u671f\u800c\u8fdb\u5165\u9519\u8bef\u7684\u72b6\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u4e00\u4e2a\u4f7f\u80fd\u63a7\u5236\u7aef C \u6765\u786e\u4fdd S \u548c R \u90fd\u5230\u4f4d\u65f6\u518d\u4f7f\u80fd\uff0c\u8fd9\u5c31\u662f $SR$ Latch with Control Input\uff08\u6ce8\u610f\u8fd9\u5e76\u4e0d\u662f\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u540c\u6b65\uff0c\u5f53 C \u7f6e<code>1</code>\u65f6\u5176\u4ecd\u7136\u662f\u5f02\u6b65\u7684\uff09\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a Latch \u4ecd\u7136\u5b58\u5728\u4e00\u79cd\u672a\u5b9a\u4e49\u72b6\u6001\uff0c\u5373 C\u3001S \u548c R \u5747\u7f6e<code>1</code>\u3002</p> <p>\u5bf9\u4e8e $SR$ Latch with Control Input \u800c\u8a00\uff0c\u7528 S \u548c R \u5747\u7f6e<code>0</code>\u6765\u8868\u793a\u4fdd\u6301\u6001\u662f\u591a\u4f59\u7684\uff08\u56e0\u4e3a C \u7f6e<code>0</code>\u5373\u53ef\u8868\u793a\u4fdd\u6301\u6001\uff09\uff0c\u800c\u4e14\u4e0a\u8ff0\u7684\u672a\u5b9a\u4e49\u72b6\u6001\u4e5f\u5f88\u9ebb\u70e6\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u628a S \u548c R \u5f3a\u5236\u8bbe\u5b9a\u4e3a\u76f8\u53cd\u7684\u4e24\u4e2a\u8f93\u5165\uff0c\u7528 $D$ \u548c $\\overline{D}$ \u6765\u4ee3\u66ff $S$ \u548c $R$\uff0c\u8fd9\u5c31\u662f $D$ Latch\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b\uff0c\u6211\u4eec\u4ece buffer \u51fa\u53d1\uff0c\u9010\u6b65\u89e3\u51b3\u4fe1\u606f\u5b58\u50a8\u548c\u4fee\u6539\u7684\u95ee\u9898\uff0c\u6700\u7ec8\u8bbe\u8ba1\u51fa\u4e86 $D$ Latch\u3002\u7136\u800c\uff0c$D$ Latch \u4e5f\u5e76\u4e0d\u662f\u5b8c\u7f8e\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c$D$ Latch \u5b58\u5728\u7684\u95ee\u9898\uff0c\u4e5f\u662f\u6240\u6709\u7684 Latch \u90fd\u65e0\u6cd5\u89c4\u907f\u7684\u95ee\u9898\uff0c\u5373\u900f\u660e\uff08transparent, which means its input value can be seen from the outputs while the control input is <code>1</code>\uff09\u3002</p> <p>\u900f\u660e\u4e3a\u4ec0\u4e48\u4f1a\u4ea7\u751f\u95ee\u9898\u5462\uff1f\u5728\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u4e2d\uff0c\u603b\u662f\u5b58\u5728\u4ece\u4fe1\u606f\u5b58\u50a8\u5355\u5143\u5230\u7ec4\u5408\u903b\u8f91\u7535\u8def\u7684\u53cd\u9988\u8def\u5f84\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a Latch \u800c\u8a00\uff0c\u5176\u8f93\u5165\u603b\u662f\u90e8\u5206\u6765\u81ea\u81ea\u8eab\u6216\u5176\u4ed6 Latch \u7684\u8f93\u51fa\u3002\u7531\u4e8e Latch \u662f\u900f\u660e\u7684\uff0c\u5728\u540c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\uff0c\u8f93\u51fa\u53ef\u80fd\u4f1a\u53cd\u8fc7\u6765\u4fee\u6539\u8f93\u5165\uff0c\u4ece\u800c\u5bfc\u81f4 Latch \u7684\u72b6\u6001\u66f4\u65b0\u53d1\u751f\u4e86\u4e0d\u6b62\u4e00\u6b21\u3002\u8fd9\u4e2a\u95ee\u9898\u662f\u5f88\u4e25\u91cd\u7684\uff0c\u5bf9\u4e8e\u900f\u660e\u7684 Latch \u800c\u8a00\uff0c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u72b6\u6001\u66f4\u65b0\u7684\u6b21\u6570\uff0c\u53d6\u51b3\u4e8e\u65f6\u949f\u5468\u671f\u7684\u957f\u77ed\u548c\u53cd\u9988\u8def\u5f84\u7684\u7ec4\u5408\u7535\u8def\u5ef6\u8fdf\uff0c\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u8fd9\u4e2a\u65f6\u949f\u5468\u671f\u7ed3\u675f\u540e Latch \u7a76\u7adf\u5904\u5728\u4ec0\u4e48\u72b6\u6001\u3002</p> $SR$ Master-Slave Flip-FlopNegative-Edge-Triggered $D$ Flip-FlopPositive-Edge-Triggered $D$ Flip-Flop <p> </p> <p> </p> <p> </p> <p>\u4e0a\u6587\u63d0\u5230\uff0cLatch \u662f\u900f\u660e\u7684\uff0c\u6240\u4ee5\u65e0\u6cd5\u786e\u5b9a\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u72b6\u6001\u66f4\u65b0\u7684\u6b21\u6570\u3002\u6211\u4eec\u5e0c\u671b\u8bbe\u8ba1\u4e00\u4e2a\u975e\u900f\u660e\u7684\u4fe1\u606f\u5b58\u50a8\u5355\u5143\uff0c\u786e\u4fdd\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u4ec5\u53d1\u751f\u4e00\u6b21\u72b6\u6001\u66f4\u65b0\u3002\u901a\u5e38\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u628a\u4e24\u4e2a Latch \u4e32\u8054\u8d77\u6765\uff0c\u5f53\u65f6\u949f\u4fe1\u53f7\u4e3a<code>1</code>\u65f6\uff0c\u4e3b Latch \u5199\u5165\uff0c\u4ece Latch \u53ea\u8bfb\uff1b\u5f53\u65f6\u949f\u4fe1\u53f7\u4e3a<code>0</code>\u65f6\uff0c\u4e3b Latch \u53ea\u8bfb\uff0c\u4ece Latch \u5199\u5165\u3002\u56e0\u6b64\uff0c\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\uff0c\u524d\u4e00\u534a\u65f6\u95f4\u66f4\u65b0\u4e3b Latch\uff0c\u540e\u4e00\u534a\u65f6\u95f4\u66f4\u65b0\u4ece Latch\uff0c\u4ece\u800c\u5bf9\u4e8e\u6574\u4f53\u800c\u8a00\uff0c\u4ec5\u53d1\u751f\u4e00\u6b21\u72b6\u6001\u66f4\u65b0\uff0c\u8fd9\u5c31\u662f\u4e3b\u4ece\u89e6\u53d1\u5668\uff08Master-Slave Flip-Flop\uff09\u3002</p> \u6559\u6750\u4e2d\u7684\u4f20\u7edf\u89c2\u70b9 <p>Logic and Computer Design Fundamentals \u6559\u6750\u4e2d\u8ba4\u4e3a\uff0c\u4e3b\u4ece\u89e6\u53d1\u5668\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1apulse-triggered \u548c edge-triggered\u3002</p> <p>$SR$ \u89e6\u53d1\u5668\u5c31\u5c5e\u4e8e\u524d\u8005\u3002\u4f46\u662f\uff0c$SR$ \u89e6\u53d1\u5668\u5b58\u5728\u4e00\u4e2a\u5f88\u5927\u7684\u95ee\u9898\uff0c\u5373 1s-catching\u3002\u5f53\u65f6\u949f\u4fe1\u53f7\u4e3a<code>1</code>\u65f6\uff0cS \u6216 R \u77ed\u6682\u7684\u7f6e<code>1</code>\u5747\u4f1a\u88ab Master \u6355\u6349\u5230\uff0c\u5e76\u5728\u65f6\u949f\u4fe1\u53f7\u4e3a<code>0</code>\u65f6\u4f20\u9012\u7ed9\u4ece Slave\u3002\u7531\u4e8e\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u603b\u662f\u5b58\u5728\u53cd\u9988\u8def\u5f84\uff0c\u6240\u4ee5\u540c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185 Master \u7684\u72b6\u6001\u53ef\u80fd\u4f1a\u66f4\u65b0\u591a\u6b21\uff0c\u867d\u7136\u5bf9\u4e8e\u89e6\u53d1\u5668\u6574\u4f53\u800c\u8a00\u4ecd\u7136\u4ec5\u6709\u4e00\u6b21\u72b6\u6001\u66f4\u65b0\uff08\u56e0\u4e3a Slave \u4ec5\u66f4\u65b0\u4e00\u6b21\uff09\uff0c\u4f46\u662f\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u65e0\u6cd5\u786e\u4fdd Master \u4f20\u9012\u7ed9 Slave \u7684\u4fe1\u606f\u548c\u6211\u4eec\u8d77\u521d\u5199\u5165 Master \u7684\u4fe1\u606f\u662f\u5426\u4e00\u81f4\u3002</p> <p>\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3 1s-catching\uff0c\u8ba9\u6211\u4eec\u56de\u5fc6\u4e00\u4e0b\u65f6\u5e8f\u903b\u8f91\u5ef6\u8fdf\u5206\u6790\u4e2d\u63d0\u5230\u7684 setup-time\uff08\u5982\u4e0b\u56fe\uff09\u3002pulse-triggered \u89e6\u53d1\u5668\u4e4b\u6240\u4ee5\u9700\u8981\u6bd4 edge-triggered \u89e6\u53d1\u5668\u66f4\u957f\u7684 setup-time\uff0c\u5c31\u662f\u4e3a\u4e86\u786e\u4fdd\u65f6\u949f\u4fe1\u53f7\u4e3a<code>1</code>\u65f6\u89e6\u53d1\u5668\u8f93\u5165\u7aef\u603b\u662f\u7a33\u5b9a\u7684\uff0c\u4ece\u800c\u786e\u4fdd\u4e0d\u4f1a\u53d1\u751f 1s-catching\u3002</p> <p>\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c1s-catching \u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4e9a\u7a33\u6001\uff08metastability\uff09\u7684\u4e00\u79cd\u8868\u73b0\u3002\u5f53\u6211\u4eec\u6ca1\u80fd\u5728 setup-time \u671f\u95f4\u7ef4\u6301\u6570\u636e\u7a33\u5b9a\uff0c\u5c31\u4f1a\u5bfc\u81f4\u89e6\u53d1\u5668\u9677\u5165\u4e9a\u7a33\u6001\u3002\u901a\u5e38\u7684\u89e3\u51b3\u601d\u8def\u662f\u4e32\u8054\u4e24\u5c42\u751a\u81f3\u66f4\u591a\u5c42\u7684\u89e6\u53d1\u5668\u3002</p> <p> </p> <p>\u8bfb\u5230\u8fd9\u91cc\uff0c\u6216\u8bb8\u4f60\u4e5f\u548c\u7b14\u8005\u4e00\u6837\uff0c\u4ea7\u751f\u4e86\u5982\u4e0b\u7684\u7591\u60d1\uff1a \u4e3a\u4ec0\u4e48\u6211\u611f\u89c9 pulse-triggered \u548c 1s-catching \u7684\u6982\u5ff5\u66f4\u50cf\u662f Latch \u7684\u7279\u6027\uff1f \u5982\u679c\u6211\u628a\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u65f6\u949f\u4fe1\u53f7\u8fb9\u6cbf\uff0c\u96be\u9053 pulse-triggered \u4e0d\u4e5f\u5177\u6709 edge-triggered \u7279\u6027\u5417\uff1f \u96be\u9053 pulse-triggered flip-flop \u4e0d\u662f\u4f2a\u547d\u9898\u5417\uff1f</p> <p>\u73b0\u4ee3\u89c2\u70b9\u8ba4\u4e3a\uff0c\u89e6\u53d1\u5668\u5e76\u4e0d\u5b58\u5728\u6240\u8c13\u7684 pulse-triggered\uff08or level-triggered\uff09\u7c7b\u578b\u3002\u6b63\u5982\u9a6c\u5fb7\u8001\u5e08\u5728\u8bfe\u5802\u4e0a\u4e00\u518d\u5f3a\u8c03\u7684\uff0c\u771f\u6b63\u5b58\u5728\u5b9e\u7528\u4ef7\u503c\u7684\u662f\u8fb9\u6cbf\u89e6\u53d1\u5f0f\uff08edge-triggered\uff09\u89e6\u53d1\u5668\uff0c\u6bd4\u5982\u5e7f\u6cdb\u4f7f\u7528\u7684 $D$ \u89e6\u53d1\u5668\u3002\u4e25\u683c\u6765\u8bf4\uff0c\u5728\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1\u8fd9\u95e8\u8bfe\u4e2d\uff0c\u6211\u4eec\u6240\u8bf4\u7684 $D$ \u89e6\u53d1\u5668\u5176\u5b9e\u662f\u8fb9\u6cbf\u89e6\u53d1\u5f0f $D$ \u4e3b\u4ece\u89e6\u53d1\u5668\uff08Master-Slave Edge-Triggered $D$ Flip-Flop\uff09\u3002</p> <p>\u4ee5\u4e0b\u662f Wikipedia \u5bf9\u4e8e\u89e6\u53d1\u5668\u7684\u63cf\u8ff0\uff1a</p> <p>The term flip-flop has historically referred generically to both level-triggered (asynchronous, transparent, or opaque) and edge-triggered (synchronous, or clocked) circuits that store a single bit of data using gates.</p> <p>Modern authors reserve the term flip-flop exclusively for edge-triggered storage elements and latches for level-triggered ones.</p> <p>\u603b\u7ed3\u4e00\u4e0b\uff1a</p> <ul> <li>Latch \u662f\u5f02\u6b65\u7684\u3001\u900f\u660e\u7684\u3001\u8109\u51b2\u89e6\u53d1\u7684\uff0c\u5728\u6574\u4e2a\u65f6\u949f\u4fe1\u53f7\u4e3a<code>1</code>\u7684\u8fc7\u7a0b\u4e2d\u5747\u53ef\u5199\u5165\u4fe1\u606f\u5e76\u591a\u6b21\u66f4\u65b0\u72b6\u6001\uff1b</li> <li>Flip-Flop \u662f\u540c\u6b65\u7684\u3001\u975e\u900f\u660e\u7684\u3001\u8fb9\u6cbf\u89e6\u53d1\u7684\uff0c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u4ec5\u5728\u65f6\u949f\u4fe1\u53f7\u7684\u4e0a\u5347\u6cbf\u6216\u4e0b\u964d\u6cbf\u8fdb\u884c\u4e00\u6b21\u72b6\u6001\u7684\u66f4\u65b0\uff1b</li> </ul> <p>\u9664\u6b64\u4ee5\u5916\uff0c\u8fd8\u6709\u5f88\u591a\u79cd\u5176\u4ed6\u7684\u89e6\u53d1\u5668\u8bbe\u8ba1\uff0c\u6bd4\u5982\u6570\u903b\u8bfe\u5802\u4e0a\u63d0\u5230\u7684 $T$ Flip-Flop \u548c $JK$ Flip-Flop\uff0c\u66f4\u591a\u76f8\u5173\u77e5\u8bc6\u53ef\u4ee5\u53c2\u8003 https://en.wikipedia.org/wiki/Flip-flop_(electronics)\u3002</p>"},{"location":"courses/fds/","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840","text":"<p> \u7ea6 121 \u4e2a\u5b57 </p> <p>Abstract</p> <ul> <li>\u6d59\u6c5f\u5927\u5b66\u300a\u6570\u636e\u7ed3\u6784\u57fa\u7840\u300b\u8bfe\u7a0b\u7b14\u8bb0</li> <li>\u4f9d\u636e\u8bfe\u4ef6\u6574\u7406\uff0c\u5185\u5bb9\u6bd4\u8f83\u7b80\u7565\uff0c\u53ef\u4ee5\u7528\u4f5c\u590d\u4e60\u7684\u63d0\u7eb2</li> <li>\u53c2\u8003\u8d44\u6599\uff1a<ul> <li>\u56fe\u7075\u73ed\u5b66\u4e60\u6307\u5357</li> <li>\u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c</li> <li>OI Wiki</li> </ul> </li> </ul>"},{"location":"courses/fds/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u7b97\u6cd5\u5206\u6790\u57fa\u7840</li> <li>\u57fa\u7840\u6570\u636e\u7ed3\u6784</li> <li>\u6392\u5e8f\u4e0e\u54c8\u5e0c</li> <li>\u9898\u76ee\u96c6\u53ca\u5176\u89e3\u6790\uff0c\u9898\u76ee\u6765\u6e90\uff1a<ul> <li>\u8bfe\u7a0b\u914d\u5957 PTA \u4e60\u9898</li> <li>\u738b\u9053\u300a2023\u5e74\u6570\u636e\u7ed3\u6784\u8003\u7814\u590d\u4e60\u6307\u5bfc\u300b</li> </ul> </li> </ul>"},{"location":"courses/fds/exercise/","title":"\u9898\u76ee\u96c6","text":"<p> \u7ea6 3960 \u4e2a\u5b57  4 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 16 \u5206\u949f</p> <p></p> <p>\u8fd9\u7bc7\u7b14\u8bb0\u6536\u96c6\u4e00\u4e9b\u503c\u5f97\u7559\u610f\u7684\u9898\u76ee\uff0c\u7528\u4e8e FDS \u5e94\u8bd5\uff0c\u9898\u76ee\u6765\u6e90\uff1a</p> <ul> <li>\u8bfe\u7a0b\u914d\u5957 PTA \u4e60\u9898\uff0c\u5305\u62ec Homework 1 ~ 15 \u548c Midterm Examination</li> <li>\u738b\u9053\u300a2023\u5e74\u6570\u636e\u7ed3\u6784\u8003\u7814\u590d\u4e60\u6307\u5bfc\u300b\uff0c\u4f5c\u4e3a\u8865\u5145</li> </ul>"},{"location":"courses/fds/exercise/#_2","title":"\u7b97\u6cd5\u5206\u6790","text":"<ol> <li> <p>(HW1) The recurrent equations for the time complexities of program P1 and P2 are:    \u2003P1: $T(1)=1, T(N)=T(N/3)+1$    \u2003P2: $T(1)=1, T(N)=3T(N/3)+1$    Then the correct conclusion about their time complexities is:</p> <p> A. they are both $\\Omicron(\\log N)$ B. $\\Omicron(\\log N)$ for P1, $\\Omicron(N)$ for P2 C. they are both $\\Omicron(N)$ D. $\\Omicron(\\log N)$ for P1, $\\Omicron(N\\log N)$ for P2 </p> <p>\u4f7f\u7528\u4e3b\u5b9a\u7406\uff0cP1 \u7b26\u5408\u4e3b\u5b9a\u7406\u7b2c\u4e09\u79cd\u60c5\u51b5\uff08\u53d6 k = 1\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(\\log N)$\uff1bP2 \u7b26\u5408\u4e3b\u5b9a\u7406\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(N)$\u3002</p> </li> <li> <p>(HW1) The Fibonacci number sequence {$F_N$} is defined as: $F_0=0$, $F_1=1$, $F_N=F_{N-1}+F_{N-2}$, $N=2,3,...$ The time complexity of the function which calculates $F_N$ recursively is $\\Theta(N!)$. (TRUE of FALSE)</p> <p>\u8003\u8651\u5230\u9012\u5f52\u6811\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u9012\u5f52\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u663e\u7136\u6709\u4e0a\u754c $\\Omicron(2^N)$\u3002</p> <pre><code>int fibonacci(int n) {\n    if (n == 1 || n == 2) return 1;  /* count++ */\n    return fibonacci(n - 1) + fibonacci(n - 2);\n}\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7528 count \u6765\u6807\u8bb0 base case\uff0c\u663e\u7136 count \u7b49\u4e8e\u9012\u5f52\u6811\u7684\u53f6\u8282\u70b9\u6570\u3002\u7a0d\u52a0\u601d\u8003\u53ef\u4ee5\u53d1\u73b0\uff0c\u9012\u5f52\u6811\u7684\u53f6\u8282\u70b9\u6570\u6070\u597d\u7b49\u4e8e\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7b2c n \u9879\u7684\u503c\uff0c\u5373 $f(n)=\\frac{1}{\\sqrt{5}}((\\frac{1+\\sqrt{5}}{2})^ n-(\\frac{1-\\sqrt{5}}{2})^ n)$\uff0c\u6240\u4ee5 $T(N)=\\Theta((\\frac{1+\\sqrt{5}}{2})^ N) \\approx \\Theta(1.618^ N)$\u3002</p> </li> <li> <p>(HW1) The Fibonacci number sequence {$F_N$} is defined as: $F_0=0$, $F_1=1$, $F_N=F_{N-1}+F_{N-2}$, $N=2,3,...$ The space complexity of the function which calculates $F_N$ recursively is:</p> <p> A. $\\Omicron(\\log N)$ B. $\\Omicron(N)$ C. $\\Omicron(F_N)$ D. $\\Omicron(N!)$ </p> <p>\u51fd\u6570\u8c03\u7528\u662f\u901a\u8fc7\u4e00\u79cd\u6808\u7ed3\u6784\u5b9e\u73b0\u7684\uff0c\u5bf9\u4e8e\u9012\u5f52\u800c\u8a00\uff0c\u8c03\u7528\u51fd\u6570\uff08\u5373\u201c\u9012\u201d\uff09\u65f6\u5165\u6808\uff0c\u8fd4\u56de\u51fd\u6570\uff08\u5373\u201c\u5f52\u201d\uff09\u65f6\u51fa\u6808\uff0c\u6240\u4ee5\u8ba1\u7b97\u7a7a\u95f4\u590d\u6742\u5ea6\u5c31\u76f8\u5f53\u4e8e\u8ba1\u7b97\u6808\u4e2d\u6700\u591a\u6709\u591a\u5c11\u4e2a\u88ab\u8c03\u51fd\u6570\u3002</p> <p>\u5728\u8fd9\u4e2a\u9898\u76ee\u4e2d\uff0c\u6808\u4e2d\u88ab\u8c03\u51fd\u6570\u6570\u91cf\u6700\u5927\u503c\u6070\u597d\u7b49\u4e8e\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u52a0 2\uff0c\u4e5f\u5c31\u662f $N$\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(N)$\u3002</p> </li> </ol>"},{"location":"courses/fds/exercise/#_3","title":"\u6808\u548c\u961f\u5217","text":"<ol> <li> <p>(HW3) Represent a queue by a singly linked list. Given the current status of the linked list as <code>1-&gt;2-&gt;3</code> where <code>x-&gt;y</code> means <code>y</code> is linked after <code>x</code>. Now if <code>4</code> is enqueued and then a dequeue is done, the resulting status must be:</p> <p> A. <code>1-&gt;2-&gt;3</code> B. <code>2-&gt;3-&gt;4</code> C. <code>4-&gt;1-&gt;2</code> D. not unique </p> <p>\u5355\u5411\u94fe\u8868\u5b9e\u73b0\u7684\u961f\u5217\uff0c\u5165\u961f\u548c\u51fa\u961f\u4e00\u5b9a\u5206\u522b\u5728\u94fe\u8868\u7684\u5c3e\u548c\u5934\u8fdb\u884c\u3002</p> <p>\u961f\u5217\u7528 first \u548c last \u4e24\u4e2a\u6307\u9488\u6765\u6807\u8bb0\u5934\u548c\u5c3e\uff0c\u5047\u8bbe\u6211\u4eec\u628a\u5165\u961f\u548c\u51fa\u961f\u7684\u4f4d\u7f6e\u4e92\u6362\u4e00\u4e0b\uff1a\u5165\u961f\u5728\u94fe\u8868\u7684\u5934\u8fdb\u884c\uff0c\u8fd9\u5e76\u6ca1\u6709\u95ee\u9898\uff1b\u4f46\u51fa\u961f\u5728\u94fe\u8868\u7684\u5c3e\u8fdb\u884c\u5219\u4f1a\u51fa\u9519\uff0c\u5982\u679c\u6211\u4eec\u628a\u5c3e\u8282\u70b9\u5220\u9664\u4e86\uff0c\u90a3\u4e48 last \u5c31\u6ca1\u6709\u529e\u6cd5\u79fb\u52a8\u5230\u65b0\u7684\u5c3e\u8282\u70b9\uff0c\u8fd9\u662f\u94fe\u8868\u7684\u5355\u5411\u6027\u5bfc\u81f4\u7684\u3002</p> </li> <li> <p>(Midterm) If a stack is used to convert the infix expression <code>a+b*c+(d*e+f)*g</code> into a postfix expression, what will be in the stack (listing from bottom up) when <code>f</code> is read?</p> <p> A. +(*+ B. +(+ C. ++(+ D. abcde </p> <p>\u7528\u4e00\u4e2a\u7b26\u53f7\u6808\u6765\u5b9e\u73b0\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u7b54\u6848\u662f B\uff0c\u5177\u4f53\u6b65\u9aa4\u53c2\u89c1\u4e2d\u7f00\u3001\u540e\u7f00\u4e0e\u524d\u7f00\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5148\u5199\u51fa\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u518d\u5224\u65ad\u51fa\u7b54\u6848\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u624b\u6413\u4e2d\u7f00\u8f6c\u540e\u7f00\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u7ed9\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8865\u5168\u62ec\u53f7\uff1a<code>((a+(b*c))+(((d*e)+f)*g))</code></li> <li>\u4ece\u5185\u5230\u5916\uff0c\u9010\u5c42\u5c06\u62ec\u53f7\u5185\u7684\u8868\u8fbe\u5f0f\u8f6c\u4e3a\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u5e76\u53bb\u6389\u62ec\u53f7</li> <li>\u6700\u7ec8\u5f97\u5230\uff1a<code>abc*+de*f+g*+</code></li> </ol> <p>\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u624b\u6413\u4e2d\u7f00\u8f6c\u524d\u7f00\u540c\u6837\u9002\u7528\u3002\u7c7b\u4f3c\u5730\uff0c\u518d\u4ecb\u7ecd\u4e00\u79cd\u624b\u6413\u8868\u8fbe\u5f0f\u6811\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u7ed9\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8865\u5168\u62ec\u53f7\uff1a<code>((a+(b*c))+(((d*e)+f)*g))</code></li> <li>\u53bb\u6389\u6700\u5916\u5c42\u62ec\u53f7\uff0c\u62ec\u53f7\u5916\u7684 <code>+</code> \u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u5176\u5de6\u8fb9\u4f5c\u4e3a\u5de6\u5b50\u6811\uff0c\u53f3\u8fb9\u4f5c\u4e3a\u53f3\u5b50\u6811</li> <li>\u91cd\u590d\u6b65\u9aa4 b. \u5373\u53ef\u5f97\u5230\u8868\u8fbe\u5f0f\u6811</li> </ol> </li> </ol>"},{"location":"courses/fds/exercise/#_4","title":"\u6811","text":"<ol> <li> <p>(HW4) It is always possible to represent a tree by a one-dimensional integer array. (TRUE of FALSE)</p> <p>\u4e8c\u53c9\u6811\u53ef\u4ee5\u7528\u4e00\u7ef4\u6570\u7ec4\u8868\u793a\uff0c\u800c\u4efb\u4f55\u6811\u90fd\u53ef\u4ee5\u8f6c\u53d8\u6210\u4e8c\u53c9\u6811\uff08\u4f7f\u7528 FirstChild-NextSibling \u8868\u793a\u6cd5\uff0c\u5e76\u65cb\u8f6c $45\\degree$ \u5373\u5f97\uff09\uff0c\u6240\u4ee5\u4efb\u4f55\u6811\u90fd\u53ef\u4ee5\u7528\u4e00\u7ef4\u6570\u7ec4\u8868\u793a\u3002</p> </li> <li> <p>(HW4) If a general tree T is converted into a binary tree BT, then which of the following BT traversals gives the same sequence as that of the post-order traversal of T?</p> <p> A. pre-order B. in-order C. post-order D. level-order </p> <p>\u4e00\u822c\u6811 T \u8f6c\u53d8\u4e3a\u4e8c\u53c9\u6811 BT \u7684\u65b9\u6cd5\u5c31\u662f\u7528 FirstChild-NextSibling \u8868\u793a\u6cd5\u5e76\u987a\u65f6\u9488\u65cb\u8f6c $45\\degree$\uff0c\u800c\u7528 FisrtChild-NextSibling \u8868\u793a\u7684\u6811\u662f\u65e0\u6cd5\u5b9a\u4e49\u4e2d\u5e8f\u904d\u5386\u7684\u3002</p> <p>T \u7684\u5148\u5e8f\u904d\u5386\u548c BT \u7684\u5148\u5e8f\u904d\u5386\u662f\u4e00\u6837\u7684\uff0cT \u7684\u540e\u5e8f\u904d\u5386\u548c BT \u7684\u4e2d\u5e8f\u904d\u5386\u662f\u4e00\u6837\u7684\u3002</p> </li> <li> <p>(HW4) There exists a binary tree with 2016 nodes in total, and with 16 nodes having only one child. (TRUE of FALSE)</p> <p>\u5047\u8bbe\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff08\u53f6\u8282\u70b9\uff09\u4e2a\u6570\u4e3a $n_0$\uff0c\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9\u4e2a\u6570\u4e3a $n_1$\uff0c\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9\u4e2a\u6570\u4e3a $n_2$\uff0c\u5219\uff1a</p> <ul> <li>$n_0+n_1+n_2=2016$</li> <li>$n_0=n_2+1$\uff08\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff09</li> <li>$n_1=16$</li> </ul> <p>\u5f97\u5230 $2n_2=1999$\uff0c\u9664\u4e0d\u5c3d\uff0c\u56e0\u6b64\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u4e8c\u53c9\u6811\u3002</p> </li> <li> <p>(HW4) Given a tree of degree 3. Suppose that there are 3 nodes of degree 2 and 2 nodes of degree 3. Then the number of leaf nodes must be\uff1a</p> <p> A. 5 B. 6 C. 7 D. 8 </p> <p>\u8fd9\u9053\u9898\u4f7f\u7528\u7684\u5b9a\u7406\u53ef\u4ee5\u89c6\u4f5c\u4e8c\u53c9\u6811\u6027\u8d28 $n_0=n_2+1$ \u7684\u63a8\u5e7f\uff1a\u5bf9\u4e8e\u5ea6\u4e3a $d$ \u7684\u6811\uff0c$n_0=1+\\sum_{i=2}^ {d}((i-1)\\times n_i)$\u3002</p> <p>\u8bc1\u660e\u5982\u4e0b\uff1a</p> <ul> <li>$n=1+\\sum_{i=1}^ {d}(i\\times n_i)$\uff08$n$ \u4e3a\u6811\u4e2d\u7684\u8282\u70b9\u603b\u6570\uff0c\u7b49\u4e8e\u603b\u8fb9\u6570\u52a0 1\uff09</li> <li>$n=\\sum_{i=0}^ {d}n_i$</li> </ul> <p>\u8054\u7acb\u4e0a\u8ff0\u4e24\u5f0f\u5373\u53ef\u5f97\u8bc1\u3002</p> </li> <li> <p>(HW6) For a binary tree, if its pre-order travel sequence is {4,2,1,3,6,5,7}, and its in-order travel sequence is {1,2,3,4,5,6,7}, then which of the following statement is FALSE?</p> <p> A. This is a complete binary tree. B. 4 is the parent of 3. C. All the odd numbers are at leaf nodes. D. This is a binary search tree. </p> <p>\u8fd9\u9898\u9700\u8981\u6839\u636e\u5148\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u786e\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u7b54\u6848\u662f B\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u5148\u5e8f\u904d\u5386\u5e8f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6570\u662f\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9</li> <li>\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u4e2d\uff0c\u6839\u8282\u70b9\u5de6\u4fa7\u7684\u6570\u90fd\u5728\u5de6\u5b50\u6811\u4e2d\uff0c\u53f3\u4fa7\u7684\u6811\u90fd\u5728\u53f3\u5b50\u6811\u4e2d</li> <li>\u4ece\u800c\u4ece\u5148\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u4e2d\u5206\u522b\u63d0\u53d6\u51fa\u5de6/\u53f3\u5b50\u6811\u7684\u5148\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217</li> <li>\u91cd\u590d\u6b65\u9aa4\u524d\u4e09\u4e2a\u6b65\u9aa4\uff0c\u76f4\u5230\u5f97\u5230\u6700\u7ec8\u7684\u4e8c\u53c9\u6811</li> </ol> <p>\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u6839\u636e\u540e\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u786e\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u540c\u6837\u9002\u7528\uff08\u6ce8\u610f\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u6570\u662f\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\uff09\u3002</p> <p>\u7136\u800c\uff0c\u6839\u636e\u5148\u5e8f\u904d\u5386\u548c\u540e\u5e8f\u904d\u5386\u7ed3\u679c\u662f\u4e0d\u8db3\u4ee5\u786e\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\uff0c\u4f46\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u6ee1\u4e8c\u53c9\u6811\uff0c\u5177\u4f53\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\u3002</p> </li> <li> <p>\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u904d\u5386\u5e8f\u5217\u548c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u5206\u522b\u4e3a 1,2,3,4 \u548c 4,3,2,1\uff0c\u8be5\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u4e0d\u4f1a\u662f\uff08  \uff09\u3002</p> <p> A. 1,2,3,4 B. 2,3,4,1 C. 3,2,4,1 D. 4,3,2,1 </p> <p>\u8fd9\u9053\u9898\u76ee\u5f88\u5de7\u5999\uff0c\u56e0\u4e3a\u5148\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6070\u597d\u662f\u76f8\u53cd\u7684\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u5ea6\u4e3a 2 \u7684\u8282\u70b9\uff08\u5426\u5219\u5148\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u4e0d\u53ef\u80fd\u76f8\u53cd\uff09\u3002</p> <p>1 \u662f\u8fd9\u68f5\u6811\u7684\u6839\u8282\u70b9\uff0c\u800c\u5b83\u53ea\u80fd\u6709\u5de6\u5b50\u6811\u6216\u8005\u53f3\u5b50\u6811\uff0c\u56e0\u6b64\u4e00\u5b9a\u4f4d\u4e8e\u4e2d\u5e8f\u904d\u5386\u7684\u7b2c\u4e00\u4e2a\u6216\u8005\u6700\u540e\u4e00\u4e2a\uff0cABCD \u90fd\u6ee1\u8db3\uff1b\u518d\u8003\u8651\u4ee5 1 \u7684\u5b50\u8282\u70b9 2 \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\uff0c\u5176\u4e5f\u53ea\u80fd\u6709\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\uff0c\u56e0\u6b64\u4e00\u5b9a\u4f4d\u4e8e\u5b50\u6811\u4e2d\u5e8f\u904d\u5386\u7684\u7b2c\u4e00\u4e2a\u6216\u6700\u540e\u4e00\u4e2a\uff0cABD \u6ee1\u8db3\uff0cC \u4e0d\u6ee1\u8db3\u3002</p> </li> <li> <p>\u82e5\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u904d\u5386\u5e8f\u5217\u4e3a a,e,b,d,c\uff0c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u4e3a b,c,d,e,a\uff0c\u5219\u6839\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff08  \uff09\u3002</p> <p> A. \u53ea\u6709 e B. \u6709 e\u3001b C. \u6709 e\u3001c D. \u65e0\u6cd5\u786e\u5b9a </p> <p>\u5148\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u65e0\u6cd5\u552f\u4e00\u786e\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u4f46\u80fd\u786e\u5b9a\u4e8c\u53c9\u6811\u4e2d\u8282\u70b9\u7684\u7956\u5148\u5173\u7cfb\u3002\u5f53\u4e24\u4e2a\u8282\u70b9\u7684\u5148\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u5206\u522b\u4e3a u,v \u548c v,u \u65f6\uff0cu \u662f v \u7684\u7956\u5148\u3002</p> <p>\u9996\u5148\uff0ca \u662f\u6839\u8282\u70b9\uff0ce \u662f a \u7684\u4e00\u4e2a\u5b50\u8282\u70b9\u3002\u7136\u540e\u89c2\u5bdf\u5148\u5e8f\u548c\u540e\u5e8f\u904d\u5386\u5e8f\u5217\uff0c\u53d1\u73b0 e \u662f b,d,c \u7684\u7956\u5148\uff0c\u6240\u4ee5\u6839\u8282\u70b9 a \u7684\u5b50\u8282\u70b9\u53ea\u6709 e \u4e00\u4e2a\u3002</p> </li> <li> <p>\u5148\u5e8f\u5e8f\u5217\u4e3a a,b,c,d \u7684\u4e0d\u540c\u4e8c\u53c9\u6811\u7684\u4e2a\u6570\u662f\uff08  \uff09\u3002</p> <p> A. 13 B. 14 C. 15 D. 16 </p> <p>\u8fd9\u9053\u9898\u76ee\u5f88\u6709\u6280\u5de7\u6027\u3002</p> <p>\u9996\u5148\u6839\u636e\u5148\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u7684\u9012\u5f52\u7b97\u6cd5\u53ef\u4ee5\u5f97\u51fa\uff1a\u5148\u5e8f\u5e8f\u5217\u548c\u4e2d\u5e8f\u5e8f\u5217\u7684\u5173\u7cfb\u53ef\u4ee5\u89c6\u4f5c\uff0c\u4ee5\u5148\u5e8f\u5e8f\u5217\u4e3a\u5165\u6808\u6b21\u5e8f\uff0c\u4ee5\u4e2d\u5e8f\u5e8f\u5217\u4e3a\u51fa\u6808\u6b21\u5e8f\uff08\u4e2d\u5e8f\u548c\u540e\u5e8f\u540c\u7406\uff09\u3002</p> <p>\u7531\u4e8e\u5148\u5e8f\u548c\u4e2d\u5e8f\u5e8f\u5217\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u539f\u9898\u7b49\u4ef7\u4e8e\u7ed9\u5b9a\u5165\u6808\u987a\u5e8f\u4e3a a,b,c,d\uff0c\u6c42\u53ef\u80fd\u7684\u51fa\u6808\u987a\u5e8f\u7684\u4e2a\u6570\u3002</p> <p>\u6700\u540e\u8fd0\u7528\u7ed3\u8bba\uff1a$n$ \u4e2a\u4e0d\u540c\u5143\u7d20\u5165\u6808\uff0c\u51fa\u6808\u5e8f\u5217\u4e2a\u6570\u4e3a $\\frac{1}{n+1}C_{2n}^ n=14$\u3002\u8fd9\u4e2a\u7ed3\u8bba\u7684\u8bc1\u660e\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\u3002</p> </li> <li> <p>\u82e5\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u6709 768 \u4e2a\u8282\u70b9\uff0c\u5219\u8be5\u4e8c\u53c9\u6811\u4e2d\u53f6\u8282\u70b9\u7684\u4e2a\u6570\u662f\uff08  \uff09\u3002</p> <p> A. 257 B. 258 C. 384 D. 385 </p> <p>\u4e8c\u53c9\u5806\u7684\u7ed3\u6784\u672c\u8d28\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u56e0\u6b64\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u9898\u76ee\u4e5f\u53ef\u4ee5\u7528\u5806\u76f8\u5173\u77e5\u8bc6\u6765\u89e3\u51b3\u3002</p> <p>\u7531\u5806\uff08\u5b8c\u5168\u4e8c\u53c9\u6811\uff09\u7684\u6027\u8d28\uff0c\u6700\u540e\u4e00\u4e2a\u6709\u513f\u5b50\u7684\u8282\u70b9\u5e8f\u53f7\u662f 768 / 2 = 384\uff0c\u6240\u4ee5\u53f6\u8282\u70b9\u7684\u4e2a\u6570\u662f 768 - 384 = 384\u3002</p> </li> </ol>"},{"location":"courses/fds/exercise/#_5","title":"\u5806","text":"<ol> <li> <p>(Midterm) For binary heaps with $N$ elements, the BuildHeap function (which adjust an array of elements into a heap in linear time) does at most $2N\u22122$ comparisons between elements. (TRUE or FALSE)</p> <p>\u7ed3\u8bba\u662f\uff0c\u7ebf\u6027\u5efa\u5806\u6700\u591a\u9700\u8981 $N-1$ \u6b21 percolate down \u64cd\u4f5c\u3002\u6bcf\u6b21 percolate down \u64cd\u4f5c\u90fd\u9700\u8981\u8fdb\u884c\u4e24\u6b21\u6bd4\u8f83\uff0c\u6240\u4ee5\u6700\u591a\u9700\u8981 $2N-2$ \u6b21\u6bd4\u8f83\u3002</p> <p>\u5173\u4e8e\u8fd9\u4e2a\u7ed3\u8bba\u7684\u8bc1\u660e\uff0c\u6211\u8fd8\u6ca1\u6709\u5b8c\u5168\u590d\u73b0\uff0c\u603b\u89c9\u5f97\u6709\u4e00\u4e9b\u5c0f\u95ee\u9898\u6ca1\u89e3\u51b3\uff0c\u8fd9\u91cc\u5148\u8d34\u51e0\u4e2a\u53c2\u8003\u94fe\u63a5\u7f62\uff1a</p> <ul> <li>OI Wiki</li> <li>Stack Overflow</li> <li>Wikipedia</li> </ul> </li> </ol>"},{"location":"courses/fds/exercise/#_6","title":"\u56fe","text":"<ol> <li> <p>(HW8) Given an undirected graph G with 16 edges, where 3 vertices are of degree 4, 4 vertices are of degree 3, and all the other vertices are of degrees less than 3. Then G must have at least __ vertices.</p> <p> A. 10 B. 11 C. 13 D. 15 </p> <p>\u5229\u7528\u65e0\u5411\u56fe\u7684\u5ea6\u7684\u6027\u8d28 $\\sum_{v\\in V}d(v)=2|E|$\uff0c\u6700\u591a\u6709 11 \u4e2a\u8282\u70b9\u3002</p> </li> <li> <p>(HW8) If a graph G is NOT connected and has 35 edges, then it must have at least __ vertices.</p> <p> A. 7 B. 8 C. 9 D. 10 </p> <p>\u8981\u786e\u4fdd 9 \u4e2a\u8282\u70b9\u7684\u56fe\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u662f\u8fde\u901a\u7684\uff0c\u81f3\u5c11\u9700\u8981 C(8,2) + 1 = 29 \u6761\u8fb9\uff0c\u6240\u4ee5\u9898\u76ee\u4e2d\u7684 35 \u6761\u8fb9\u4e00\u5b9a\u4f1a\u628a 9 \u4e2a\u8282\u70b9\u7684\u56fe\u8fde\u901a\u3002</p> <p>\u540c\u7406\uff0c\u8981\u786e\u4fdd 10 \u4e2a\u8282\u70b9\u7684\u56fe\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u662f\u8fde\u901a\u7684\uff0c\u81f3\u5c11\u9700\u8981 C(9,2) + 1 = 37 \u6761\u8fb9\uff0c\u6240\u4ee5\u9898\u76ee\u4e2d\u7684 35 \u6761\u8fb9\u53ef\u80fd\u4f7f 10 \u4e2a\u8282\u70b9\u7684\u56fe\u662f\u975e\u8fde\u901a\u7684\u3002</p> </li> <li> <p>(HW8) A graph with 90 vertices and 20 edges must have at least __ connected component(s).</p> <p> A. 69 B. 70 C. 84 D. 85 </p> <p>\u4e3a\u4e86\u4f7f\u8fde\u901a\u5206\u91cf\u6700\u5c11\uff0c\u7528 20 \u6761\u8fb9\u53bb\u8fde\u901a\u5c3d\u53ef\u80fd\u591a\u7684\u8282\u70b9\u3002\u8003\u8651\u7528 20 \u6761\u8fb9\u5f62\u6210\u4e00\u4e2a\u751f\u6210\u6811\uff0c\u5373\u8fde\u901a 21 \u4e2a\u8282\u70b9\uff0c\u8fd8\u5269\u4e0b 69 \u4e2a\u5b64\u7acb\u8282\u70b9\uff0c\u6240\u4ee5\u5171\u6709 1 + 69 = 70 \u4e2a\u8fde\u901a\u5206\u91cf\u3002</p> <p>\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e73\u9762\u56fe\u7684\u6b27\u62c9\u5b9a\u7406\u6765\u505a\uff08\u8d85\u7eb2\uff09\uff1a</p> <ul> <li>\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u56fe\uff0c\u6709 $v-e+f=2$</li> <li>\u8bbe\u9898\u76ee\u4e2d\u7684\u56fe\u7531 $k$ \u4e2a\u8fde\u901a\u5206\u91cf\u7ec4\u6210\uff0c\u5219\u6709 $V-E+(F+k-1)=2k$</li> <li>\u7531\u4e8e $F\\geq 1$\uff0c\u6545 $k\\geq 70$</li> </ul> </li> <li> <p>(HW9) If besides finding the shortest path from <code>S</code> to every other vertices, we also need to count the number of different shortest paths, we can modify the Dijkstra algorithm in the following way: add an array <code>count[]</code> so that <code>count[V]</code> records the number of different shortest paths from <code>S</code> to <code>V</code>. Then <code>count[V]</code> shall be initialized as:</p> <p> A. <code>count[S]=1</code> and <code>count[V]=0</code> for other <code>V</code> B. <code>count[V]=1</code> for all vertices C. <code>count[S]=0</code> and <code>count[V]=1</code> for other <code>V</code> D. <code>count[V]=0</code> for all vertices </p> <p>\u8fd9\u9898\u7684\u5173\u952e\u662f\u8981\u7406\u89e3\u6700\u77ed\u8def\u7b97\u6cd5\u7684\u66f4\u65b0\u64cd\u4f5c\uff08\u677e\u5f1b\u64cd\u4f5c\uff09\uff1a\u5bf9\u4e8e\u67d0\u4e2a\u8282\u70b9\uff0c\u603b\u662f\u7528\u5176\u76f4\u63a5\u524d\u9a71\u7684\u4fe1\u606f\u53bb\u66f4\u65b0\u8be5\u8282\u70b9\u7684\u4fe1\u606f\uff08\u4fe1\u606f\u5305\u62ec\u6700\u77ed\u8def\u3001\u6b21\u77ed\u8def\u7b49\uff09\u3002</p> <p>\u8bbe u \u662f v \u7684\u76f4\u63a5\u524d\u9a71\uff0c\u5219\u66f4\u65b0\u64cd\u4f5c\u5728\u8fd9\u9053\u9898\u4e2d\u7684\u8868\u73b0\u4e3a\uff0c\u7528 count[u] \u53bb\u66f4\u65b0 count[v]\uff0c\u5373 count[v] += count[u]\uff0c\u7a0d\u52a0\u601d\u8003\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848\u4e3a A\u3002</p> </li> <li> <p>(HW11) Apply DFS to a directed acyclic graph, and output the vertex before the end of each recursion. The output sequence will be:</p> <p> A. unsorted B. topologically sorted C. reverse topologically sorted D. none of the above </p> <p>\u9898\u76ee\u4e2d\u7684 DFS \u5728\u9012\u5f52\u8fd4\u56de\u65f6\u8bbf\u95ee\u8282\u70b9\uff08\u7c7b\u6bd4\u540e\u5e8f\u904d\u5386\uff09\uff0c\u56e0\u6b64\u8f93\u51fa\u5e8f\u5217\u662f\u9006\u62d3\u6251\u5e8f\u5217\u3002</p> </li> </ol>"},{"location":"courses/fds/exercise/#_7","title":"\u6392\u5e8f","text":"<ol> <li> <p>(HW13) During the sorting, processing every element which is not yet at its final position is called a \"run\". Which of the following cannot be the result after the second run of quicksort?</p> <p> A. 5, 2, 16, 12, 28, 60, 32, 72 B. 2, 16, 5, 28, 12, 60, 32, 72 C. 2, 12, 16, 5, 28, 32, 72, 60 D. 5, 2, 12, 28, 16, 32, 72, 60 </p> <p>\u6839\u636e\u9898\u76ee\u5b9a\u4e49\u7684\u4e00\u8d9f\uff08run\uff09\u7684\u542b\u4e49\uff0c\u5feb\u6392\u4e2d\u6bcf\u4e00\u8d9f\u90fd\u4f1a\u5c06 pivot \u653e\u7f6e\u5728\u5176\u6700\u7ec8\u4f4d\u7f6e\u3002\u56e0\u6b64\u4e24\u8d9f\u4e4b\u540e\u5e94\u8be5\u5df2\u7ecf\u6709 1 + 2 = 3 \u4e2a pivot \u5904\u4e8e\u5176\u6700\u7ec8\u4f4d\u7f6e\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u7b2c\u4e8c\u8d9f\u7684\u65f6\u5019\u5de6\u53f3\u4e24\u6bb5\u5e8f\u5217\u89c6\u4f5c\u5e76\u884c\uff0c\u56e0\u6b64\u7b2c\u4e8c\u8d9f\u80fd\u786e\u5b9a 2 \u4e2a pivot \u6700\u7ec8\u4f4d\u7f6e\uff09\u6216\u8005 1 + 1 = 2 \u4e2a pivot \u5904\u4e8e\u5176\u6700\u7ec8\u4f4d\u7f6e\uff08\u8fd9\u79cd\u60c5\u51b5\u8981\u6c42\u7b2c\u4e00\u8d9f\u7684 pivot \u662f\u7b2c\u4e00\u4e2a\u6216\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\u3002</p> <p>pivot \u7684\u7279\u70b9\u662f\u5176\u5de6\u4fa7\u5143\u7d20\u90fd\u6bd4\u5b83\u5c0f\uff0c\u5176\u53f3\u4fa7\u5143\u7d20\u90fd\u6bd4\u5b83\u5927\uff0c\u56db\u4e2a\u9009\u9879\u7684 pivot \u5982\u4e0b\uff1a</p> <ul> <li>A. 5, 2, 16, 12, 28, 60, 32, 72</li> <li>B. 2, 16, 5, 28, 12, 60, 32, 72</li> <li>C. 2, 12, 16, 5, 28, 32, 72, 60</li> <li>D. 5, 2, 12, 28, 16, 32, 72, 60</li> </ul> <p>\u6240\u4ee5 D \u9009\u9879\u662f\u4e0d\u53ef\u80fd\u7684\u3002</p> </li> <li> <p>\u5728\u5185\u90e8\u6392\u5e8f\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u5c1a\u672a\u786e\u5b9a\u6700\u7ec8\u4f4d\u7f6e\u7684\u6240\u6709\u5143\u7d20\u8fdb\u884c\u4e00\u904d\u5904\u7406\u79f0\u4e3a\u4e00\u8d9f\u6392\u5e8f\uff0c\u4e0b\u5217\u6392\u5e8f\u65b9\u6cd5\u4e2d\uff0c\u6bcf\u8d9f\u6392\u5e8f\u7ed3\u675f\u90fd\u81f3\u5c11\u80fd\u591f\u786e\u5b9a\u4e00\u4e2a\u5143\u7d20\u6700\u7ec8\u4f4d\u7f6e\u7684\u65b9\u6cd5\u662f\uff08  \uff09\u3002    \u2160 \u7b80\u5355\u9009\u62e9\u6392\u5e8f \u2003 \u2161 \u5e0c\u5c14\u6392\u5e8f \u2003 \u2162 \u5feb\u901f\u6392\u5e8f \u2003 \u2163 \u5806\u6392\u5e8f \u2003 \u2164 2\u8def\u5f52\u5e76\u6392\u5e8f</p> <p> A. \u4ec5 \u2160\u3001\u2162\u3001\u2163 B. \u4ec5 \u2160\u3001\u2162\u3001\u2164 C. \u4ec5 \u2161\u3001\u2162\u3001\u2163 D. \u4ec5 \u2162\u3001\u2163\u3001\u2164 </p> <p>\u8fd9\u9053\u9898\u76ee\u6bd4\u8f83\u7b80\u5355\uff0c\u7b54\u6848\u662f A\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\u201c\u4e00\u8d9f\u201d\u7684\u542b\u4e49\u3002</p> </li> <li> <p>\u4e0b\u5217\u6392\u5e8f\u65b9\u6cd5\u4e2d\uff0c\u82e5\u5c06\u987a\u5e8f\u5b58\u50a8\u66f4\u6362\u4e3a\u94fe\u5f0f\u5b58\u50a8\uff0c\u5219\u7b97\u6cd5\u7684\u65f6\u95f4\u6548\u7387\u4f1a\u964d\u4f4e\u7684\u662f\uff08  \uff09\u3002    \u2160 \u63d2\u5165\u6392\u5e8f \u2003 \u2161 \u9009\u62e9\u6392\u5e8f \u2003 \u2162 \u8d77\u6ce1\u6392\u5e8f \u2003 \u2163 \u5e0c\u5c14\u6392\u5e8f \u2003 \u2164 \u5806\u6392\u5e8f</p> <p> A. \u4ec5 \u2160\u3001\u2161 B. \u4ec5 \u2161\u3001\u2162 C. \u4ec5 \u2162\u3001\u2163 D. \u4ec5 \u2163\u3001\u2164 </p> <p>\u8fd9\u9053\u9898\u76ee\u6bd4\u8f83\u7b80\u5355\uff0c\u7b54\u6848\u662f D\uff0c\u5e0c\u5c14\u6392\u5e8f\u548c\u5806\u6392\u5e8f\u90fd\u5229\u7528\u4e86\u987a\u5e8f\u5b58\u50a8\u7684\u968f\u673a\u8bbf\u95ee\u7279\u6027\uff0c\u56e0\u6b64\u66f4\u6362\u4e3a\u94fe\u5f0f\u5b58\u50a8\u65f6\u6548\u7387\u4f1a\u964d\u4f4e\u3002</p> </li> </ol>"},{"location":"courses/fds/exercise/#_8","title":"\u54c8\u5e0c","text":"<ol> <li> <p>(HW14) The average search time of searching a hash table with $N$ elements is:</p> <p> A. $\\Omicron(1)$ B. $\\Omicron(\\log N)$ C. $\\Omicron(N)$ D. not determined </p> <p>\u8fd9\u9053\u9898\u76ee\u6709\u4e89\u8bae\uff0c\u7a0d\u5fae\u6709\u70b9\u7275\u5f3a\u3002</p> <p>\u6839\u636e\u8bfe\u5802 PPT \u7684\u8bf4\u6cd5\uff0c\u4e0d\u8003\u8651\u6ea2\u51fa\u7684\u60c5\u51b5\u4e0b\uff0c\u5e73\u5747\u641c\u7d22\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(1)$\u3002</p> <p>\u7b54\u6848\u662f D\uff0c\u4e00\u79cd\u8f83\u4e3a\u5408\u9002\u7684\u89e3\u91ca\u662f\uff0c\u4e0e\u89e3\u51b3\u51b2\u7a81\u7684\u65b9\u6cd5\u6709\u5173\uff0c\u4e0d\u4e00\u5b9a\u80fd\u8fbe\u5230 $\\Omicron(1)$\u3002</p> </li> <li> <p>(HW15) Suppose that the numbers {4371, 1323, 6173, 4199, 4344, 9679, 1989} are hashed into a table of size 10 with the hash function $h(X)=X\\% 10$, and hence have indices {1, 3, 4, 9, 5, 0, 2}. What are their indices after rehashing using $h(X)=X\\% TableSize$ with linear probing?</p> <p> A. 11, 3, 13, 19, 4, 0, 9 B. 1, 3, 4, 9, 5, 0, 2 C. 1, 12, 9, 13, 20, 19, 11 D. 1, 12, 17, 0, 13, 8, 14 </p> <p>\u8fd9\u9053\u9898\u76ee\u6709\u4e89\u8bae\uff0c\u6781\u5176\u4ee4\u4eba\u65e0\u8bed\u3002</p> <p>\u7b54\u6848\u662f C\uff0c\u76ee\u524d\u770b\u5230\u7684\u4e00\u79cd\u89e3\u91ca\u662f\uff0c\u518d\u54c8\u5e0c\u5c06 tableSize \u53d8\u6210\u4e24\u500d\uff0c\u5373 20\uff0c\u5e76\u5411\u4e0a\u53d6\u4e00\u4e2a\u8d28\u6570\uff0c\u56e0\u6b64\u65b0\u7684 tableSize \u662f 23\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u518d\u54c8\u5e0c\u7684\u5bf9\u8c61\u5e94\u5f53\u662f key \u503c {4371, 1323, ...}\uff0c\u800c\u4e0d\u662f\u7b2c\u4e00\u6b21\u54c8\u5e0c\u540e\u5f97\u5230\u7684\u54c8\u5e0c\u503c {1, 3, ...}\u3002</p> </li> </ol>"},{"location":"courses/fds/note1/","title":"\u7b97\u6cd5\u5206\u6790\u57fa\u7840","text":"<p> \u7ea6 655 \u4e2a\u5b57  87 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p>"},{"location":"courses/fds/note1/#_2","title":"\u7b97\u6cd5\u4e0e\u5206\u6790","text":"<ul> <li>\u7b97\u6cd5\u662f\u4e00\u4e2a\u88ab\u5b9a\u4e49\u597d\u7684\u3001\u8ba1\u7b97\u673a\u53ef\u6267\u884c\u7684\u3001\u89e3\u51b3\u67d0\u4e00\u95ee\u9898\u7684\u6709\u9650\u6b65\u9aa4</li> <li>\u7b97\u6cd5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u7279\u6027\uff1a<ul> <li>Input</li> <li>Output</li> <li>Definiteness</li> <li>Finiteness</li> <li>Effectiveness (Feasibility)</li> </ul> </li> <li>\u6ce8\u610f\uff0c\u548c algorithm \u4e0d\u540c\uff0cprogram \u4e0d\u9700\u8981 finite\uff08\u4f8b\u5982\u64cd\u4f5c\u7cfb\u7edf\uff09</li> <li>\u7b97\u6cd5\u5206\u6790\u5185\u5bb9\uff1a<ul> <li>\u8fd0\u884c\u65f6\u95f4\uff1a\u4e0e\u673a\u5668\u548c\u7f16\u8bd1\u5668\u6709\u5173</li> <li>\u65f6\u95f4\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u4e0e\u673a\u5668\u548c\u7f16\u8bd1\u5668\u65e0\u5173</li> </ul> </li> <li>\u590d\u6742\u5ea6\u5206\u6790\u5047\u8bbe\uff1a<ul> <li>\u6307\u4ee4\u6309\u987a\u5e8f\u6267\u884c</li> <li>\u6bcf\u6761\u6307\u4ee4\u90fd\u662f\u7b80\u5355\u7684\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u65f6\u95f4\u5355\u4f4d\u8fd0\u884c</li> <li>\u6570\u636e\u89c4\u6a21\u662f\u7ed9\u5b9a\u7684\uff0c\u4e14\u6709\u65e0\u9650\u7a7a\u95f4</li> </ul> </li> <li>\u5e38\u89c1\u7684\u5206\u6790\u5185\u5bb9\u6709 $T_{avg}(N)$ \u548c $T_{worst}(N)$\uff0c\u5176\u4e2d $N$ \u662f\u8f93\u5165\u7684\u6570\u636e\u89c4\u6a21\uff08\u53ef\u4ee5\u6709\u591a\u4e2a\u8f93\u5165\uff09</li> </ul>"},{"location":"courses/fds/note1/#_3","title":"\u590d\u6742\u5ea6\u6e10\u8fdb\u7b26\u53f7","text":""},{"location":"courses/fds/note1/#_4","title":"\u5b9a\u4e49","text":"<ul> <li>$T(N)=\\Omicron(f(N))$\uff0c\u5f53\u5b58\u5728\u6b63\u7684\u5e38\u6570 $c$ \u548c $n_0$\uff0c\u4f7f\u5f97 $\\forall N\\geq n_0,\\;T(N)\\leq c\\cdot f(N)$<ul> <li>\u4e0a\u754c\uff0c\u5373 $T(N)$ \u7684\u9636\u5c0f\u4e8e\u7b49\u4e8e $f(N)$</li> </ul> </li> <li>$T(N)=\\Omega(g(N))$\uff0c\u5f53\u5b58\u5728\u6b63\u7684\u5e38\u6570 $c$ \u548c $n_0$\uff0c\u4f7f\u5f97 $\\forall N\\geq n_0,\\;T(N)\\geq c\\cdot f(N)$<ul> <li>\u4e0b\u754c\uff0c\u5373 $T(N)$ \u7684\u9636\u5927\u4e8e\u7b49\u4e8e $g(N)$</li> </ul> </li> <li>$T(N)=\\Theta(h(N))$\uff0c\u5f53\u4e14\u4ec5\u5f53 $T(N)=\\Omicron(h(N))$ \u4e14 $T(N)=\\Omega(h(N))$<ul> <li>\u7d27\u754c\uff0c\u5373 $T(N)$ \u4e0e $h(N)$ \u540c\u9636</li> </ul> </li> <li>$T(N)=\\omicron(p(N))$\uff0c\u5f53\u4e14\u4ec5\u5f53 $T(N)=\\Omicron(p(N))$ \u4e14 $T(N)\\not =\\Theta(p(N))$<ul> <li>\u4e25\u683c\u4e0a\u754c\uff0c\u5373 $T(N)$ \u7684\u9636\u4e25\u683c\u5c0f\u4e8e $p(N)$</li> </ul> </li> <li>$T(N)=\\omega(q(N))$\uff0c\u5f53\u4e14\u4ec5\u5f53 $T(N)=\\Omega(q(N))$ \u4e14 $T(N)\\not =\\Theta(q(N))$<ul> <li>\u4e25\u683c\u4e0b\u754c\uff0c\u5373 $T(N)$ \u7684\u9636\u4e25\u683c\u5927\u4e8e $q(N)$</li> </ul> </li> </ul>"},{"location":"courses/fds/note1/#_5","title":"\u89c4\u5219","text":"<ul> <li>\u5982\u679c $T_1(N)=\\Omicron(f(N))$ \u4e14 $T_2(N)=\\Omicron(g(N))$\uff0c\u5219\uff1a<ul> <li>$T_1(N)+T_2(N)=max(\\Omicron(f(N)),\\Omicron(g(N)))$</li> <li>$T_1(N)\\cdot T_2(N)=\\Omicron(f(N)\\cdot g(N))$</li> </ul> </li> <li>\u5982\u679c $T(N)$ \u662f\u6700\u9ad8\u6b21\u6570\u4e3a $k$ \u7684\u591a\u9879\u5f0f\uff0c\u5219 $T(N)=\\Theta(N^ k)$</li> <li>\u5bf9\u4e8e\u4efb\u610f\u5e38\u6570 $k$\uff0c\u5747\u6709 $\\log^ {k}N=\\Omicron(N)$</li> <li>\u901a\u7528\u7684\u5206\u6790\u89c4\u5219\uff1a<ul> <li>for \u5faa\u73af\u7684\u8fd0\u884c\u65f6\u95f4\u662f\u5faa\u73af\u5185\u90e8\u8bed\u53e5\u7684\u6700\u957f\u65f6\u95f4\uff08\u542b for \u5224\u65ad\uff09\u4e58\u5faa\u73af\u6b21\u6570</li> <li>\u5d4c\u5957 for \u5faa\u73af\u8981\u9010\u6b21\u76f8\u4e58</li> <li>\u987a\u5e8f\u8bed\u53e5\u53ea\u9700\u5173\u6ce8\u8017\u65f6\u6700\u957f\u7684\u90e8\u5206</li> <li>if else \u8bed\u53e5\u7684\u8fd0\u884c\u65f6\u95f4\u4e0d\u8d85\u8fc7\u5224\u65ad\u65f6\u95f4 + \u8017\u65f6\u6700\u957f\u7684\u8bed\u53e5\u5757\u7684\u8fd0\u884c\u65f6\u95f4</li> </ul> </li> <li>\u8865\u5145\uff0c\u4e3b\u5b9a\u7406\uff08Master Theorom\uff09\uff0c\u5047\u8bbe\u6709\u9012\u63a8\u5173\u7cfb $T(n)=aT(\\frac{n}{b})+f(n)$\uff0c\u5219\uff1a<ul> <li>\u5982\u679c\u5b58\u5728\u6b63\u7684\u5e38\u6570 $\\epsilon$\uff0c\u4f7f\u5f97 $f(n)=\\Omicron(n^ {\\log_{b}a-\\epsilon})$\uff0c\u5219 $T(n)=\\Theta(n^ {\\log_{b}a})$</li> <li>\u5982\u679c\u5b58\u5728\u975e\u8d1f\u5e38\u6570 $\\epsilon$\uff0c\u4f7f\u5f97 $f(n)=\\Omega(n^ {\\log_{b}a+\\epsilon})$\uff0c\u4e14\u5b58\u5728\u5e38\u6570 $c&lt;1$ \u4f7f\u5f97\u5bf9\u4e8e\u5145\u5206\u5927\u7684 $n$ \u6709 $af(\\frac{n}{b})\\leq cf(n)$\uff0c\u5219 $T(n)=\\Theta(f(n))$</li> <li>\u5982\u679c\u5b58\u5728\u975e\u8d1f\u5e38\u6570 $k$\uff0c\u4f7f\u5f97 $f(n)=\\Theta(n^ {\\log_{b}a}\\log^ {k}n)$\uff0c\u5219 $T(n)=\\Theta(n^ {\\log_{b}a}\\log^ {k+1}n)$</li> </ul> </li> </ul>"},{"location":"courses/fds/note1/#_6","title":"\u4f8b\uff1a\u6700\u5927\u5b50\u5e8f\u5217\u548c","text":"<ul> <li> <p>$\\Omicron(N^ 3)$\uff0c\u76f4\u63a5\u679a\u4e3e\u5f00\u5934\u7ed3\u5c3e\uff0c\u5e76\u8ba1\u7b97\u4e2d\u95f4\u5b50\u5e8f\u5217\u548c</p> <pre><code>int MaxSubsequenceSum(const int a[], int N)\n{\n    int res = 0;\n    for (int i = 0; i &lt; N; i++) {\n        for (int j = i; j &lt; N; j++) {\n            int tmp = 0;\n            for (int k = i; k &lt;= j; k++) {\n                tmp += a[k];\n            }\n            res = max(res, tmp);\n        }\n    }\n    return res;\n}\n</code></pre> </li> <li> <p>$\\Omicron(N^ 2)$\uff0c\u540c\u6837\u679a\u4e3e\u5f00\u5934\u7ed3\u5c3e\uff0c\u4f46\u5728\u679a\u4e3e\u7684\u540c\u65f6\u8ba1\u7b97\u5b50\u5e8f\u5217\u548c\uff0c\u7701\u53bb\u6700\u5185\u5c42\u5faa\u73af</p> <pre><code>int MaxSubsequenceSum(const int a[], int N)\n{\n    int res = 0;\n    for (int i = 0; i &lt; N; i++) {\n        int tmp = 0;\n        for (int j = i; j &lt; N; j++) {\n            tmp += a[j];\n            res = max(res, tmp);\n        }\n    }\n    return res;\n}\n</code></pre> </li> <li> <p>$\\Omicron(N\\log N)$\uff0c\u4f7f\u7528\u5206\u6cbb\u7b97\u6cd5\uff0c$T(N)=2T(N/2)+cN$\uff0c\u7b26\u5408\u4e3b\u5b9a\u7406\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u53d6 $k=0$</p> <pre><code>int MaxSubsequenceSum(const int a[], int N)\n{\n    return MaxSubSum(a, 0, N-1);\n}\n\nint MaxSubSum(const int a[], int left, int right)\n{\n    if (left == right){\n        if (a[left] &gt; 0){\n            return a[left];\n        } else {\n            return 0;\n        }\n    }\n    int mid = (left + right) / 2;\n    int sumLeft = MaxSubSum(a, left, mid);\n    int sumRight = MaxSubSum(a, mid+1, right);\n    int sumLeftBorder = 0, sumRightBorder = 0;\n    for (int i = mid, int tmp = 0; i &gt;= left; --i) {\n        tmp += a[i];\n        sumLeftBorder = max2(sumLeftBorder, tmp);\n    }\n    for (int i = mid+1, int tmp = 0; i &lt;= right; i++) {\n        tmp += a[i];\n        sumRightBorder = max2(sumRightBorder, tmp);\n    }\n    return max3(sumLeft, sumRight, sumLeftBorder + sumRightBorder);\n}\n</code></pre> </li> <li> <p>$\\Omicron(N)$\uff0c\u52a8\u6001\u89c4\u5212\u601d\u60f3</p> <pre><code>int MaxSubsequenceSum(const int a[], int N)\n{\n    int res = 0, tmp = 0;\n    for (int i = 0; i &lt; N; i++) {\n        tmp += a[i];\n        res = max(res, tmp);\n        tmp = max(tmp, 0);\n    }\n    return res;\n}\n</code></pre> </li> </ul>"},{"location":"courses/fds/note1/#_7","title":"\u4f8b\uff1a\u5bf9\u6570\u590d\u6742\u5ea6\u6709\u5173\u95ee\u9898","text":"<ul> <li>\u5bf9\u5206\u67e5\u627e\uff1a$\\Omicron(\\log(N))$</li> <li> <p>\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff1a$\\Omicron(\\log(N))$\uff0c\u56e0\u4e3a $\\text{if}\\;m&gt;n,\\;\\text{then}\\;m\\;\\text{mod}\\;n&lt;m/2$</p> gcd<pre><code>int gcd(int a, int b) {\n    return b == 0 ? a : gcd(b, a % b);\n}\n</code></pre> </li> <li> <p>\u5feb\u901f\u5e42\uff1a$\\Omicron(\\log(N))$\uff0c\u5373\u4e8c\u8fdb\u5236\u53d6\u5e42</p> \u975e\u9012\u5f52\u5b9e\u73b0\u9012\u5f52\u5b9e\u73b0 <pre><code>long long binPow(long long a, long long b)\n{\n    long long res = 1;\n    while (b &gt; 0) {\n        if (b &amp; 1) res = res * a;\n        a = a * a;\n        b &gt;&gt;= 1;\n    }\n    return res;\n}\n</code></pre> <pre><code>long long binPow(long long a, long long b)\n{\n    if (0 == b) return 1;\n    long long res = binPow(a, b / 2);\n    if (b % 2) {\n        return res * res * a;\n    } else {\n        return res * res;\n    }\n}\n</code></pre> </li> </ul>"},{"location":"courses/fds/note2/","title":"\u57fa\u7840\u6570\u636e\u7ed3\u6784","text":"<p> \u7ea6 5158 \u4e2a\u5b57  246 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 24 \u5206\u949f</p>"},{"location":"courses/fds/note2/#_2","title":"\u6808\u548c\u961f\u5217","text":""},{"location":"courses/fds/note2/#_3","title":"\u7ebf\u6027\u8868","text":"<ul> <li>\u6570\u7ec4\u5b9e\u73b0</li> <li>\u94fe\u8868\u5b9e\u73b0<ul> <li>\u54e8\u5175\u94fe\u8868\uff0c\u53cc\u5411\u5faa\u73af\u94fe\u8868</li> </ul> </li> <li>\u8865\u5145\uff0c\u7a00\u758f\u77e9\u9635\uff08sparse matrix\uff09\u662f\u5927\u90e8\u5206\u5143\u7d20\u5747\u4e3a 0 \u7684\u77e9\u9635<ul> <li>\u591a\u7ef4\u6570\u7ec4\u5b9e\u73b0\uff0c\u7a7a\u95f4\u6d6a\u8d39\u4e25\u91cd</li> <li>\u591a\u91cd\u94fe\u8868\uff08multilist\uff09\u5b9e\u73b0\uff0c\u4e5f\u79f0\u5341\u5b57\u94fe\u8868\uff08orthogonal linked list\uff09</li> </ul> </li> <li>\u8865\u5145\uff0c\u94fe\u8868\u7684\u6e38\u6807\u5b9e\u73b0\uff08no pointer\uff09<ul> <li>\u4f7f\u7528\u5168\u5c40\u7ed3\u6784\u4f53\u6570\u7ec4\u6765\u5b9e\u73b0\u94fe\u8868\uff0c\u7ef4\u62a4\u5176\u4e2d\u4e00\u4e2a\u5206\u533a freelist \u6765\u5b9e\u73b0 malloc \u548c free</li> </ul> </li> </ul>"},{"location":"courses/fds/note2/#_4","title":"\u6808\u548c\u961f\u5217\u57fa\u7840","text":"<ul> <li> <p>\u6808\uff08stack\uff09\u662f last-in-first-out (LIFO) \u7684</p> <pre><code>struct Stack {\n    int capacity;\n    int topOfStack;\n    ElementType *array;\n}\n</code></pre> </li> <li> <p>\u6808\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ul> <li>\u5165\u6808\uff08push\uff09\uff0c\u5c06\u5143\u7d20\u538b\u5165\u6808\u9876</li> <li>\u51fa\u6808\uff08pop\uff09\uff0c\u5c06\u6808\u9876\u5143\u7d20\u51fa\u6808</li> <li>\u67e5\u770b\u6808\u9876\u5143\u7d20\uff08top\uff09</li> </ul> </li> <li> <p>\u961f\u5217\uff08queue\uff09\u662f first-in-first-out (FIFO) \u7684</p> <pre><code>struct Queue {\n    int capacity;\n    int front, rear;\n    ElementType *array;\n}\n</code></pre> </li> <li> <p>\u961f\u5217\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ul> <li>\u5165\u961f\uff08enqueue\uff09\uff0c\u5728\u961f\u5c3e\u63d2\u5165\u5143\u7d20</li> <li>\u51fa\u961f\uff08dequeue\uff09\uff0c\u5728\u961f\u9996\u5f39\u51fa\u5143\u7d20</li> </ul> </li> <li>\u5faa\u73af\u961f\u5217</li> </ul>"},{"location":"courses/fds/note2/#_5","title":"\u4e2d\u7f00\u3001\u540e\u7f00\u4e0e\u524d\u7f00","text":"<ul> <li>\u540e\u7f00\uff08postfix\uff09\u8868\u8fbe\u5f0f\uff0c\u6240\u6709\u64cd\u4f5c\u7b26\u7f6e\u4e8e\u64cd\u4f5c\u6570\u7684\u540e\u9762<ul> <li>\u540e\u7f00\u8868\u8fbe\u5f0f\u4e0d\u518d\u8003\u8651\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u4e5f\u4e0d\u9700\u8981\u62ec\u53f7</li> </ul> </li> <li>\u540e\u7f00\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c$\\Omicron(N)$\uff0c\u7ef4\u62a4\u4e00\u4e2a\u64cd\u4f5c\u6570\u6808<ol> <li>\u8bfb\u5230\u64cd\u4f5c\u6570\uff0c\u5165\u6808</li> <li>\u8bfb\u5230\u64cd\u4f5c\u7b26\uff0c\u5c06\u6808\u9876\u524d\u4e24\u4e2a\u64cd\u4f5c\u6570\u4f9d\u6b21\u51fa\u6808\uff0c\u8fdb\u884c\u8fd0\u7b97\uff0c\u5e76\u628a\u8fd0\u7b97\u7ed3\u679c\u5165\u6808</li> <li>\u8868\u8fbe\u5f0f\u8bfb\u5b8c\u540e\uff0c\u5c06\u6808\u9876\u5143\u7d20\u51fa\u6808\uff0c\u5373\u4e3a\u8868\u8fbe\u5f0f\u7684\u503c</li> </ol> </li> <li>\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u7ef4\u62a4\u4e00\u4e2a\u64cd\u4f5c\u7b26\u6808<ol> <li>\u8bfb\u5230\u64cd\u4f5c\u6570\uff0c\u76f4\u63a5\u8f93\u51fa</li> <li>\u8bfb\u5230\u64cd\u4f5c\u7b26\uff0c\u5c06\u5176\u4e0e\u6808\u9876\u64cd\u4f5c\u7b26\u6bd4\u8f83\u4f18\u5148\u7ea7<ul> <li>pre(top) &gt;= pre(tmp)\uff0c\u6808\u9876\u64cd\u4f5c\u7b26\u51fa\u6808\uff0c\u5e76\u91cd\u590d\u6b65\u9aa4 b.</li> <li>pre(top) &lt; pre(tmp) \u6216\u8005\u6808\u4e3a\u7a7a\uff0c\u64cd\u4f5c\u7b26\u76f4\u63a5\u5165\u6808</li> <li>\u6ce8\u610f\uff0c\u8bfb\u5230\u5de6\u62ec\u53f7\u76f4\u63a5\u5165\u6808\uff0c\u8bfb\u5230\u53f3\u62ec\u53f7\u5c06\u6808\u4e2d\u5143\u7d20\u4f9d\u6b21\u51fa\u6808\u76f4\u81f3\u5de6\u62ec\u53f7\uff0c\u4e22\u5f03\u8fd9\u5bf9\u62ec\u53f7</li> <li>\u6ce8\u610f\uff0c\u4e0a\u8ff0\u9488\u5bf9\u5de6\u7ed3\u5408\u64cd\u4f5c\u7b26\uff0c\u5bf9\u4e8e\u53f3\u7ed3\u5408\u64cd\u4f5c\u7b26\uff08\u5982 $\\text{\\textasciicircum}$\uff09\uff0c\u4f18\u5148\u7ea7\u76f8\u7b49\u65f6\u76f4\u63a5\u5165\u6808</li> </ul> </li> <li>\u8868\u8fbe\u5f0f\u8bfb\u5b8c\u540e\uff0c\u5c06\u6808\u4e2d\u5143\u7d20\u5168\u90e8\u4f9d\u6b21\u51fa\u6808</li> </ol> </li> <li>\u524d\u7f00\uff08prefix\uff09\u8868\u8fbe\u5f0f\uff0c\u6240\u6709\u64cd\u4f5c\u7b26\u7f6e\u4e8e\u64cd\u4f5c\u6570\u7684\u524d\u9762<ul> <li>\u524d\u7f00\u8868\u8fbe\u5f0f\u4e0d\u518d\u8003\u8651\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u4e5f\u4e0d\u9700\u8981\u62ec\u53f7</li> </ul> </li> <li>\u524d\u7f00\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c\u548c\u540e\u7f00\u6c42\u503c\u57fa\u672c\u4e00\u81f4\uff0c\u552f\u4e00\u533a\u522b\u662f\u524d\u7f00\u81ea\u53f3\u5411\u5de6\u626b\u63cf\u8868\u8fbe\u5f0f</li> <li>\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u524d\u7f00\u8868\u8fbe\u5f0f\uff0c\u548c\u4e2d\u7f00\u8f6c\u540e\u7f00\u57fa\u672c\u4e00\u81f4\uff0c\u533a\u522b\u5982\u4e0b\uff1a<ul> <li>\u81ea\u53f3\u5411\u5de6\u626b\u63cf\u8868\u8fbe\u5f0f</li> <li>\u5de6\u62ec\u53f7\u548c\u53f3\u62ec\u53f7\u76f8\u53cd</li> <li>\u5de6\u7ed3\u5408\u64cd\u4f5c\u7b26\u548c\u53f3\u7ed3\u5408\u64cd\u4f5c\u7b26\u76f8\u53cd\uff0c\u4f53\u73b0\u5728\u4f18\u5148\u7ea7\u76f8\u7b49\u65f6\u7684\u5904\u7406</li> </ul> </li> <li>\u8868\u8fbe\u5f0f\u6811\uff08expression tree\uff09\u662f\u4e00\u79cd\u4e8c\u53c9\u6811\uff0c\u53f6\u5b50\u8282\u70b9\u5747\u4e3a\u64cd\u4f5c\u6570\uff0c\u5176\u4f59\u8282\u70b9\u5747\u4e3a\u64cd\u4f5c\u7b26</li> <li>\u4e2d\u7f00\u8868\u8fbe\u5f0f\u5efa\u6811\uff0c\u7ef4\u62a4\u4e24\u4e2a\u6808\uff0coptr \u6808\u5b58\u50a8\u64cd\u4f5c\u7b26\uff0cexpt \u6808\u5b58\u50a8\u8868\u8fbe\u5f0f\u6811\u6839\u8282\u70b9<ol> <li>\u8bfb\u5230\u64cd\u4f5c\u6570\uff0c\u751f\u6210\u4e00\u4e2a\u53ea\u6709\u6839\u8282\u70b9\u7684\u8868\u8fbe\u5f0f\u6811\uff0c\u5165\u6808 expt</li> <li>\u8bfb\u5230\u64cd\u4f5c\u7b26\uff0c\u5c06\u5176\u4e0e optr \u6808\u9876\u64cd\u4f5c\u7b26\u6bd4\u8f83\u4f18\u5148\u7ea7<ul> <li>pre(top) &gt;= pre(tmp)\uff0c\u6808\u9876\u64cd\u4f5c\u7b26\u51fa\u6808\uff0c\u5c06 expt \u6808\u9876\u524d\u4e24\u68f5\u6811\u51fa\u6808\uff0c\u751f\u6210\u4ee5\u8be5\u64cd\u4f5c\u7b26\u4e3a\u6839\u8282\u70b9\u3001\u4ee5\u8fd9\u4e24\u68f5\u6811\u4e3a\u5de6\u53f3\u5b50\u6811\u7684\u8868\u8fbe\u5f0f\u6811\uff0c\u5165\u6808 expt\uff1b\u91cd\u590d\u6b65\u9aa4 b.</li> <li>pre(top) &lt; pre(tmp) \u6216\u8005\u6808\u4e3a\u7a7a\uff0c\u64cd\u4f5c\u7b26\u76f4\u63a5\u5165\u6808</li> <li>\u6ce8\u610f\uff0c\u8bfb\u5230\u5de6\u62ec\u53f7\u76f4\u63a5\u5165\u6808\uff0c\u8bfb\u5230\u53f3\u62ec\u53f7\u5c06\u6808\u4e2d\u5143\u7d20\u4f9d\u6b21\u51fa\u6808\u76f4\u81f3\u5de6\u62ec\u53f7\uff0c\u4e22\u5f03\u8fd9\u5bf9\u62ec\u53f7</li> <li>\u6ce8\u610f\uff0c\u4e0a\u8ff0\u9488\u5bf9\u5de6\u7ed3\u5408\u64cd\u4f5c\u7b26\uff0c\u5bf9\u4e8e\u53f3\u7ed3\u5408\u64cd\u4f5c\u7b26\uff08\u5982 $\\text{\\textasciicircum}$\uff09\uff0c\u4f18\u5148\u7ea7\u76f8\u7b49\u65f6\u76f4\u63a5\u5165\u6808</li> </ul> </li> <li>\u8868\u8fbe\u5f0f\u8bfb\u5b8c\u540e\uff0c\u5c06 expt \u6808\u9876\u5143\u7d20\u51fa\u6808\uff0c\u5373\u4e3a\u8868\u8fbe\u5f0f\u6811</li> </ol> </li> </ul>"},{"location":"courses/fds/note2/#_6","title":"\u6811","text":""},{"location":"courses/fds/note2/#_7","title":"\u57fa\u7840\u6982\u5ff5","text":"<ul> <li>\u6811\u7531\u6839\u8282\u70b9\uff08root\uff09\uff0c\u4ee5\u53ca 0 \u4e2a\u6216\u591a\u4e2a\u975e\u7a7a\u5b50\u6811\u4e0e\u6839\u901a\u8fc7\u4e00\u6761\u6709\u5411\u8fb9\uff08edge\uff09\u8fde\u63a5\u7ec4\u6210</li> <li>\u4e00\u68f5\u6811\u662f $N$ \u4e2a\u8282\u70b9\u548c $N-1$ \u6761\u8fb9\u7684\u96c6\u5408</li> <li>\u8282\u70b9\u7684\u5b50\u6811\u6570\u91cf\u79f0\u4e3a\u8282\u70b9\u7684\u5ea6\uff08degree\uff09</li> <li>\u4e00\u68f5\u6811\u7684\u5ea6\u662f\u8fd9\u68f5\u6811\u91cc\u6240\u6709\u8282\u70b9\u5ea6\u7684\u6700\u5927\u503c</li> <li>\u81f3\u5c11\u6709\u4e00\u4e2a\u5b50\u6811\u7684\u8282\u70b9\u79f0\u4e3a\u7236\u4eb2\uff08parent\uff09</li> <li>\u7236\u4eb2\u7684\u6bcf\u68f5\u5b50\u6811\u7684\u6839\u8282\u70b9\u79f0\u4e3a\u513f\u5b50\uff08children\uff09</li> <li>\u6709\u76f8\u540c\u7236\u4eb2\u7684\u513f\u5b50\u79f0\u4e3a\u5144\u5f1f\uff08siblings\uff09</li> <li>\u6ca1\u6709\u5b50\u6811\u7684\u8282\u70b9\u79f0\u4e3a\u6811\u53f6\uff08leaf\uff09</li> <li>\u4ece\u8282\u70b9 $n_1$ \u5230 $n_k$ \u7684\u8def\u5f84\uff08path\uff09\u662f\u552f\u4e00\u7684\uff0c\u5176\u957f\u5ea6\uff08length\uff09\u662f\u8def\u5f84\u4e0a\u8fb9\u7684\u6570\u91cf</li> <li>\u8282\u70b9 $n_i$ \u7684\u6df1\u5ea6\uff08depth\uff09\u662f\u4ece\u6839\u5230 $n_i$ \u7684\u552f\u4e00\u8def\u5f84\u7684\u957f\u5ea6</li> <li>\u8282\u70b9 $n_i$ \u7684\u9ad8\u5ea6\uff08height\uff09\u662f\u4ece $n_i$ \u5230\u4e00\u4e2a\u53f6\u8282\u70b9\u7684\u6700\u957f\u957f\u5ea6</li> <li>\u6811\u7684\u9ad8\u5ea6 / \u6df1\u5ea6 = \u6839\u8282\u70b9\u7684\u9ad8\u5ea6 = \u6700\u6df1\u53f6\u8282\u70b9\u7684\u6df1\u5ea6</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u7956\u5148\uff08ancestor\uff09\u662f\u4ece\u6839\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u540e\u88d4\uff08descendants\uff09\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8282\u70b9</li> <li> <p>\u6811\u7684\u8868\u793a\uff1a</p> <ul> <li>\u5217\u8868\u8868\u793a\uff0c\u5b50\u8282\u70b9\u4e2a\u6570\u672a\u77e5\uff0c\u4e0d\u6613\u8868\u793a</li> <li> <p>FirstChild-NextSibling \u8868\u793a\uff0c\u56e0\u4e3a\u513f\u5b50\u987a\u5e8f\u4e0d\u5b9a\uff0c\u6240\u4ee5\u4e00\u68f5\u6811\u7684\u8868\u793a\u65b9\u5f0f\u4e0d\u552f\u4e00</p> <pre><code>typedef struct TreeNode *PtrToNode;\nstruct TreeNode {\n    ElementType element;\n    PtrToNode firstChild, nextSibling;\n};\n</code></pre> </li> <li> <p>\u5c06 FirstChild-NextSibling \u8868\u793a\u7684\u6811\u987a\u65f6\u9488\u65cb\u8f6c $45\\degree$\uff0c\u53ef\u4ee5\u5f97\u5230\u4e8c\u53c9\u6811</p> </li> </ul> </li> </ul>"},{"location":"courses/fds/note2/#_8","title":"\u4e8c\u53c9\u6811","text":"<ul> <li>\u4e8c\u53c9\u6811\uff08binary tree\uff09\u662f\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u6709\u4e24\u4e2a\u513f\u5b50\u7684\u6811<ul> <li>\u4e8c\u53c9\u6811\u7684\u5de6\u53f3\u4e24\u4e2a\u513f\u5b50\u662f\u6709\u5e8f\u7684\uff0c\u5373\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u540e\u4e8c\u53c9\u6811\u53ef\u80fd\u4f1a\u6539\u53d8</li> </ul> </li> <li>\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff1a<ul> <li>\u7b2c $i$ \u5c42\u7684\u8282\u70b9\u6570\u6700\u591a\u4e3a $2^ i$</li> <li>\u9ad8\u5ea6\u4e3a $k$ \u7684\u4e8c\u53c9\u6811\u6700\u591a\u6709 $2^ {k+1}-1$ \u4e2a\u8282\u70b9\uff0c\u6b64\u65f6\u79f0\u4e3a\u5b8c\u7f8e\u4e8c\u53c9\u6811\uff08perfect binary tree\uff09</li> <li>\u8bb0 $n_0$ \u8868\u793a\u53f6\u8282\u70b9\u6570\uff0c$n_2$ \u8868\u793a\u5ea6\u4e3a $2$ \u7684\u8282\u70b9\u6570\uff0c\u5219 $n_0 = n_2 + 1$</li> </ul> </li> <li>\u659c\u4e8c\u53c9\u6811\uff08skewed binary tree\uff09<ul> <li>\u6240\u6709\u8282\u70b9\u90fd\u53ea\u6709\u5de6\u5b50\u6811\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u5de6\u659c\u6811</li> <li>\u6240\u6709\u8282\u70b9\u90fd\u53ea\u6709\u53f3\u5b50\u6811\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u53f3\u659c\u6811</li> </ul> </li> <li>\u6ee1\u4e8c\u53c9\u6811\uff08full binary tree\uff09<ul> <li>\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u90fd\u662f 0 \u6216 2</li> </ul> </li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\uff08complete binary tree\uff09<ul> <li>\u53ea\u6709\u6700\u4e0b\u9762\u4e24\u5c42\u8282\u70b9\u7684\u5ea6\u53ef\u4ee5\u5c0f\u4e8e 2</li> <li>\u6700\u540e\u4e00\u5c42\u7684\u8282\u70b9\u90fd\u96c6\u4e2d\u5728\u5de6\u8fb9\u7684\u8fde\u7eed\u4f4d\u7f6e\u4e0a</li> </ul> </li> <li>\u8865\u5145\uff0c\u4e8c\u53c9\u6811\u53ef\u4ee5\u901a\u8fc7\u6570\u7ec4\u6765\u8868\u793a<ul> <li>\u6839\u4e3a tree[1]</li> <li>\u8282\u70b9 tree[i] \u7684\u7236\u4eb2\u4e3a tree[i/2]</li> <li>\u8282\u70b9 tree[i] \u7684\u5de6\u513f\u5b50\u4e3a tree[2i]\uff0c\u53f3\u513f\u5b50\u4e3a tree[2i+1]</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6570\u7ec4\u4e2d\u8282\u70b9\u5e03\u6ee1 tree[1] ~ tree[n]</li> </ul> </li> </ul>"},{"location":"courses/fds/note2/#_9","title":"\u904d\u5386","text":"<ul> <li> <p>\u5148\u5e8f\u904d\u5386\uff08preorder traversal\uff09</p> <ul> <li> <p>\u6839 -&gt; \u5de6 -&gt; \u53f3</p> <pre><code>void preorder(tree_ptr tree)\n{\n    if (tree) {\n        visit(tree);\n        for (each child C of tree)\n            preorder(C);\n    }\n}\n</code></pre> </li> </ul> </li> <li> <p>\u540e\u5e8f\u904d\u5386\uff08postorder traversal\uff09</p> <ul> <li> <p>\u5de6 -&gt; \u53f3 -&gt; \u6839</p> <pre><code>void postorder(tree_ptr tree)\n{\n    if (tree) {\n        for (each child C of tree)\n            postorder(C);\n        visit(tree);\n    }\n}\n</code></pre> </li> </ul> </li> <li> <p>\u4e2d\u5e8f\u904d\u5386\uff08inorder traversal\uff09</p> <ul> <li>\u5de6 -&gt; \u6839 -&gt; \u53f3</li> <li> <p>\u53ea\u9002\u7528\u4e8e\u4e8c\u53c9\u6811</p> \u9012\u5f52\u5b9e\u73b0\u8fed\u4ee3\u5b9e\u73b0 <pre><code>void inorder(tree_ptr tree)\n{\n    if (tree) {\n        inorder(tree-&gt;left);\n        visit(tree-&gt;element);\n        inorder(tree-&gt;right);\n    }\n}\n</code></pre> <pre><code>void iter_inorder(tree_ptr tree)\n{\n    Stack S = createStack();\n    for (;;) {\n        for (; tree; tree = tree-&gt;left)\n            push(tree, S);\n        tree = top(S); pop(S);\n        if (!tree) break;\n        visit(tree-&gt;element);\n        tree = tree-&gt;right;\n    }\n}\n</code></pre> </li> </ul> </li> <li> <p>\u5c42\u5e8f\u904d\u5386\uff08level order traversal\uff09</p> <ul> <li> <p>\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3</p> <pre><code>void levelorder(tree_ptr tree)\n{\n    enqueue(tree);\n    while (queue is not empty) {\n        visit(T = dequeue());\n        for (each child C of tree)\n            enqueue(C);\n    }\n}\n</code></pre> </li> </ul> </li> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\uff08threaded binary tree\uff09</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u513f\u5b50\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5b83\u7684\u5de6\u6307\u9488\u6307\u5411\u5b83\u7684\u4e2d\u5e8f\u904d\u5386\u524d\u9a71\uff08predecessor\uff09\u8282\u70b9</li> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u53f3\u513f\u5b50\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5b83\u7684\u53f3\u6307\u9488\u6307\u5411\u5b83\u7684\u4e2d\u5e8f\u904d\u5386\u540e\u7ee7\uff08successor\uff09\u8282\u70b9</li> <li>\u7ebf\u7d22\u4e8c\u53c9\u6811\u5fc5\u987b\u6709\u4e00\u4e2a head node\uff0c\u5176\u5de6\u513f\u5b50\u4e3a\u6839\uff0c\u53f3\u513f\u5b50\u4e3a\u81ea\u8eab</li> <li> <p>\u4f7f\u7528 head node \u662f\u4e3a\u4e86\u8ba9\u4e2d\u5e8f\u904d\u5386\u7684\u59cb\u672b\u4e24\u4e2a\u8282\u70b9\u5206\u522b\u80fd\u6709\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\uff08\u5373 head node\uff09</p> <pre><code>typedef struct ThreadedTreeNode *PtrToThreadedNode;\ntypedef struct PtrToThreadedNode ThreadedTree;\nstruct ThreadedTreeNode {\n    int leftThread, rightThread;  // 0 for child, 1 for thread.\n    ThreadTree left, right;\n    ElementType element;\n}\n</code></pre> </li> </ul> </li> <li> <p>\u7ebf\u7d22\u4e8c\u53c9\u6811\u80fd\u7ebf\u6027\u5730\u904d\u5386\u4e8c\u53c9\u6811\uff0c\u4ece\u800c\u6bd4\u9012\u5f52\u7684\u4e2d\u5e8f\u904d\u5386\u66f4\u5feb</p> </li> <li>\u4f7f\u7528\u7ebf\u7d22\u4e8c\u53c9\u6811\u80fd\u591f\u65b9\u4fbf\u5730\u627e\u5230\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9</li> </ul>"},{"location":"courses/fds/note2/#_10","title":"\u4e8c\u53c9\u641c\u7d22\u6811","text":"<ul> <li>\u4e8c\u53c9\u641c\u7d22\u6811\uff08binary search tree\uff09\u662f\u4e00\u79cd\u4e8c\u53c9\u6811\uff0c\u975e\u7a7a\u65f6\u6ee1\u8db3\u4e0b\u5217\u6027\u8d28\uff1a<ul> <li>\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e0d\u540c\u7684 key\uff08\u6574\u6570\u578b\uff09</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\u4e2d\u6240\u6709\u8282\u70b9\u7684 key \u90fd\u5c0f\u4e8e\u8be5\u8282\u70b9\u7684 key</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\u4e2d\u6240\u6709\u8282\u70b9\u7684 key \u90fd\u5927\u4e8e\u8be5\u8282\u70b9\u7684 key</li> <li>\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u4e5f\u90fd\u662f\u4e8c\u53c9\u641c\u7d22\u6811</li> </ul> </li> <li>\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u662f\u6709\u5e8f\u7684</li> <li>\u67e5\u627e<ul> <li>\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5982\u679c key \u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684 key\uff0c\u5f80\u5de6\u5b50\u6811\u627e\uff0c\u5426\u5219\u5f80\u53f3\u5b50\u6811\u627e</li> <li>\u76f4\u5230\u627e\u5230 key \u76f8\u7b49\u7684\u8282\u70b9\uff0c\u6216\u8005\u627e\u5230\u7a7a\u8282\u70b9</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6 $\\Omicron(h)$\uff0c$h$ \u4e3a\u6811\u7684\u9ad8\u5ea6<ul> <li>\u7406\u60f3\u60c5\u51b5\u4e0b\u5373 $\\Omicron(\\log n)$\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u9000\u5316\u4e3a $\\Omicron(n)$\uff08\u4f8b\u5982\u659c\u6811\uff09</li> </ul> </li> </ul> </li> <li>\u67e5\u8be2\u6700\u5c0f\u503c\uff1a\u904d\u5386\u5230\u6700\u5de6\u8fb9\u7684\u8282\u70b9</li> <li>\u67e5\u8be2\u6700\u5927\u503c\uff1a\u904d\u5386\u5230\u6700\u53f3\u8fb9\u7684\u8282\u70b9</li> <li>\u63d2\u5165<ul> <li>\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5982\u679c key \u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684 key\uff0c\u5f80\u5de6\u5b50\u6811\u627e\uff0c\u5426\u5219\u5f80\u53f3\u5b50\u6811\u627e</li> <li>\u76f4\u5230\u627e\u5230\u7a7a\u8282\u70b9\uff0c\u7136\u540e\u63d2\u5165\uff1b\u6216\u8005\u627e\u5230 key \u76f8\u7b49\u7684\u8282\u70b9\uff0c\u5ffd\u7565\u672c\u6b21\u63d2\u5165</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6 $\\Omicron(h)$\uff0c$h$ \u4e3a\u6811\u7684\u9ad8\u5ea6</li> </ul> </li> <li>\u5bf9\u4e8e\u540c\u4e00\u5e8f\u5217\uff0c\u63d2\u5165\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u751f\u6210\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u9ad8\u5ea6\u4e5f\u4e0d\u540c</li> <li> <p>\u5220\u9664</p> <ul> <li>\u5220\u9664\u53f6\u8282\u70b9\uff1a\u76f4\u63a5\u5220\u9664\u5373\u53ef</li> <li>\u5220\u9664\u5ea6\u4e3a 1 \u7684\u8282\u70b9\uff1a\u7528\u552f\u4e00\u7684\u513f\u5b50\u66ff\u4ee3\u5b83</li> <li>\u5220\u9664\u5ea6\u4e3a 2 \u7684\u8282\u70b9\uff1a<ul> <li>\u5c06\u5b83\u4e0e\u5de6\u5b50\u6811\u7684\u6700\u5927\u8282\u70b9\uff08\u6216\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u8282\u70b9\uff09\u4ea4\u6362</li> <li>\u7136\u540e\u5220\u9664\u5b83\uff08\u6ce8\u610f\u5230\u4ea4\u6362\u540e\u5b83\u6240\u5904\u7684\u4f4d\u7f6e\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u76f4\u63a5\u8f6c\u53d8\u4e3a\u524d\u4e24\u79cd\u60c5\u51b5\uff09</li> </ul> </li> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6 $\\Omicron(h)$\uff0c$h$ \u4e3a\u6811\u7684\u9ad8\u5ea6</p> <pre><code>SearchTree delete(ElementType X, SearchTree T)\n{\n    Position TmpCell;\n    if (T == NULL) error(\"not found\");\n    else if (X &lt; T-&gt;element) T-&gt;left = delete(X, T-&gt;left);\n    else if (X &gt; T-&gt;element) T-&gt;right = delete(X, T-&gt;right);\n    else {  /* found element to be deleted */\n        if (T-&gt;left &amp;&amp; T-&gt;right) {\n            TmpCell = findMin(T-&gt;right);\n            T-&gt;element = TmpCell-&gt;element;\n            T-&gt;right = delete(T-&gt;element, T-&gt;right);\n        } else {\n            TmpCell = T;\n            if (T-&gt;left == NULL) T = T-&gt;right;\n            else if (T-&gt;right == NULL) T = T-&gt;left;\n            free(TmpCell);\n        }\n    }\n    return T;\n}\n</code></pre> </li> </ul> </li> <li> <p>\u5f53\u5220\u9664\u64cd\u4f5c\u4e0d\u591a\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u61d2\u60f0\uff08lazy\uff09\u65b9\u6cd5</p> <ul> <li>\u7528 flag \u6807\u8bb0\u6bcf\u4e2a\u8282\u70b9\u662f\u5426\u88ab\u5220\u9664\uff0c\u8bbf\u95ee\u65f6\u5ffd\u7565\uff0c\u5220\u9664\u65f6\u4e0d\u5fc5 free\uff0c\u91cd\u65b0\u63d2\u5165\u65f6\u4e0d\u5fc5 malloc</li> </ul> </li> </ul>"},{"location":"courses/fds/note2/#_11","title":"\u5806","text":"<ul> <li>\u5806\uff08heap\uff09\u4e5f\u79f0\u4f5c\u4f18\u5148\u961f\u5217\uff08priority queue\uff09</li> <li> <p>\u4e8c\u53c9\u5806\uff08binary heap\uff09\u662f\u4e00\u79cd\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6ee1\u8db3\uff1a</p> <ul> <li> <p>\u7236\u8282\u70b9\u7684 key \u603b\u662f\u4e0d\u5c0f\u4e8e\uff08\u6216\u4e0d\u5927\u4e8e\uff09\u5176\u5b50\u8282\u70b9\u7684 key\uff08\u5373\u5927\u6839\u5806\u6216\u5c0f\u6839\u5806\uff09</p> <pre><code>struct MinHeap {\n    int size;\n    ElementType elements[MAX_SIZE];  // elements[0] is a sentinel.\n}\n</code></pre> </li> </ul> </li> <li> <p>\u5927\u6839\u5806\u7684\u6839\u8282\u70b9\u5b58\u6709\u6700\u5927 key\uff0c\u5c0f\u6839\u5806\u7684\u6839\u8282\u70b9\u5b58\u6709\u6700\u5c0f key</p> </li> <li> <p>\u63d2\u5165</p> <ul> <li>\u5148\u653e\u5230\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u548c\u7236\u8282\u70b9\u6bd4\u8f83 key\uff0c\u4e0d\u6ee1\u8db3\u5806\u6761\u4ef6\u5219\u548c\u7236\u8282\u70b9\u4ea4\u6362</li> <li>\u76f4\u5230\u6ee1\u8db3\u5806\u6761\u4ef6\u4e3a\u6b62</li> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6 $\\Omicron(\\log n)$</p> <pre><code>void insert(ElementType X, MinHeap H)\n{\n    if (isFull(H)) {\n        error(\"full heap\");\n        return;\n    }\n    int i = ++H-&gt;size;  /* percolate up */\n    for (; H-&gt;elements[i / 2] &gt; X; i /= 2)\n        H-&gt;elements[i] = H-&gt;elements[i / 2];\n    H-&gt;elements[i] = X;\n}\n</code></pre> </li> </ul> </li> <li> <p>\u5220\u9664</p> <ul> <li>\u5148\u628a\u6700\u540e\u4e00\u4e2a\u53f6\u8282\u70b9\u653e\u5230\u6839\u8282\u70b9\uff0c\u7136\u540e\u548c\u5b50\u8282\u70b9\u6bd4\u8f83 key\uff0c\u4e0d\u6ee1\u8db3\u5806\u6761\u4ef6\u5219\u548c\u6700\u5c0f\uff08\u6216\u6700\u5927\uff09\u5b50\u8282\u70b9\u4ea4\u6362</li> <li>\u76f4\u5230\u6ee1\u8db3\u5806\u6761\u4ef6\u4e3a\u6b62</li> <li> <p>\u65f6\u95f4\u590d\u6742\u5ea6 $\\Omicron(\\log n)$</p> <pre><code>ElementType deleteMin(MinHeap H)\n{\n    if (isEmpty(H)) {\n        error(\"empty heap\");\n        return H-&gt;elements[0];\n    }\n    int i, child;  /* percolate down */\n    ElementType minElement = H-&gt;elements[1];\n    ElementType lastElement = H-&gt;elements[H-&gt;size--];\n    for (i = 1; i * 2 &lt;= H-&gt; size; i = child) {\n        child = i * 2;\n        if (child != H-&gt;size &amp;&amp; H-&gt;elements[child + 1] &lt; H-&gt;elements[child])\n            child++;\n        if (lastElement &gt; H-&gt;elements[child])\n            H-&gt;elements[i] = H-&gt;elements[child];\n        else break;\n    }\n    H-&gt;elements[i] = lastElement;\n    return minElement;\n}\n</code></pre> </li> </ul> </li> <li> <p>\u5411\u4e0a\u8c03\u6574\uff08percolate up\uff09\uff1a\u81ea\u4e0b\u800c\u4e0a\u5806\u5316\uff0c\u5373\u8fd9\u4e2a\u5143\u7d20\u53ef\u80fd\u4f1a\u5411\u4e0a\u79fb\u52a8</p> <ul> <li>\u7b2c $k$ \u5c42\u8282\u70b9\u5411\u4e0a\u8c03\u6574\u7684\u590d\u6742\u5ea6\u4e3a $\\Omicron(k)$</li> </ul> </li> <li>\u5411\u4e0b\u8c03\u6574\uff08percolate down\uff09\uff1a\u81ea\u4e0a\u800c\u4e0b\u5806\u5316\uff0c\u5373\u8fd9\u4e2a\u5143\u7d20\u53ef\u80fd\u4f1a\u5411\u4e0b\u79fb\u52a8<ul> <li>\u7b2c $k$ \u5c42\u8282\u70b9\u5411\u4e0b\u8c03\u6574\u7684\u590d\u6742\u5ea6\u4e3a $\\Omicron(\\log n-k)$</li> </ul> </li> <li>\u589e\u52a0\u6216\u51cf\u5c11\u67d0\u4e2a\u8282\u70b9\u7684 key\uff0c\u53ea\u9700\u8981\u76f8\u5e94\u5730 percolate up \u6216 down \u4e00\u6b21\u5373\u53ef</li> <li>\u5220\u9664\u67d0\u4e2a\u975e\u6700\u5927\u6700\u5c0f\u503c\u8282\u70b9<ul> <li>\u5148\u628a\u8fd9\u4e2a\u8282\u70b9\u7684 key \u589e\u52a0\uff08\u6216\u51cf\u5c11\uff09\u5230\u6700\u5927\uff08\u6216\u6700\u5c0f\uff09</li> <li>\u5220\u9664\u6700\u5927\uff08\u6216\u6700\u5c0f\uff09\u8282\u70b9</li> </ul> </li> <li> <p>\u5efa\u5806</p> <ul> <li>\u4ece\u4e00\u4e2a\u7a7a\u7684\u5806\u5f00\u59cb\uff0c\u63d2\u5165 n \u4e2a\u5143\u7d20\uff0c\u4e0d\u8003\u8651\u987a\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(n\\log n)$</li> <li> <p>\u76f4\u63a5\u5c06\u8fd9\u4e2a\u5e8f\u5217\u5f53\u4f5c\u4e8c\u53c9\u6811\uff0c\u539f\u5730\u8c03\u6574\u5b9e\u73b0\u5806\u5316</p> <ul> <li> <p>\u65b9\u6cd5\u4e00\uff0c\u4ece\u6839\u5f00\u59cb\uff0c\u6309 BFS \u5e8f\u5411\u4e0a\u8c03\u6574\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(n\\log n)$</p> <pre><code>void buildHeap1(void) {\n    for (i = 1; i &lt;= n; i++) percolateUp(i);\n}\n</code></pre> </li> <li> <p>\u65b9\u6cd5\u4e8c\uff0c\u4ece\u6700\u540e\u4e00\u4e2a\u53f6\u8282\u70b9\u5f00\u59cb\uff0c\u9010\u4e2a\u5411\u4e0b\u8c03\u6574\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(n)$</p> <pre><code>void buildHeap2(void) {\n    for (i = n; i &gt;= 1; i--) percolateDown(i);\n    /* for (i = n / 2 to 1) is enough */\n}\n</code></pre> </li> <li> <p>\u65b9\u6cd5\u4e8c\u5373\u7ebf\u6027\u5efa\u5806\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u6bcf\u6b21\u5408\u5e76\u4e24\u4e2a\u5df2\u7ecf\u8c03\u6574\u597d\u7684\u5806</p> </li> <li>\u4e4b\u6240\u4ee5\u80fd\u7ebf\u6027\u5efa\u5bf9\uff0c\u662f\u56e0\u4e3a\u5806\u6027\u8d28\u5f88\u5f31\uff08\u4e0d\u540c\u4e8e\u6392\u5e8f\u7684\u5f3a\u6761\u4ef6\uff09\uff0c\u4e8c\u53c9\u5806\u4e0d\u662f\u552f\u4e00\u7684</li> </ul> </li> </ul> </li> <li> <p>d-heap\uff0c\u662f\u6ee1\u8db3\u5806\u6027\u8d28\u7684 d \u53c9\u6811</p> <ul> <li>\u6839\u4e3a elements[1]</li> <li>\u8282\u70b9 elements[i] \u7684\u7236\u4eb2\u4e3a elements[(i+d-2)/d]</li> <li>\u8282\u70b9 elements[i] \u7684\u513f\u5b50\u4e3a elements[(i-1)d+2] ~ elements[id+1]</li> <li>\u63d2\u5165\u4e0e\u5220\u9664\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(\\log _{d}n)=\\Omicron(\\log n/\\log d)$</li> </ul> </li> </ul>"},{"location":"courses/fds/note2/#_12","title":"\u5e76\u67e5\u96c6","text":"<ul> <li>\u7b49\u4ef7\u5173\u7cfb\u6ee1\u8db3\uff1a<ul> <li>\u81ea\u53cd\u6027\uff08reflexive\uff09</li> <li>\u5bf9\u79f0\u6027\uff08symmetric\uff09</li> <li>\u4f20\u9012\u6027\uff08transitive\uff09</li> </ul> </li> <li>\u5e76\u67e5\u96c6\uff08disjoint set\uff09\u7528\u4e8e\u7ba1\u7406\u5143\u7d20\u6240\u5c5e\u96c6\u5408\uff08\u7b49\u4ef7\u7c7b\uff09\uff0c\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a<ul> <li>\u5408\u5e76\uff08union\uff09\uff1a\u5408\u5e76\u4e24\u4e2a\u96c6\u5408</li> <li>\u67e5\u8be2\uff08find\uff09\uff1a\u67e5\u8be2\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408</li> </ul> </li> <li>\u7528\u6811\uff08\u68ee\u6797\uff09\u8868\u793a\u4e00\u4e2a\u96c6\u5408\uff0c\u6811\u4e2d\u7684\u8282\u70b9\u8868\u793a\u5bf9\u5e94\u96c6\u5408\u4e2d\u7684\u5143\u7d20</li> <li>\u7528\u6570\u7ec4\u5b9e\u73b0\u5e76\u67e5\u96c6<ul> <li>s[root] = 0</li> <li>s[i] \u8bb0\u5f55 i \u8fd9\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9</li> </ul> </li> <li> <p>\u67e5\u627e</p> <pre><code>SetType find(ElementType X, DisjSet S) {\n    for (; S[X] &gt; 0; X = S[X]) ;\n    return X;\n}\n</code></pre> </li> <li> <p>\u5408\u5e76\uff1a\u5148\u67e5\u627e\u4e24\u4e2a\u5143\u7d20\u6240\u5728\u6811\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u5c06\u5176\u4e2d\u4e00\u4e2a\u6839\u8282\u70b9\u8bbe\u4e3a\u53e6\u4e00\u4e2a\u6839\u8282\u70b9\u7684\u513f\u5b50</p> <pre><code>void union(DisjSet S, ElementType X1, ElementType X2){\n    S[find(X2, S)] = find(X1, S);\n}\n</code></pre> </li> <li> <p>\u8def\u5f84\u538b\u7f29\uff08path-compression\uff09</p> <ul> <li> <p>\u5c06\u67e5\u627e\u8fc7\u7a0b\u4e2d\u904d\u5386\u5230\u7684\u6240\u6709\u8282\u70b9\uff0c\u90fd\u76f4\u63a5\u8fde\u63a5\u5230\u6839\u8282\u70b9</p> \u9012\u5f52\u5b9e\u73b0\u975e\u9012\u5f52\u5b9e\u73b0 <pre><code>SetType find(ElementType X, DisjSet S) {\n    return S[X] &lt;= 0 ? X : S[X] = find(S[X], S)\n}\n</code></pre> <pre><code>SetType find(ElementType X, DisjSet S)\n{\n    ElementType root, trail, lead;\n    for (root = X; S[root] &gt; 0; root = S[root]) ;\n    for (trail = X; trail != root; trail = lead) {\n        lead = S[trail];\n        S[trail] = root;\n    }\n    return root;\n}\n</code></pre> </li> </ul> </li> <li> <p>\u6309\u5927\u5c0f\u5408\u5e76\uff08union-by-size\uff09</p> <ul> <li>\u59cb\u7ec8\u5c06\u5c0f\u7684\u6811\u5408\u5e76\u5230\u5927\u7684\u6811\u4e0a</li> <li>s[root] = -size\uff0csize \u8868\u793a\u6811\u7684\u5927\u5c0f\uff08\u6811\u4e0a\u7684\u8282\u70b9\u603b\u6570\uff09</li> <li>\u6309\u5927\u5c0f\u5408\u5e76\u5f97\u5230\u7684\u6811\uff0c\u9ad8\u5ea6\u4e0d\u8d85\u8fc7 $\\lfloor \\log N \\rfloor +1$</li> <li>$N$ \u6b21 union \u548c $M$ \u6b21 find \u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(N+M\\log N)$</li> </ul> </li> <li>\u6309\u9ad8\u5ea6\u5408\u5e76\uff08union-by-height\uff09<ul> <li>\u59cb\u7ec8\u5c06\u77ee\u7684\u6811\u5408\u5e76\u5230\u9ad8\u7684\u6811\u4e0a</li> <li>\u53ea\u6709\u5f53\u4e24\u68f5\u7b49\u9ad8\u7684\u6811\u5408\u5e76\u65f6\uff0c\u6811\u7684\u9ad8\u5ea6\u624d\u4f1a\u589e\u52a0 1</li> <li>$N$ \u6b21 union \u548c $M$ \u6b21 find \u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(N+M\\log N)$</li> <li>\u6ce8\u610f\uff0c\u8def\u5f84\u538b\u7f29\u4f1a\u6539\u53d8\u6811\u7684\u9ad8\u5ea6\uff0c\u5bfc\u81f4 height \u9891\u7e41\u66f4\u65b0<ul> <li>\u53ef\u4ee5\u7528\u4f30\u8ba1\u503c rank \u6765\u66ff\u4ee3\u786e\u5207\u7684 height\uff0crank \u662f height \u7684\u4e00\u4e2a\u4e0a\u754c</li> <li>\u53ea\u5728\u5408\u5e76\u65f6\u66f4\u65b0 rank\uff0c\u67e5\u627e\u64cd\u4f5c\u4f1a\u6539\u53d8 height\uff0c\u4f46\u4e0d\u4f1a\u5f15\u8d77 rank \u7684\u66f4\u65b0</li> </ul> </li> </ul> </li> <li>\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u548c\u6309\u79e9\u5408\u5e76\u7684\u5e76\u67e5\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(N+M\\alpha (M,N))$<ul> <li>$\\alpha$ \u662f Ackermann \u51fd\u6570\u7684\u53cd\u51fd\u6570</li> <li>$\\alpha$ \u7684\u589e\u957f\u6bd4\u8fed\u4ee3\u5bf9\u6570 $\\log ^*$ \u66f4\u7f13\u6162</li> </ul> </li> </ul>"},{"location":"courses/fds/note2/#_13","title":"\u56fe","text":""},{"location":"courses/fds/note2/#_14","title":"\u57fa\u7840\u6982\u5ff5","text":"<ul> <li>\u56fe\uff08graph\uff09\u5e38\u7528 $G(V,E)$ \u8868\u793a\uff0c$V$ \u548c $E$ \u5206\u522b\u8868\u793a\u6709\u9650\u7684\u70b9\u96c6\u548c\u8fb9\u96c6</li> <li>\u65e0\u5411\u56fe\uff08undirected graph\uff09\uff1a$E$ \u4e2d\u7684\u5143\u7d20\u4e3a\u65e0\u5e8f\u6570\u5bf9 $(u,v)$</li> <li>\u6709\u5411\u56fe\uff08directed graph\uff09\uff1a$E$ \u4e2d\u7684\u5143\u7d20\u4e3a\u6709\u5e8f\u6570\u5bf9 $\\lang u,v\\rang$</li> <li>\u4e0d\u8003\u8651\u81ea\u73af\uff08self loop\uff09\u548c\u591a\u91cd\u8fb9\uff08multigraph\uff09\uff0c\u5373\u53ea\u8003\u8651\u7b80\u5355\u56fe\uff08simple graph\uff09</li> <li>\u5b8c\u5168\u56fe\uff08complete graph\uff09\uff1a\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u4e00\u6761\u65e0\u5411\u8fb9\u6216\u4e24\u6761\u6709\u5411\u8fb9<ul> <li>\u76f8\u540c\u8282\u70b9\u6570\u7684\u7b80\u5355\u56fe\u4e2d\uff0c\u5b8c\u5168\u56fe\u8fb9\u6570\u6700\u591a</li> </ul> </li> <li>$u,v$ \u4e4b\u95f4\u6709\u4e00\u6761\u65e0\u5411\u8fb9 $(u,v)$\uff0c\u79f0\uff1a<ul> <li>$u,v$ \u662f\u76f8\u90bb\u7684\uff08adjacent\uff09</li> </ul> </li> <li>\u6709\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u6709\u5411\u8fb9 $\\lang u,v\\rang$\uff0c\u79f0\uff1a<ul> <li>$u$ is adjacent to $v$</li> <li>$v$ is adjacent from $u$</li> </ul> </li> <li>\u5b50\u56fe\uff08subgraph\uff09\uff1a\u70b9\u96c6\u548c\u8fb9\u96c6\u90fd\u662f\u539f\u56fe\u7684\u5b50\u96c6</li> <li>\u7b80\u5355\u8def\u5f84\uff08simple path\uff09\uff1a\u8def\u5f84\u4e0a\u6ca1\u6709\u91cd\u590d\u7684\u70b9</li> <li>\u73af\uff08cycle\uff09\uff1a\u8d77\u70b9\u548c\u7ec8\u70b9\u76f8\u540c\u7684\u7b80\u5355\u8def\u5f84</li> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe\uff1a<ul> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u5219\u79f0 $u,v$ \u662f\u8fde\u901a\u7684\uff08connected\uff09</li> <li>\u5982\u679c\u4efb\u610f\u4e00\u5bf9\u70b9\u90fd\u662f\u8fde\u901a\u7684\uff0c\u5219\u79f0\u8fd9\u4e2a\u65e0\u5411\u56fe\u662f\u8fde\u901a\u7684</li> <li>\u8fde\u901a\u5206\u91cf\uff08connected component\uff09\uff1a\u65e0\u5411\u56fe\u7684\u6781\u5927\u8fde\u901a\u5b50\u56fe</li> </ul> </li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe\uff1a<ul> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u5219\u79f0\u4ece $u$ \u5230 $v$ \u662f\u53ef\u8fbe\u7684\uff08reachable\uff09</li> <li>\u5982\u679c\u4efb\u610f\u4e00\u5bf9\u70b9\u90fd\u76f8\u4e92\u53ef\u8fbe\uff0c\u5219\u79f0\u8fd9\u4e2a\u6709\u5411\u56fe\u662f\u5f3a\u8fde\u901a\u7684\uff08strongly connected\uff09</li> <li>\u5f3a\u8fde\u901a\u5206\u91cf\uff1a\u6709\u5411\u56fe\u7684\u6781\u5927\u5f3a\u8fde\u901a\u5b50\u56fe</li> <li>\u5982\u679c\u4e00\u5f20\u6709\u5411\u56fe\u4e0d\u662f\u5f3a\u8fde\u901a\u7684\uff0c\u4f46\u628a\u5b83\u7684\u8fb9\u66ff\u6362\u4e3a\u65e0\u5411\u8fb9\u540e\u53ef\u4ee5\u5f97\u5230\u4e00\u5f20\u8fde\u901a\u56fe\uff0c\u5219\u79f0\u539f\u6765\u8fd9\u4e2a\u56fe\u662f\u5f31\u8fde\u901a\u7684\uff08weakly connected\uff09</li> </ul> </li> <li>\u6811\u662f\u8fde\u901a\u7684\u65e0\u73af\u56fe</li> <li>DAG\uff08directed acyclic graph\uff09\u5373\u6709\u5411\u65e0\u73af\u56fe</li> <li>\u5ea6\uff08degree\uff09<ul> <li>\u8282\u70b9\u7684\u5ea6\u88ab\u5b9a\u4e49\u4e3a\u4e0e\u8fd9\u4e2a\u8282\u70b9\u5173\u8054\uff08incident\uff09\u7684\u8fb9\u7684\u6761\u6570</li> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe\uff0c\u8282\u70b9 $v$ \u7684\u5ea6\u7b49\u4e8e\u4e0e $v$ \u76f8\u90bb\u7684\u8282\u70b9\u6570</li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe\uff0c\u8282\u70b9 $v$\uff1a<ul> <li>\u5165\u5ea6\uff08in-degree\uff09\u662f\u4ee5 $v$ \u4e3a\u7ec8\u70b9\u7684\u8fb9\u7684\u6761\u6570</li> <li>\u51fa\u5ea6\uff08out-degree\uff09\u662f\u4ee5 $v$ \u4e3a\u8d77\u70b9\u7684\u8fb9\u7684\u6761\u6570</li> <li>\u6240\u6709\u8282\u70b9\u7684\u603b\u5165\u5ea6\u548c\u603b\u51fa\u5ea6\u76f8\u7b49\uff0c\u6709\u5411\u56fe\u7684\u603b\u5ea6\u6570\u662f\u603b\u5165\u5ea6\u548c\u603b\u51fa\u5ea6\u7684\u548c</li> </ul> </li> <li>\u6240\u6709\u8282\u70b9\u7684\u5ea6\u7684\u548c\u7b49\u4e8e\u56fe\u7684\u603b\u8fb9\u6570\u7684\u4e24\u500d\uff0c\u5373 $\\sum_{v\\in V}d(v)=2|E|$</li> </ul> </li> <li>\u56fe\u7684\u90bb\u63a5\u77e9\u9635\u8868\u793a<ul> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece $v_i$ \u5230 $v_j$ \u7684\u8fb9\uff0c\u5219 $a_{ij}=1$\uff0c\u5426\u5219 $a_{ij}=0$</li> <li>\u65e0\u5411\u56fe\u7684\u90bb\u63a5\u77e9\u9635\u662f\u5bf9\u79f0\u77e9\u9635\uff0c\u53ef\u4ee5\u53ea\u5b58\u50a8\u4e00\u534a\u77e9\u9635\u7684\u4fe1\u606f\uff1a<ul> <li>$a^{\\prime}[\\frac{n(n+1)}{2}]=\\lbrace a_{11},a_{21},a_{22},...,a_{n1},...,a_{nn} \\rbrace$</li> </ul> </li> <li>\u5bf9\u4e8e\u975e\u7a20\u5bc6\u56fe\u6765\u8bf4\u975e\u5e38\u6d6a\u8d39\u7a7a\u95f4</li> </ul> </li> <li>\u56fe\u7684\u90bb\u63a5\u8868\u8868\u793a<ul> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u5b58\u50a8\u4e00\u4e2a\u94fe\u8868\u6765\u8bb0\u5f55\u6240\u6709\u548c\u5b83\u76f8\u90bb\u7684\u8282\u70b9</li> <li>\u65e0\u5411\u56fe\u7684\u90bb\u63a5\u8868\u4f1a\u5c06\u6bcf\u4e2a\u8fb9\u91cd\u590d\u5b58\u50a8\u4e24\u6b21</li> <li>\u6709\u5411\u56fe\u7684\u90bb\u63a5\u8868\u65e0\u6cd5\u904d\u5386\u5165\u5ea6\uff0c\u89e3\u51b3\u601d\u8def\u6709\uff1a<ul> <li>\u989d\u5916\u5b58\u50a8\u4e00\u4e2a\u9006\u90bb\u63a5\u8868</li> <li>\u4f7f\u7528\u591a\u91cd\u94fe\u8868 multilist</li> </ul> </li> </ul> </li> <li>\u5e26\u6743\u56fe<ul> <li>\u90bb\u63a5\u77e9\u9635\uff1a$a_{ij}$ \u5b58\u50a8\u8fb9 $(v_i,v_j)$ \u7684\u6743\u503c</li> <li>\u90bb\u63a5\u8868\uff1a\u6bcf\u4e2a\u94fe\u8868\u8282\u70b9\u5b58\u50a8\u8fb9\u7684\u6743\u503c</li> </ul> </li> </ul>"},{"location":"courses/fds/note2/#_15","title":"\u62d3\u6251\u6392\u5e8f","text":"<ul> <li>AOV\uff08activity on vertex\uff09\u7f51\u7edc\u662f\u4e00\u79cd\u6709\u5411\u65e0\u73af\u56fe\uff0c\u8282\u70b9\u8868\u793a\u4e8b\u4ef6\uff0c\u8fb9\u8868\u793a\u4e8b\u4ef6\u7684\u5148\u540e\u5173\u7cfb</li> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u5219\u79f0 $u$ \u662f $v$ \u7684\u524d\u9a71\uff08predecessor\uff09\uff0c$v$ \u662f $u$ \u7684\u540e\u7ee7\uff08successor\uff09</li> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u8fb9 $\\lang u,v\\rang$\uff0c\u5219\u79f0 $u$ \u662f $v$ \u7684\u76f4\u63a5\uff08immediate\uff09\u524d\u9a71\uff0c$v$ \u662f $u$ \u7684\u76f4\u63a5\u540e\u7ee7</li> <li>AOV \u7f51\u7edc\u4e2d\u4e8b\u4ef6\u7684\u5148\u540e\u5173\u7cfb\u662f\u4e00\u79cd\u504f\u5e8f\u5173\u7cfb\uff0c\u5177\u6709\u4f20\u9012\u6027\u4e0e\u975e\u81ea\u53cd\u6027\uff08\u65e0\u73af\uff09</li> <li>AOV \u7f51\u7edc\u4e2d\u4e0d\u5e94\u8be5\u51fa\u73b0\u73af\uff0c\u5426\u5219\u7f51\u7edc\u8868\u793a\u7684\u5de5\u7a0b\u662f\u4e0d\u53ef\u5b9e\u73b0\u7684<ul> <li>\u68c0\u67e5 AOV \u7f51\u7edc\u662f\u5426\u5e26\u73af\u7684\u65b9\u5f0f\u662f\u6784\u9020\u62d3\u6251\u5e8f\u5217\uff0c\u89c2\u5bdf\u662f\u5426\u5305\u542b\u6240\u6709\u8282\u70b9</li> </ul> </li> <li>\u62d3\u6251\u6392\u5e8f\uff08topological order\uff09\u662f\u4e00\u4e2a\u56fe\u7684\u70b9\u96c6\u7684\u7ebf\u6027\u5e8f\u5217\uff0c\u6ee1\u8db3\uff1a<ul> <li>\u5bf9\u4e8e\u4efb\u610f\u4e00\u5bf9\u8282\u70b9 $u,v$\uff0c\u5982\u679c $u$ \u662f $v$ \u7684\u524d\u9a71\uff0c\u5e8f\u5217\u4e2d $u$ \u6392\u5728 $v$ \u7684\u524d\u9762</li> </ul> </li> <li>\u6ce8\u610f\uff0c\u5bf9\u4e8e\u540c\u4e00\u5f20\u56fe\uff0c\u62d3\u6251\u6392\u5e8f\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684</li> <li> <p>\u62d3\u6251\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(|V|+|E|)$</p> <pre><code>void topSort(Graph G)\n{\n    Queue Q = createQueue();\n    int cnt = 0; Vertex V, W;\n    for (each vertex V)\n        if (indegree[V] == 0) enqueue(V);\n    while (!isEmpty(Q)) {\n        V = dequeue(Q);\n        topNum[V] = ++cnt;\n        for (each W adjacent to V)\n            if (--indegree[W] == 0) enqueue(W, Q);\n    }\n    if (cnt != numVertex)\n        error(\"graph has a cycle\");\n    free(Q);\n}\n</code></pre> </li> </ul>"},{"location":"courses/fds/note2/#_16","title":"\u6700\u77ed\u8def","text":"<ul> <li>\u5355\u6e90\u6700\u77ed\u8def\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\u548c\u4e00\u4e2a\u6e90\u70b9\uff0c\u6c42\u4ece\u6e90\u70b9\u5230\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84</li> <li> <p>\u65e0\u6743\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\uff1aBFS \u5373\u53ef</p> \u961f\u5217\u4f18\u5316\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09 <pre><code>void unweighted(Table T)\n{   /* T is initialized with the source vertex S given */\n    Queue Q = createQueue(); Vertex V, W;\n    enqueue(S, Q);\n    while (!isEmpty(Q)) {\n        V = dequeue(Q);\n        for (each W adjacent to V) {\n            if (T[W].dist == INFINITY) {\n                T[W].dist = T[V].dist + 1;\n                T[W].path = V;\n                enqueue(W, Q);\n            }\n        }\n    }\n    free(Q);\n}\n</code></pre> <pre><code>void unweighted(Table T)\n{\n    int currDist = 0; Vertex V, W;\n    for (; currDist &lt; numVertex; currDist++) {\n        for (each vertex V) {\n            if (!T[V].known &amp;&amp; T[V].dist == currDist) {\n                T[V].known = true;\n                for (each W adjacent to V) {\n                    if (T[W].dist == INFINITY) {\n                        T[W].dist = currDist + 1;\n                        T[W].path = V;\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> </li> <li> <p>\u5e26\u6743\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\uff1aDijkstra \u7b97\u6cd5\uff08\u53ea\u9002\u7528\u4e8e\u975e\u8d1f\u6743\u56fe\uff09</p> <ol> <li>\u5c06\u8282\u70b9\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\uff1a\u5df2\u786e\u5b9a\u6700\u77ed\u8def\u7684\u70b9\u96c6 S \u548c\u672a\u786e\u5b9a\u6700\u77ed\u8def\u7684\u70b9\u96c6 T\uff1b\u8d77\u521d\u6240\u6709\u8282\u70b9\u90fd\u5c5e\u4e8e T</li> <li>\u521d\u59cb\u5316 dis[s] = 0\uff0c\u5176\u4ed6 dis = $\\infty$</li> <li>\u91cd\u590d\u4ee5\u4e0b\u64cd\u4f5c\uff0c\u76f4\u5230 T \u4e3a\u7a7a<ol> <li>\u4ece T \u4e2d\u9009\u53d6\u4e00\u4e2a\u6700\u77ed\u8def\u957f\u5ea6\u6700\u5c0f\u7684\u8282\u70b9\uff0c\u79fb\u5230 S \u4e2d</li> <li>\u5bf9\u521a\u521a\u52a0\u5165 S \u7684\u8282\u70b9\u7684\u6240\u6709\u51fa\u8fb9\u6267\u884c\u677e\u5f1b\uff08relax\uff09\u64cd\u4f5c\uff1a    \u5bf9\u4e8e\u8fb9 (u,v)\uff0c\u677e\u5f1b\u64cd\u4f5c\u4e3a dis[v] = min(dis[v], dis[u] + weight(u,v))</li> </ol> </li> </ol> </li> <li> <p>Dijkstra \u7b97\u6cd5\u5806\u4f18\u5316\u590d\u6742\u5ea6\u4e3a $\\Omicron(|E|\\log |V|)$</p> <ol> <li>\u7528\u6807\u8bb0\u8282\u70b9\u662f\u5426\u5df2\u8bbf\u95ee\u6765\u8868\u793a S\uff0c\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\u6765\u8868\u793a T</li> <li>\u521d\u59cb\u5316 dis[s] = 0\uff0c\u5176\u4ed6 dis = $\\infty$</li> <li>\u91cd\u590d\u4ee5\u4e0b\u64cd\u4f5c\uff0c\u76f4\u5230\u5806\u4e3a\u7a7a<ol> <li>\u4ece\u5806\u4e2d\u9009\u53d6 dis[u] \u6700\u5c0f\u7684\u4e14\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684 u\uff0c\u5c06 u \u6807\u8bb0\u4e3a\u5df2\u8bbf\u95ee</li> <li>\u626b\u63cf u \u7684\u6240\u6709\u51fa\u8fb9 (u,v)\uff0c\u6267\u884c\u677e\u5f1b\u64cd\u4f5c\uff1a    \u82e5 dis[v] &gt; dis[u] + weight(u,v)\uff0c\u5219\u7528\u540e\u8005\u66f4\u65b0 dis[v]\uff0c\u5e76\u5c06 {v, dis[v]} \u538b\u5165\u5806\u4e2d\uff08\u6216\u8005\u76f4\u63a5\u66f4\u65b0\u5806\u4e2d\u7684 v \u5e76\u5411\u4e0a\u8c03\u6574\uff09</li> </ol> </li> </ol> <pre><code>void Dijkstra(Table T)\n{\n    Heap H = createHeap(T); Vertex V, W;\n    while (!isEmpty(H)) {\n        V = deleteMin(H);\n        if (T[V].known) continue;\n        T[V].known = true;\n        for (each W adjacent to V) {\n            if (T[W].dist &gt; T[V].dist + weight(V, W)) {\n                T[W].dist = T[V].dist + weight(V, W);\n                T[W].path = V;\n                insert({W, T[W].dist}, H);\n                /* or: decrease(T[W].dist to T[V].dist + weight(V, W)) */\n            }\n        }\n    }\n    free(H);\n}\n</code></pre> </li> <li> <p>\u5e26\u8d1f\u6743\u8fb9\uff1aSPFA \u7b97\u6cd5\uff0c\u590d\u6742\u5ea6\u4e3a $\\Omicron(|E||V|)$</p> <ul> <li>\u4e0a\u6587\u65e0\u6743\u56fe\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\u7684\u961f\u5217\u4f18\u5316\u7b97\u6cd5\uff0c\u53ef\u4ee5\u770b\u4f5c SPFA \u7684\u7279\u6b8a\u60c5\u5f62</li> </ul> <pre><code>void negweighted(Table T)\n{   /* T is initialized with the source vertex S given */\n    Queue Q = createQueue(); Vertex V, W;\n    enqueue(S, Q);\n    while (!isEmpty(Q)) {\n        V = dequeue(Q);\n        for (each W adjacent to V) {\n            if (T[W].dist &gt; T[V].dist + weight(V, W)) {\n                T[W].dist = T[V].dist + weight(V, W);\n                T[W].path = V;\n                if (W is not already in Q) enqueue(W, Q);\n            }\n        }\n    }\n    free(Q);\n}\n</code></pre> </li> <li> <p>AOE\uff08activity on edge\uff09\u7f51\u7edc\u662f\u4e00\u4e2a\u5e26\u6743\u7684\u6709\u5411\u65e0\u73af\u56fe\uff0c\u8282\u70b9\u8868\u793a\u4e8b\u4ef6\uff0c\u5e26\u6743\u8fb9\u8868\u793a\u6d3b\u52a8\u6301\u7eed\u7684\u65f6\u95f4</p> </li> <li>AOE \u7f51\u7edc\u7528\u4e8e\u89e3\u51b3\u5de5\u7a0b\u6700\u77ed\u65f6\u95f4\u95ee\u9898<ul> <li>\u5b8c\u6210\u6574\u4e2a\u5de5\u7a0b\u7684\u6700\u77ed\u65f6\u95f4\u662f\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u6700\u957f\u6d3b\u52a8\u8def\u5f84\u957f\u5ea6</li> </ul> </li> <li>\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u4e8b\u4ef6\u5b58\u5728\u4e00\u4e2a\u6700\u65e9\u5b8c\u6210\u65f6\u95f4\uff08EC\uff09\u548c\u6700\u665a\u5b8c\u6210\u65f6\u95f4\uff08LC\uff09<ul> <li>EC \u4ece\u6e90\u70b9\u5f00\u59cb\u5411\u540e\u8ba1\u7b97\uff0c$EC[w]=max_{\\lang v,w\\rang \\in E}\\lbrace EC[v] + weight(v,w)\\rbrace$</li> <li>LC \u4ece\u6c47\u70b9\u5f00\u59cb\u5411\u524d\u8ba1\u7b97\uff0c$LC[w]=min_{\\lang v,w\\rang \\in E}\\lbrace LC[v] - weight(v,w)\\rbrace$</li> </ul> </li> <li>\u6bcf\u6761\u8fb9\u4ee3\u8868\u7684\u6d3b\u52a8\u5b58\u5728\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\uff08\u5373\u8fb9\u6743\uff09\u548c\u4e00\u4e2a\u677e\u5f1b\u65f6\u95f4\uff08slack time\uff09<ul> <li>\u8fb9 $\\lang v,w\\rang$ \u7684\u677e\u5f1b\u65f6\u95f4\u4e3a $LC[w]-EC[v]-weight(v,w)$</li> </ul> </li> <li>\u5173\u952e\u8def\u5f84\uff08critical path\uff09\u662f AOE \u7f51\u7edc\u4e2d\u7684\u6700\u957f\u6d3b\u52a8\u8def\u5f84<ul> <li>\u5173\u952e\u8def\u5f84\u4e2d\u6240\u6709\u8fb9\u7684\u677e\u5f1b\u65f6\u95f4\u90fd\u662f\u96f6</li> </ul> </li> <li>\u4efb\u610f\u4e24\u70b9\u95f4\u6700\u77ed\u8def<ul> <li>\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6e90\u70b9\uff0c\u5206\u522b\u8ba1\u7b97\u5355\u6e90\u6700\u77ed\u8def\uff0c\u9002\u5408\u4e8e\u7a00\u758f\u56fe</li> <li>Floyd \u7b97\u6cd5\uff0c\u4e09\u4e2a for \u5faa\u73af\u5373\u53ef\u5b9e\u73b0\uff0c\u9002\u5408\u4e8e\u4efb\u4f55\u56fe\uff08\u65e0\u8d1f\u73af\uff09<ul> <li>\u5b9a\u4e49 f[k][v][w] \u8868\u793a\u5728\u53ea\u5141\u8bb8\u7ecf\u8fc7\u8282\u70b9 1~k \u7684\u9650\u5236\u4e0b\uff0c\u4ece\u8282\u70b9 v \u5230 w \u7684\u6700\u77ed\u8def</li> <li>f[k][v][w] = min(f[k-1][v][w], f[k][v][k] + f[k][k][w])</li> </ul> </li> </ul> </li> </ul>"},{"location":"courses/fds/note2/#_17","title":"\u7f51\u7edc\u6d41","text":"<ul> <li>\u7f51\u7edc\u6d41\u5b9a\u4e49\u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e0a\uff1a<ul> <li>\u6bcf\u6761\u8fb9\u90fd\u5b58\u5728\u4e00\u4e2a\u88ab\u79f0\u4e3a\u5bb9\u91cf\uff08capacity\uff09\u7684\u6743\u503c\uff0c\u5f53 $(u,v)\\notin E$ \u65f6\uff0c\u5b9a\u4e49 $c(u,v)=0$</li> <li>\u7f51\u7edc\u4e2d\u5b58\u5728\u552f\u4e00\u7684\u6e90\u70b9\uff08source\uff09\u548c\u552f\u4e00\u7684\u6c47\u70b9\uff08sink\uff09</li> </ul> </li> <li> <p>\u6700\u5927\u6d41\u95ee\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6c42\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u6700\u5927\u6d41\u91cf</p> <ol> <li> <p>\u5efa\u7acb\u6b8b\u5dee\u56fe\uff08residual graph\uff09\uff0c\u8bbe $f$ \u662f\u56fe $G=(V,E)$ \u7684\u4e00\u4e2a\u6d41\uff0c\u5219\u6b8b\u5dee\u56fe\u7684\u8fb9\u6743\u4e3a\uff1a</p> <p>$$ c_f(u,v)=\\begin{cases} c(u,v)-f(u,v)\\;\\;&amp;(u,v)\\in E \\cr f(v,u)&amp;(v,u)\\in E \\cr 0&amp;\\text{else} \\end{cases} $$</p> </li> <li> <p>\u91cd\u590d\u8fdb\u884c\u5982\u4e0b\u7684\u589e\u5e7f\u64cd\u4f5c\uff0c\u4e0d\u65ad\u53e0\u52a0\u7f51\u7edc\u7684\u6d41\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u4e3a\u6b62\uff1a</p> <ul> <li>\u5bfb\u627e\u6b8b\u5dee\u56fe\u4e2d\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u4e00\u6761\u8def\u5f84\uff0c\u79f0\u4e3a\u589e\u5e7f\u8def\uff08augmenting path\uff09</li> <li>\u589e\u5e7f\u8def\u7684\u6d41\u91cf\u4e3a\u589e\u5e7f\u8def\u4e0a\u7684\u6700\u5c0f\u8fb9\u6743\uff0c\u521b\u5efa\u8fd9\u6837\u4e00\u6761\u6d41\uff0c\u5e76\u66f4\u65b0\u6b8b\u5dee\u56fe</li> </ul> </li> </ol> </li> <li> <p>\u5bfb\u627e\u589e\u5e7f\u8def</p> <ul> <li>BFS\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(|V||E|^ 2)$</li> <li>Dinic \u7b97\u6cd5\uff0c\u5f53\u524d\u5f27\u4f18\u5316\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(|V|^ 2|E|)$</li> </ul> </li> <li>\u6700\u5c0f\u8d39\u7528\u6d41\uff1a\u8d39\u7528\u6307\u6d41\u7ecf\u8fc7\u8fb9\u7684\u4ee3\u4ef7\uff0c\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u6700\u5927\u6d41\uff0c\u6c42\u5176\u4e2d\u603b\u8d39\u7528\u6700\u5c0f\u7684\u4e00\u6761\u6d41</li> </ul>"},{"location":"courses/fds/note2/#_18","title":"\u6700\u5c0f\u751f\u6210\u6811","text":"<ul> <li>\u751f\u6210\u6811\uff08spanning tree\uff09\u662f\u8fde\u901a\u65e0\u5411\u56fe\u7684\u4e00\u4e2a\u751f\u6210\u5b50\u56fe\uff0c\u540c\u65f6\u6ee1\u8db3\u6811\u7684\u7279\u5f81<ul> <li>\u751f\u6210\u5b50\u56fe\u662f\u56fe\u7684\u4e00\u4e2a\u5b50\u56fe\uff0c\u5305\u542b\u539f\u56fe\u7684\u6240\u6709\u8282\u70b9</li> <li>\u751f\u6210\u6811\u76f8\u5f53\u4e8e\u5728\u539f\u56fe\u7684\u8fb9\u96c6\u4e2d\u9009\u62e9 n-1 \u6761\uff0c\u5c06\u6240\u6709\u8282\u70b9\u8fde\u901a</li> </ul> </li> <li>\u6700\u5c0f\u751f\u6210\u6811\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u8fde\u901a\u65e0\u5411\u56fe\uff0c\u627e\u4e00\u4e2a\u8fb9\u6743\u548c\u6700\u5c0f\u7684\u751f\u6210\u6811</li> <li>\u8fde\u901a\u56fe\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811</li> <li>\u5411\u751f\u6210\u6811\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u8fb9\uff0c\u5219\u4e00\u5b9a\u4f1a\u5b58\u5728\u4e00\u4e2a\u73af</li> <li>Prim \u7b97\u6cd5<ul> <li>\u4ece\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u4e0d\u65ad\u5411 T \u4e2d\u6dfb\u52a0\u8282\u70b9\uff0c\u76f4\u5230\u5305\u542b\u6240\u6709\u8282\u70b9</li> <li>\u6dfb\u52a0\u8282\u70b9\u65f6\uff0c\u603b\u662f\u9009\u62e9\u4e0e T \u4e2d\u7684\u67d0\u4e2a\u8282\u70b9\u76f8\u90bb\u4e14\u52a0\u5165 T \u540e\u4e0d\u4f1a\u5f62\u6210\u73af\u7684\u6700\u5c0f\u6743\u8fb9\u5bf9\u5e94\u7684\u8282\u70b9</li> <li>\u5bfb\u627e\u6700\u5c0f\u8fb9\u6743\u8282\u70b9\uff0c\u53ef\u4ee5\u8fdb\u884c\u5806\u4f18\u5316\uff08\u7c7b\u4f3c\u4e8e Dijkstra \u7b97\u6cd5\uff09</li> </ul> </li> <li>Kruskal \u7b97\u6cd5<ul> <li>\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u5411 T \u4e2d\u6dfb\u52a0\u8fb9\uff0c\u76f4\u5230\u52a0\u6ee1 n-1 \u6761\u8fb9</li> <li>\u6dfb\u52a0\u8fb9\u65f6\uff0c\u603b\u662f\u9009\u62e9\u52a0\u5165 T \u540e\u4e0d\u4f1a\u5f62\u6210\u73af\u7684\u6700\u5c0f\u6743\u8fb9</li> <li>\u53ef\u4ee5\u901a\u8fc7\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(|E|\\log |E|)$<ul> <li>\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u904d\u5386\u6240\u6709\u8fb9\uff0c\u82e5\u8fb9\u4e24\u7aef\u7684\u8282\u70b9\u4e0d\u5728\u540c\u4e00\u96c6\u5408\uff0c\u5219\u5c06\u5b83\u4eec\u5408\u5e76\uff0c\u5e76\u5c06\u8fb9\u52a0\u5165 T</li> </ul> </li> </ul> </li> <li>Prim \u7b97\u6cd5\u9002\u5408\u7a20\u5bc6\u56fe\uff08dense graph\uff09\uff0cKruskal \u7b97\u6cd5\u9002\u5408\u7a00\u758f\u56fe\uff08sparse graph\uff09</li> </ul>"},{"location":"courses/fds/note2/#_19","title":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":"<ul> <li>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u904d\u5386\u6216\u641c\u7d22\u6811\u6216\u56fe\u7684\u7b97\u6cd5</li> <li> <p>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u662f\u5148\u5e8f\u904d\u5386\u7684\u4e00\u79cd\u63a8\u5e7f</p> <pre><code>void dfs(Vertex V) {\n    visited[V] = true;\n    for (each W adjacent to V)\n        if (!visited[W]) dfs(W);\n}\n</code></pre> </li> <li> <p>\u53cc\u8fde\u901a\u6027\uff08biconnectivity\uff09</p> <ul> <li>\u5982\u679c\u5220\u53bb\u4e00\u4e2a\u70b9\uff0c\u5269\u4e0b\u7684\u56fe\u53ef\u4ee5\u5206\u6210\u81f3\u5c11\u4e24\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u5219\u79f0\u8fd9\u4e2a\u70b9\u662f\u5272\u70b9\uff08articulation point\uff09</li> <li>\u5982\u679c\u4e00\u4e2a\u56fe\u662f\u8fde\u901a\u7684\uff0c\u4e14\u4e0d\u5b58\u5728\u5272\u70b9\uff0c\u5219\u79f0\u8fd9\u4e2a\u56fe\u662f\u53cc\u8fde\u901a\u7684</li> <li>\u53cc\u8fde\u901a\u5206\u91cf\uff08biconnected component\uff09\u662f\u6781\u5927\u7684\u53cc\u8fde\u901a\u5b50\u56fe</li> </ul> </li> <li>\u5bfb\u627e\u8fde\u901a\u65e0\u5411\u56fe\u7684\u5272\u70b9\uff1aTarjan \u7b97\u6cd5<ul> <li>\u9996\u5148\u5bf9\u539f\u56fe\u8fdb\u884c DFS\uff0c\u5f97\u5230\u4e00\u4e2a\u751f\u6210\u6811<ul> <li>dfn[x] \u8868\u793a x \u5728 DFS \u4e2d\u662f\u7b2c\u51e0\u4e2a\u88ab\u8bbf\u95ee\u7684\uff0c\u4ece 0 \u5f00\u59cb</li> </ul> </li> <li>\u8ffd\u6eaf\u503c low[x]<ul> <li>\u521d\u59cb low[x] = dfn[x]</li> <li>\u5982\u679c\u4ece x \u5230 y \u7684\u8fb9\u5728\u751f\u6210\u6811\u4e0a\uff0c\u5219 low[x] = min(low[x], low[y])</li> <li>\u5982\u679c\u4ece x \u5230 y \u7684\u8fb9\u4e0d\u5728\u751f\u6210\u6811\u4e0a\uff08\u56de\u8fb9\uff09\uff0c\u5219 low[x] = min(low[x], dfn[y])</li> </ul> </li> <li>\u5224\u65ad\u5272\u70b9<ul> <li>\u5982\u679c u \u662f\u751f\u6210\u6811\u7684\u6839\uff0c\u5219 u \u662f\u5272\u70b9\u5f53\u4e14\u4ec5\u5f53 u \u6709\u81f3\u5c11\u4e24\u4e2a\u513f\u5b50</li> <li>\u5982\u679c u \u4e0d\u662f\u751f\u6210\u6811\u7684\u6839\uff0c\u5219 u \u662f\u5272\u70b9\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u513f\u5b50 v\uff0c\u6ee1\u8db3 dfn[u] &lt;= low[v]</li> </ul> </li> </ul> </li> <li>\u6b27\u62c9\u56de\u8def\uff08Euler circuit\uff09\u662f\u901a\u8fc7\u56fe\u4e2d\u6bcf\u6761\u8fb9\u6070\u597d\u4e00\u6b21\u7684\u73af</li> <li>\u6b27\u62c9\u901a\u8def\uff08Euler tour\uff09\u662f\u901a\u8fc7\u56fe\u4e2d\u6bcf\u6761\u8fb9\u6070\u597d\u4e00\u6b21\u7684\u8def\u5f84</li> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe<ul> <li>\u65e0\u5411\u56fe\u6709\u6b27\u62c9\u56de\u8def\u5f53\u4e14\u4ec5\u5f53\u56fe\u662f\u8fde\u901a\u7684\u4e14\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570</li> <li>\u65e0\u5411\u56fe\u6709\u6b27\u62c9\u901a\u8def\u5f53\u4e14\u4ec5\u5f53\u56fe\u662f\u8fde\u901a\u7684\u4e14\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u8282\u70b9\u7684\u5ea6\u662f\u5947\u6570</li> </ul> </li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe<ul> <li>\u6709\u5411\u56fe\u6709\u6b27\u62c9\u56de\u8def\u5f53\u4e14\u4ec5\u5f53\u56fe\u662f\u5f31\u8fde\u901a\u7684\u4e14\u6bcf\u4e2a\u8282\u70b9\u51fa\u5ea6\u7b49\u4e8e\u5165\u5ea6</li> <li>\u6709\u5411\u56fe\u6709\u6b27\u62c9\u901a\u8def\u5f53\u4e14\u4ec5\u5f53\u56fe\u662f\u5f31\u8fde\u901a\u7684\u4e14\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u51fa\u5ea6\u6bd4\u5165\u5ea6\u5927 1\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u5165\u5ea6\u6bd4\u51fa\u5ea6\u5927 1\uff0c\u5176\u4f59\u8282\u70b9\u51fa\u5ea6\u7b49\u4e8e\u5165\u5ea6</li> </ul> </li> <li> <p>\u5bfb\u627e\u6b27\u62c9\u56de\u8def\u6216\u901a\u8def\uff1aDFS</p> <ul> <li>\u4ece\u67d0\u4e2a\u8282\u70b9\u51fa\u53d1\uff0c\u8fdb\u884c DFS</li> <li>\u6bcf\u6b21\u6cbf\u7740\u67d0\u6761\u8fb9\u4ece\u4e00\u4e2a\u8282\u70b9\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u5220\u9664\u8fd9\u6761\u8fb9</li> <li>\u5982\u679c\u67d0\u4e2a\u8282\u70b9\u6ca1\u6709\u53ef\u8d70\u7684\u8fb9\uff0c\u5219\u5c06\u8be5\u8282\u70b9\u5165\u6808\uff0c\u5e76\u8fd4\u56de</li> <li>DFS \u7ed3\u675f\u540e\uff0c\u6808\u4e2d\u7684\u8282\u70b9\u5e8f\u5217\u5373\u6b27\u62c9\u56de\u8def\u6216\u901a\u8def</li> </ul> <pre><code>void dfs(Vertex V) {\n    for (each W adjacent to V) {\n        if (!visited(V, W)) {\n            visited(V, W) = true;\n            dfs(W);\n        }\n    }\n    push(V);\n}\n</code></pre> </li> <li> <p>\u54c8\u5bc6\u987f\u56de\u8def\uff08Hamilton circuit\uff09\u662f\u901a\u8fc7\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u6070\u597d\u4e00\u6b21\u7684\u73af</p> </li> <li>\u54c8\u5bc6\u987f\u901a\u8def\uff08Hamilton tour\uff09\u662f\u901a\u8fc7\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u6070\u597d\u4e00\u6b21\u7684\u8def\u5f84</li> </ul>"},{"location":"courses/fds/note3/","title":"\u6392\u5e8f\u4e0e\u54c8\u5e0c","text":"<p> \u7ea6 3371 \u4e2a\u5b57  183 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 16 \u5206\u949f</p>"},{"location":"courses/fds/note3/#_2","title":"\u6392\u5e8f","text":""},{"location":"courses/fds/note3/#_3","title":"\u63d2\u5165\u6392\u5e8f","text":"<ul> <li>\u6700\u574f\u60c5\u51b5\uff1a\u5f85\u6392\u5e8f\u5217\u662f\u9006\u5e8f\u7684\uff0c\u590d\u6742\u5ea6 $\\Omicron(N^ 2)$</li> <li>\u6700\u597d\u60c5\u51b5\uff1a\u5f85\u6392\u5e8f\u5217\u662f\u6709\u5e8f\u7684\uff0c\u590d\u6742\u5ea6 $\\Omicron(N)$</li> </ul> <pre><code>void insertionSort(ElementType arr[], int n)\n{\n    for (int i = 1; i &lt; n; i++) {\n        ElementType tmp = arr[i];\n        int j = i;\n        for (; j &gt; 0 &amp;&amp; arr[j - 1] &gt; tmp; j--)\n            arr[j] = arr[j-1];\n        arr[j] = tmp;\n    }\n}\n</code></pre> <ul> <li>\u9006\u5e8f\u5bf9\uff08inversion\uff09\u662f\u5e8f\u5217\u4e2d\u7684\u6709\u5e8f\u6570\u5bf9 (i,j)\uff0c\u6ee1\u8db3 i &lt; j \u4e14 arr[i] &gt; arr[j]</li> <li>\u5bf9\u4e8e $N$ \u4e2a\u5143\u7d20\u7684\u968f\u673a\u7684\u5f85\u6392\u5e8f\u5217\uff0c\u5e73\u5747\u9006\u5e8f\u5bf9\u6570\u4e3a $\\frac{N(N-1)}{4}$</li> <li>\u57fa\u4e8e\u4ea4\u6362\u76f8\u90bb\u5143\u7d20\u7684\u6392\u5e8f\u7b97\u6cd5\uff08\u4f8b\u5982\u5192\u6ce1\u3001\u63d2\u5165\uff09\uff0c\u5e73\u5747\u60c5\u51b5\u590d\u6742\u5ea6\u4e0b\u754c\u4e3a $\\Omega(N^ 2)$</li> </ul>"},{"location":"courses/fds/note3/#_4","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<ul> <li>\u5e0c\u5c14\u6392\u5e8f\uff08Shell sort\uff09\u662f\u63d2\u5165\u6392\u5e8f\u7684\u4e00\u79cd\u6539\u8fdb\u7248\u672c<ul> <li>\u5e0c\u5c14\u6392\u5e8f\u5bf9\u4e0d\u76f8\u90bb\u7684\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\u548c\u79fb\u52a8</li> </ul> </li> <li>\u5e0c\u5c14\u6392\u5e8f\u57fa\u4e8e\u4e00\u4e2a\u589e\u91cf\u5e8f\u5217 $h_1&lt;h_2&lt;\\cdots &lt;h_t$\uff0c\u5176\u4e2d $h_1 = 1$</li> <li>\u5728\u539f\u59cb\u5e8f\u5217\u4e2d\u9694 $h_k-1$ \u4e2a\u5143\u7d20\u53d6\u5b50\u5e8f\u5217\uff0c\u8fdb\u884c\u63d2\u5165\u6392\u5e8f\uff0c\u79f0\u4e3a $h_k$-sort</li> <li>\u9010\u6b21\u8fdb\u884c $h_t$-sort\uff0c$h_{t-1}$-sort\uff0c...\uff0c$h_1$-sort\uff0c\u6392\u5e8f\u5b8c\u6210<ul> <li>$h_k$-sorted \u7684\u5e8f\u5217\u5728 $h_{k-1}$-sort \u540e\u4ecd\u4fdd\u6301 $h_k$-sorted \u7684\u6027\u8d28</li> </ul> </li> <li>\u5e0c\u5c14\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u548c\u589e\u91cf\u5e8f\u5217\u7684\u9009\u53d6\u6709\u5173</li> <li> <p>\u5e0c\u5c14\u589e\u91cf\u5e8f\u5217\uff1a$h_t=\\lfloor N/2 \\rfloor$\uff0c$h_k=\\lfloor h_{k+1}/2 \\rfloor$</p> <ul> <li>\u6700\u574f\u60c5\u51b5\uff1a\u53ea\u5728 $h_1$-sort \u65f6\u8fdb\u884c\u4e86\u6392\u5e8f\uff0c\u590d\u6742\u5ea6 $\\Omicron(N^ 2)$</li> </ul> <pre><code>void shellSort(ElementType arr[], int n)\n{\n    for (int inc = n / 2; inc &gt; 0; inc /= 2) {\n        for (int i = inc; i &lt; n; i++) {\n            ElementType tmp = arr[i];\n            int j = i;\n            for (; j &gt;= inc; j -= inc) {\n                if (arr[j - inc] &gt; tmp)\n                    arr[j] = arr[j - inc];\n                else\n                    break;\n            }\n            a[j] = tmp;\n        }\n    }\n}\n</code></pre> </li> <li> <p>Hibbard \u589e\u91cf\u5e8f\u5217\uff1a$h_k=2^ k-1$</p> <ul> <li>\u6700\u574f\u60c5\u51b5\u590d\u6742\u5ea6\u4e3a $\\Omicron(N^ {3/2})$</li> <li>\u5e73\u5747\u60c5\u51b5\u590d\u6742\u5ea6\u4e3a $\\Omicron(N^ {5/4})$</li> </ul> </li> <li>Sedgewick \u589e\u91cf\u5e8f\u5217\uff1a1,5,19,41,109,...<ul> <li>\u6700\u574f\u60c5\u51b5\u590d\u6742\u5ea6\u4e3a $\\Omicron(N^ {4/3})$</li> <li>\u5e73\u5747\u60c5\u51b5\u590d\u6742\u5ea6\u4e3a $\\Omicron(N^ {7/6})$</li> </ul> </li> <li>\u5e0c\u5c14\u6392\u5e8f\u662f\u4e00\u79cd\u7b80\u5355\u7684\u6392\u5e8f\u7b97\u6cd5\uff08\u5373\u4f7f\u5176\u5206\u6790\u76f8\u5f53\u590d\u6742\uff09\uff0c\u9002\u5408\u4e8e\u4e2d\u7b49\u89c4\u6a21\uff08\u6570\u4e07\uff09\u6570\u636e\u7684\u6392\u5e8f</li> </ul>"},{"location":"courses/fds/note3/#_5","title":"\u5806\u6392\u5e8f","text":"<ul> <li>\u7b97\u6cd5\u4e00\uff1a<ul> <li>\u5c06\u5f85\u6392\u6570\u636e\u4ee5\u7ebf\u6027\u65f6\u95f4\u5efa\u5c0f\u6839\u5806\uff0c\u7136\u540e\u4f9d\u6b21\u4ece\u5806\u9876\u53d6\u51fa\u6700\u5c0f\u5143\u7d20</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6 $\\Omicron(N\\log N)$</li> <li>\u4f46\u662f\u7a7a\u95f4\u6d88\u8017\u7ffb\u500d\u4e86\uff08\u4ece\u5806\u4e2d\u53d6\u6700\u5c0f\u5143\u7d20\u540e\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u5b58\u653e\u6392\u597d\u5e8f\u7684\u5e8f\u5217\uff09</li> </ul> </li> <li> <p>\u7b97\u6cd5\u4e8c\uff1a</p> <ul> <li>\u5c06\u5f85\u6392\u6570\u636e\u4ee5\u7ebf\u6027\u65f6\u95f4\u5efa\u5927\u6839\u5806\uff0c\u5e76\u91cd\u590d\u5982\u4e0b\u64cd\u4f5c\uff1a<ul> <li>\u5c06\u5806\u9876\u5143\u7d20\u4e0e\u5806\u5c3e\u5143\u7d20\u4ea4\u6362\uff08\u76f8\u5f53\u4e8e\u5220\u9664\u4e86\u6700\u5927\u503c\uff09\uff0c\u5e76\u8fdb\u884c\u5411\u4e0b\u8c03\u6574</li> <li>\u5c06\u5806\u9876\u5143\u7d20\u4e0e\u5806\u5c3e\u5143\u7d20\u4ea4\u6362\uff08\u76f8\u5f53\u4e8e\u5220\u9664\u4e86\u6b21\u5927\u503c\uff09\uff0c\u5e76\u8fdb\u884c\u5411\u4e0b\u8c03\u6574</li> <li>\u5982\u6b64\u5faa\u73af N-1 \u6b21\u540e\uff0c\u5f97\u5230\u4e00\u4e2a\u4ece\u5c0f\u5230\u5927\u7684\u6709\u5e8f\u5e8f\u5217</li> </ul> </li> </ul> <pre><code>void heapSort(ElementType arr[], int n)\n{   /* arr[0] is a sential */\n    for (int i = n / 2; i &gt;= 1; i--)\n        percolateDown(arr, n, i);\n    for (int i = n; i &gt; 1; i--) {\n        swap(&amp;arr[1], &amp;arr[i]);\n        percolateDown(arr, i - 1, 1);\n    }\n}\n</code></pre> <ul> <li>\u5bf9\u4e8e\u76f8\u5f02\u5143\u7d20\u7684\u968f\u673a\u5e8f\u5217\uff0c\u5806\u6392\u5e8f\u7684\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\u4e3a $2N\\log N-\\Omicron(N\\log \\log N)$</li> <li>\u7b97\u6cd5\u4e8c\u5b9e\u73b0\u7684\u5806\u6392\u5e8f\u662f\u539f\u5730\u6392\u5e8f\uff0c\u6ca1\u6709\u6d88\u8017\u989d\u5916\u7684\u7a7a\u95f4</li> </ul> </li> <li> <p>\u5806\u6392\u5e8f\u7684\u5e73\u5747\u3001\u6700\u597d\u3001\u6700\u574f\u590d\u6742\u5ea6\u5747\u4e3a $\\Omicron(N\\log N)$</p> </li> <li>\u5806\u6392\u5e8f\u7684\u5e73\u5747\u590d\u6742\u5ea6\u662f\u4f18\u79c0\u7684\uff0c\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u65f6\u5f80\u5f80\u4e0d\u5982\u57fa\u4e8e Sedgewick \u589e\u91cf\u5e8f\u5217\u7684\u5e0c\u5c14\u6392\u5e8f</li> </ul>"},{"location":"courses/fds/note3/#_6","title":"\u5f52\u5e76\u6392\u5e8f","text":"<ul> <li>\u5f52\u5e76\u6392\u5e8f\u57fa\u4e8e\u5206\u6cbb\u601d\u60f3\uff0c\u5c06\u6570\u636e\u5206\u6bb5\u6392\u5e8f\u540e\u518d\u4f9d\u6b21\u5408\u5e76</li> <li>\u5173\u952e\u7684\u64cd\u4f5c\u662f\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5e8f\u5217\u6210\u4e3a\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217\uff0c\u53ef\u4ee5\u5728 $\\Omicron(N)$ \u65f6\u95f4\u5185\u5b8c\u6210</li> <li>\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u6765\u8f85\u52a9\u5408\u5e76\uff0c\u901a\u5e38\u4f7f\u7528\u4e0e\u539f\u6570\u7ec4\u7b49\u957f\u7684\u8f85\u52a9\u6570\u7ec4</li> <li>$T(N)=2T(\\frac{N}{2})+\\Omicron(N)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(N\\log N)$</li> <li> <p>\u9012\u5f52\u5b9e\u73b0</p> <pre><code>void mergeSort(ElementType arr[], int n) {\n    ElementType *tmp = malloc(sizeof(ElementType) * n);\n    if (tmp != NULL) {\n        mergeSortHelper(arr, tmp, 0, n - 1);\n        free(tmp);\n    } else {  /* need O(N) extra space */\n        printf(\"no space for tmp array\");\n    }\n}\n\nvoid mergeSortHelper(ElementType arr[], ElementType tmp[], int left, int right) {\n    if (left &lt; right) {\n        int center = (left + right) / 2;\n        mergeSortHelper(arr, tmp, left, center);\n        mergeSortHelper(arr, tmp, center + 1, right);\n        merge(arr, tmp, left, center + 1, right);\n    }\n}\n\nvoid merge(ElementType arr[], ElementType tmp[], int leftPos, int rightPos, int rightEnd) {\n    int leftEnd = rightPos - 1;\n    int tmpPos = leftPos;\n    int numElements = rightEnd - leftPos + 1;\n    while (leftPos &lt;= leftEnd &amp;&amp; rightPos &lt;= rightEnd) {\n        if (arr[leftPos] &lt;= arr[rightPos])\n            tmp[tmpPos++] = arr[leftPos++];\n        else\n            tmp[tmpPos++] = arr[rightPos++];\n    }\n    while (leftPos &lt;= leftEnd)\n        tmp[tmpPos++] = arr[leftPos++];\n    while (rightPos &lt;= rightEnd)\n        tmp[tmpPos++] = arr[rightPos++];\n    for (int i = 0; i &lt; numElements; i++, rightEnd--)\n        arr[rightEnd] = tmp[rightEnd];\n}\n</code></pre> </li> <li> <p>\u4e5f\u53ef\u4ee5\u8fed\u4ee3\u5b9e\u73b0\uff0c\u4ece\u957f\u5ea6 1 \u5f00\u59cb\u4e0d\u65ad\u500d\u589e\u5206\u5272\u957f\u5ea6\uff0c\u5e76\u4f9d\u6b21\u5408\u5e76</p> </li> <li>\u5f52\u5e76\u6392\u5e8f\u9700\u8981\u989d\u5916\u7684\u8f85\u52a9\u7a7a\u95f4\u5e76\u591a\u6b21\u590d\u5236\u6574\u4e2a\u6570\u7ec4\uff0c\u6240\u4ee5\u901a\u5e38\u4e0d\u7528\u4e8e\u5185\u6392\u5e8f\uff08internal sort\uff09\uff0c\u4f46\u5e38\u7528\u4e8e\u5916\u6392\u5e8f\uff08external sort\uff09</li> </ul>"},{"location":"courses/fds/note3/#_7","title":"\u5feb\u901f\u6392\u5e8f","text":"<ul> <li>\u5feb\u901f\u6392\u5e8f\u662f\u5df2\u77e5\u7684\u5b9e\u9645\u8fd0\u884c\u6700\u5feb\u7684\u6392\u5e8f\u7b97\u6cd5</li> <li>\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\uff08pivot\uff09\uff0c\u5c06\u5f85\u6392\u5e8f\u5217\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5de6\u8fb9\u7684\u5143\u7d20\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u57fa\u51c6\u5143\u7d20\uff0c\u53f3\u8fb9\u7684\u5143\u7d20\u90fd\u5927\u4e8e\u7b49\u4e8e\u57fa\u51c6\u5143\u7d20\uff0c\u7136\u540e\u9012\u5f52\u5730\u5bf9\u5de6\u53f3\u4e24\u90e8\u5206\u7ee7\u7eed\u4f7f\u7528\u5feb\u901f\u6392\u5e8f<ul> <li>\u6ce8\u610f\uff0c\u5de6\u53f3\u4e24\u90e8\u5206\u5206\u522b\u8fdb\u884c\u6392\u5e8f\u4e4b\u540e\uff0c\u4e0d\u9700\u8981\u5408\u5e76\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6b64\u65f6\u5e8f\u5217\u5df2\u7ecf\u5b8c\u5168\u6709\u5e8f</li> </ul> </li> <li>\u9009\u53d6 pivot<ul> <li>\u9519\u8bef\u65b9\u6cd5\uff1apivot = arr[0]\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u6709\u5e8f\u7684\u5e8f\u5217\u4ecd\u4f1a\u6d88\u8017 $\\Omicron(N^ 2)$ \u7684\u65f6\u95f4</li> <li>\u5b89\u5168\u65b9\u6cd5\uff1apivot = random element in arr\uff0c\u7136\u800c\u968f\u673a\u6570\u7684\u751f\u6210\u4e5f\u6709\u5f00\u9500</li> <li>\u4e09\u6570\u4e2d\u503c\uff1apivot = (left + center + right) / 3</li> </ul> </li> <li> <p>\u9012\u5f52\u5b9e\u73b0</p> <pre><code>void quickSort(ElemenType arr[], int n) {\n    quickSortHelper(arr, 0, n - 1);\n}\n\nvoid quickSortHelper(ElementType arr[], int left, int right) {\n    ElementType pivot = median3(arr, left, right);\n    int i = left, j = right - 1;\n    for (;;) {\n        while (arr[++i] &lt; pivot) continue;\n        while (arr[--j] &gt; pivot) continue;\n        if (i &lt; j)\n            swap(&amp;arr[i], &amp;arr[j]);\n        else\n            break;\n    }\n    swap(&amp;arr[i], &amp;arr[right - 1]);\n    quickSortHelper(arr, left, i - 1);\n    quickSortHelper(arr, i + 1, right);\n}\n\nElementType median3(ElementType arr[], int left, int right) {\n    int center = (left + right) / 2;\n    if (arr[left] &gt; arr[center])  swap(&amp;arr[left], &amp;arr[center]);\n    if (arr[left] &gt; arr[right])   swap(&amp;arr[left], &amp;arr[right]);\n    if (arr[center] &gt; arr[right]) swap(&amp;arr[center], &amp;arr[right]);\n    swap(&amp;arr[center], &amp;arr[right - 1]);    /* hide pivot */\n    /* only need to sort arr[left + 1] ... arr[right - 2] */\n    return arr[right - 1];\n}\n</code></pre> </li> <li> <p>\u6700\u574f\u60c5\u51b5\uff1a\u6bcf\u6b21\u9009\u53d6\u7684 pivot \u603b\u662f\u5e8f\u5217\u7684\u6700\u503c\uff0c\u590d\u6742\u5ea6 $\\Omicron(N^ 2)$</p> </li> <li>\u6700\u597d\u60c5\u51b5\uff1a\u6bcf\u6b21\u9009\u53d6\u7684 pivot \u603b\u662f\u5e8f\u5217\u7684\u4e2d\u4f4d\u6570\uff0c\u590d\u6742\u5ea6 $\\Omicron(N\\log N)$</li> <li>\u5e73\u5747\u60c5\u51b5\uff1a\u6bcf\u6b21\u9009\u53d6\u7684 pivot \u662f\u968f\u673a\u7684\uff0c\u590d\u6742\u5ea6 $\\Omicron(N\\log N)$</li> <li>\u5bf9\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\uff08$N\\leq 20$\uff09\uff0c\u5feb\u6392\u6162\u4e8e\u63d2\u5165\u6392\u5e8f<ul> <li>\u53ef\u4ee5\u5728\u5feb\u6392\u9012\u5f52\u5230 $N$ \u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\u6539\u7528\u63d2\u5165\u6392\u5e8f</li> </ul> </li> <li>\u7ebf\u6027\u627e\u7b2c k \u5927\u7684\u6570<ul> <li>\u5229\u7528\u5feb\u6392\uff0c\u6bcf\u6b21\u7528 pivot \u5212\u5206\u6570\u636e\u7684\u65f6\u5019\uff0c\u6839\u636e\u5de6\u53f3\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5224\u65ad\u7b2c k \u5927\u7684\u6570\u662f\u5728\u54ea\u4e00\u8fb9\uff0c\u4ece\u800c\u53ea\u5bf9\u5de6\u8fb9\u6216\u53f3\u8fb9\u7ee7\u7eed\u9012\u5f52\u5feb\u6392</li> <li>\u5982\u679c\u6bcf\u6b21\u9009\u53d6\u7684 pivot \u662f\u968f\u673a\u7684\uff0c\u590d\u6742\u5ea6\u4e3a $\\Omicron(N)$</li> </ul> </li> <li>\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u4e0b\u754c\u4e3a $\\Omega(N\\log N)$<ul> <li>\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\uff1a\u5192\u6ce1\u3001\u9009\u62e9\u3001\u63d2\u5165\u3001\u5e0c\u5c14\u3001\u5806\u6392\u3001\u5f52\u5e76\u3001\u5feb\u6392\u7b49</li> <li>\u975e\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5\uff1a\u6876\u6392\u3001\u57fa\u6570\u7b49</li> </ul> </li> </ul>"},{"location":"courses/fds/note3/#_8","title":"\u6876\u6392\u5e8f","text":"<ul> <li>\u6876\u6392\u5e8f\u7684\u539f\u7406\u662f\u5c06\u5f85\u6392\u6570\u636e\u5206\u5230\u6709\u9650\u6570\u91cf\u7684\u6876\u91cc\uff0c\u6bcf\u4e2a\u6876\u518d\u5206\u522b\u6392\u5e8f\uff08\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6392\u5e8f\u7b97\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u9012\u5f52\u5730\u6876\u6392\u5e8f\uff09<ol> <li>\u8bbe\u7f6e\u4e00\u4e2a\u5b9a\u91cf\u7684\u6570\u7ec4\u4f5c\u4e3a\u7a7a\u6876</li> <li>\u904d\u5386\u5e8f\u5217\uff0c\u5e76\u5c06\u5143\u7d20\u4e00\u4e2a\u4e2a\u653e\u5230\u5bf9\u5e94\u7684\u6876\u91cc</li> <li>\u5bf9\u6bcf\u4e2a\u975e\u7a7a\u7684\u6876\u91cc\u7684\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f</li> <li>\u4ece\u975e\u7a7a\u7684\u6876\u91cc\u628a\u5143\u7d20\u518d\u653e\u56de\u5230\u539f\u6765\u7684\u5e8f\u5217\u4e2d</li> </ol> </li> <li>\u6876\u6392\u5e8f\u9002\u5408\u5f85\u6392\u6570\u636e\u503c\u57df\u8f83\u5927\u4e14\u5206\u5e03\u6bd4\u8f83\u5747\u5300\u7684\u60c5\u51b5</li> <li>\u6876\u6392\u5e8f\u7684\u4e00\u79cd\u7b80\u5355\u8fd0\u7528\uff1a<ul> <li>\u5982\u679c\u8f93\u5165\u6570\u636e\u90fd\u5c0f\u4e8e $M$\uff0c\u5219\u53ef\u4ee5\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a $M$ \u7684\u6570\u7ec4\u6765\u8bb0\u5f55\u67d0\u4e2a\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u8fd9\u4e2a\u6570\u7ec4\u79f0\u4e3a\u6876</li> <li>\u521d\u59cb\u5316\u7a7a\u6876\uff0c\u904d\u5386\u8f93\u5165\u6570\u636e\uff0c\u5c06\u6bcf\u4e2a\u6570\u636e\u5bf9\u5e94\u7684\u6876\u52a0 1</li> <li>\u6700\u540e\u904d\u5386\u6876\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5bf9\u4e8e bucket[x] = y\uff0c\u5c06 x \u8f93\u51fa y \u6b21</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(N+M)$</li> </ul> </li> </ul>"},{"location":"courses/fds/note3/#_9","title":"\u57fa\u6570\u6392\u5e8f","text":"<ul> <li>\u57fa\u6570\u6392\u5e8f\uff08radix sort\uff09\u5c06\u5f85\u6392\u5143\u7d20\u62c6\u5206\u4e3a k \u4e2a\u5173\u952e\u5b57\uff0c\u9010\u4e00\u57fa\u4e8e\u5173\u952e\u5b57\u5bf9\u5143\u7d20\u8fdb\u884c\u6392\u5e8f</li> <li>\u5982\u679c\u4ece\u7b2c 1 \u5173\u952e\u5b57\u5230\u7b2c k \u5173\u952e\u5b57\u987a\u5e8f\u8fdb\u884c\uff0c\u5219\u79f0\u4e3a MSD\uff08most significant digit first\uff09</li> <li>\u5982\u679c\u4ece\u7b2c k \u5173\u952e\u5b57\u5230\u7b2c 1 \u5173\u952e\u5b57\u987a\u5e8f\u8fdb\u884c\uff0c\u5219\u79f0\u4e3a LSD\uff08least significant digit first\uff09</li> <li>\u4f8b\u5982\u5bf9 64\uff0c8\uff0c343\uff0c512\uff0c27\uff0c729\uff0c0\uff0c1\uff0c316\uff0c125 \u8fdb\u884c LSD \u6392\u5e8f<ul> <li>\u4f7f\u7528\u5341\u4e2a\u6876\uff0c\u5206\u522b\u4ee3\u8868\u6570\u5b57 0~9</li> <li>\u7b2c\u4e00\u8f6e\uff0c\u6309\u4e2a\u4f4d\u6570\u6392\u5e8f<ul> <li>0\uff0c1\uff0c512\uff0c343\uff0c64\uff0c125\uff0c316\uff0c27\uff0c8\uff0c729</li> </ul> </li> <li>\u7b2c\u4e8c\u8f6e\uff0c\u6309\u5341\u4f4d\u6570\u6392\u5e8f<ul> <li>(0\uff0c1\uff0c8)\uff0c(512\uff0c316)\uff0c(125\uff0c27\uff0c729)\uff0c343\uff0c64</li> </ul> </li> <li>\u7b2c\u4e09\u8f6e\uff0c\u6309\u767e\u4f4d\u6570\u6392\u5e8f<ul> <li>(0\uff0c1\uff0c8\uff0c27\uff0c64)\uff0c125\uff0c(316\uff0c343)\uff0c512\uff0c729</li> </ul> </li> <li>\u6392\u5e8f\u5b8c\u6210</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(P(N+B))$\uff0c\u5176\u4e2d $P$ \u4e3a\u8f6e\u6570\uff0c$N$ \u4e3a\u5143\u7d20\u4e2a\u6570\uff0c$B$ \u4e3a\u6876\u4e2a\u6570</li> </ul> </li> <li>\u4f8b\u5982\u5bf9 64\uff0c8\uff0c343\uff0c512\uff0c27\uff0c729\uff0c0\uff0c1\uff0c316\uff0c125 \u8fdb\u884c MSD \u6392\u5e8f<ul> <li>\u4f7f\u7528\u5341\u4e2a\u6876\uff0c\u5206\u522b\u4ee3\u8868\u6570\u5b57 0~9</li> <li>\u7b2c\u4e00\u8f6e\uff0c\u6309\u767e\u4f4d\u6570\u6392\u5e8f<ul> <li>(64\uff0c8\uff0c27\uff0c0\uff0c1)\uff0c125\uff0c(343\uff0c316)\uff0c512\uff0c729</li> </ul> </li> <li>\u7b2c\u4e8c\u8f6e\uff0c\u6309\u5341\u4f4d\u6570\u6392\u5e8f<ul> <li>((8\uff0c0\uff0c1)\uff0c27\uff0c64)\uff0c125\uff0c(316\uff0c343)\uff0c512\uff0c729</li> </ul> </li> <li>\u7b2c\u4e09\u8f6e\uff0c\u6309\u4e2a\u4f4d\u6570\u6392\u5e8f<ul> <li>((0\uff0c1\uff0c8)\uff0c27\uff0c64)\uff0c125\uff0c(316\uff0c343)\uff0c512\uff0c729</li> </ul> </li> <li>\u6392\u5e8f\u5b8c\u6210</li> </ul> </li> <li>\u5b57\u5178\u5e8f\uff08lexicographical order\uff09\u4e5f\u8574\u542b\u7740\u5173\u952e\u5b57\u548c\u57fa\u6570\u6392\u5e8f</li> <li>LSD \u4e0d\u9700\u8981\u50cf MSD \u90a3\u6837\u9700\u8981\u501f\u52a9\u9012\u5f52\u6765\u5b9e\u73b0\uff0c\u901a\u5e38\u62e5\u6709\u66f4\u5feb\u7684\u6392\u5e8f\u901f\u5ea6</li> </ul>"},{"location":"courses/fds/note3/#_10","title":"\u5176\u4ed6","text":"<ul> <li>\u5f53\u5f85\u6392\u6570\u636e\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5728\u5185\u5b58\u4e2d\u5360\u636e\u5f88\u5927\u7684\u7a7a\u95f4\u65f6\uff0c\u4ea4\u6362\u5143\u7d20\u7684\u5f00\u9500\u662f\u5de8\u5927\u7684\uff0c\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u5143\u7d20\u6dfb\u52a0\u4e00\u4e2a\u7d22\u5f15\uff0c\u5c06\u5bf9\u5143\u7d20\u6392\u5e8f\u6539\u4e3a\u5bf9\u7d22\u5f15\u6392\u5e8f</li> <li>\u6392\u5e8f\u7b97\u6cd5\u7684\u7a33\u5b9a\u6027\u662f\u6307\u76f8\u7b49\u7684\u5143\u7d20\u7ecf\u8fc7\u6392\u5e8f\u540e\u76f8\u5bf9\u987a\u5e8f\u662f\u5426\u53d1\u751f\u4e86\u6539\u53d8<ul> <li>\u7a33\u5b9a\u6392\u5e8f\uff1a\u5192\u6ce1\u3001\u63d2\u5165\u3001\u5f52\u5e76\u3001\u57fa\u6570\u7b49</li> <li>\u4e0d\u7a33\u5b9a\u6392\u5e8f\uff1a\u9009\u62e9\u3001\u5e0c\u5c14\u3001\u5806\u6392\u3001\u5feb\u6392\u7b49</li> </ul> </li> </ul>"},{"location":"courses/fds/note3/#_11","title":"\u54c8\u5e0c","text":""},{"location":"courses/fds/note3/#_12","title":"\u54c8\u5e0c\u8868","text":"<ul> <li>\u54c8\u5e0c\u8868\uff08hash table\uff09\u4e5f\u79f0\u4e3a\u6563\u5217\u8868\uff0c\u4ee5 (key, value) \u7684\u5f62\u5f0f\u5b58\u50a8\u6570\u636e\uff0c\u5373\u4efb\u610f\u7684\u5173\u952e\u5b57 key \u90fd\u552f\u4e00\u5bf9\u5e94\u5230\u5185\u5b58\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u53ea\u8981\u8f93\u5165\u67e5\u627e\u7684\u5173\u952e\u5b57\uff0c\u5c31\u53ef\u4ee5\u5feb\u901f\u5730\u627e\u5230\u76f8\u5e94\u7684 value<ul> <li>\u5047\u8bbe\u7528\u6570\u7ec4 a \u5b58\u653e\u6570\u636e\uff0c\u54c8\u5e0c\u51fd\u6570\u662f f\uff0c\u5219 (key, value) \u5c31\u5e94\u8be5\u653e\u5728 a[f(key)] \u4e0a</li> <li>\u53ef\u4ee5\u628a\u54c8\u5e0c\u8868\u7406\u89e3\u4e3a\u4e00\u79cd\u9ad8\u7ea7\u7684\u6570\u7ec4\uff0c\u8fd9\u79cd\u6570\u7ec4\u7684\u4e0b\u6807\u53ef\u4ee5\u662f\u5f88\u5927\u7684\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u5b57\u7b26\u4e32\u751a\u81f3\u7ed3\u6784\u4f53</li> <li>\u5173\u952e\u5b57\u4e5f\u79f0\u6807\u8bc6\u7b26\uff08identifier\uff09</li> </ul> </li> <li>\u901a\u5e38\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u69fd\uff08slot\uff09\uff0c\u5373\u591a\u4e2a\u5173\u952e\u5b57\u5bf9\u5e94\u540c\u4e00\u4e2a\u4f4d\u7f6e\u65f6\uff0c\u5c06\u4e0d\u540c\u5173\u952e\u5b57\u5b58\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4e0d\u540c\u69fd\u4e2d</li> <li>\u5bf9\u4e8e\u5173\u952e\u5b57 $x$\uff0c\u5b9a\u4e49\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570 $f(x)$ \u8868\u793a $x$ \u5728\u54c8\u5e0c\u8868 ht[] \u4e2d\u7684\u4f4d\u7f6e\uff08\u7d22\u5f15\uff09</li> <li>\u8bbe\u54c8\u5e0c\u8868 ht[] \u7684\u5927\u5c0f\u4e3a $b$\uff08\u5373 $f(x)$ \u503c\u57df\u4e3a $[0,b-1]$\uff09\uff0c\u6700\u591a\u6709 $s$ \u4e2a\u69fd\uff0c\u5219\u5b9a\u4e49\u4ee5\u4e0b\u503c\uff1a<ul> <li>$T$ \u8868\u793a $x$ \u53ef\u80fd\u7684\u4e0d\u540c\u53d6\u503c\u4e2a\u6570</li> <li>$n$ \u8868\u793a ht[] \u4e2d\u5173\u952e\u5b57\u7684\u4e2a\u6570</li> <li>\u6807\u8bc6\u7b26\u5bc6\u5ea6\uff08identifier density\uff09\u5b9a\u4e49\u4e3a $\\frac{n}{T}$</li> <li>\u88c5\u8f7d\u5bc6\u5ea6\uff08loading density\uff09\u5b9a\u4e49\u4e3a $\\lambda=\\frac{n}{sb}$</li> </ul> </li> <li>\u5f53\u5b58\u5728 $i_1\\not =i_2$ \u4e14 $f(i_1)=f(i_2)$ \u7684\u60c5\u51b5\uff0c\u5219\u79f0\u4e3a\u53d1\u751f\u4e86\u51b2\u7a81\uff08collision\uff09</li> <li>\u5f53\u5c06\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57\u6620\u5c04\u5230\u4e00\u4e2a\u6ee1\u7684\u4f4d\u7f6e\u65f6\uff08\u5373\u69fd\u5df2\u7ecf\u88ab\u586b\u6ee1\uff09\uff0c\u5219\u79f0\u4e3a\u53d1\u751f\u4e86\u6ea2\u51fa\uff08overflow\uff09<ul> <li>\u5f53 $s=1$ \u65f6\uff0c\u51b2\u7a81\u548c\u6ea2\u51fa\u5c06\u540c\u65f6\u53d1\u751f</li> </ul> </li> <li>\u4e0d\u8003\u8651\u6ea2\u51fa\uff0c\u590d\u6742\u5ea6 $T_{search}=T_{insert}=T_{delete}=\\Omicron(1)$</li> </ul>"},{"location":"courses/fds/note3/#_13","title":"\u54c8\u5e0c\u51fd\u6570","text":"<ul> <li>\u54c8\u5e0c\u51fd\u6570\u5e94\u8be5\u6613\u4e8e\u8ba1\u7b97\uff0c\u4e14\u51cf\u5c11\u51b2\u7a81\u7684\u53ef\u80fd\u6027</li> <li>\u54c8\u5e0c\u51fd\u6570\u5e94\u8be5\u662f unbiased \u7684\uff0c\u5373 $P(f(x)=i)=\\frac{1}{b}$\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u79f0\u4e3a\u5747\u5300\u54c8\u5e0c\u51fd\u6570\uff08uniform hash function\uff09</li> <li>\u5bf9\u4e8e\u6574\u6570\u7684\u54c8\u5e0c\uff0c\u53ef\u4ee5\u53d6 $f(x) = x \\bmod tableSize$<ul> <li>\u5176\u4e2d tableSize \u6700\u597d\u53d6\u4e00\u4e2a\u8d28\u6570\uff0c\u8fd9\u6837\u5bf9\u4e8e\u968f\u673a\u8f93\u5165\uff0c\u5173\u952e\u5b57\u7684\u5206\u5e03\u66f4\u5747\u5300</li> </ul> </li> <li> <p>\u5bf9\u4e8e\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\uff0c\u53ef\u4ee5\u53d6 $f(x)=(\\sum x[N-i-1] \\times 32^ i) \\bmod tableSize$</p> <pre><code>Index hash(const char *x, int tableSize) {\n    unsigned int hashVal = 0;\n    while (*x != '\\0')\n        hashVal = (hashVal &lt;&lt; 5) + *(x++);\n    return hashVal % tableSize;\n}\n</code></pre> </li> </ul>"},{"location":"courses/fds/note3/#_14","title":"\u5206\u79bb\u94fe\u63a5","text":"<ul> <li>\u89e3\u51b3\u51b2\u7a81\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u5206\u79bb\u94fe\u63a5\uff08separate chaining\uff09</li> <li>\u5728\u6bcf\u4e2a\u5b58\u653e\u6570\u636e\u7684\u5730\u65b9\u5f00\u4e00\u4e2a\u94fe\u8868\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5173\u952e\u5b57\u7d22\u5f15\u5230\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981\u628a\u5b83\u4eec\u90fd\u653e\u5230\u90a3\u4e2a\u4f4d\u7f6e\u7684\u94fe\u8868\u91cc\u5373\u53ef\uff08\u94fe\u8868\u5b9e\u73b0\u7684\u69fd\uff09</li> <li>\u5efa\u8bae\uff1a\u8bbe\u8ba1\u54c8\u5e0c\u8868\u4e0e\u54c8\u5e0c\u51fd\u6570\uff0c\u4f7f $\\lambda \\approx 1$</li> </ul> <pre><code>struct ListNode;\ntypedef struct ListNode *Position;\nstruct HashTbl;\ntypedef struct HashTbl *HashTable;\nstruct ListNode {\n    ElementType element;\n    Position next;\n};\ntypedef Position List;\nstruct HashTbl {\n    int tableSize;\n    List *theLists;\n};\n\nHashTable initializeTable(int tableSize) {\n    if (tableSize &lt; minTableSize) {\n        error(\"table size too small\");\n        return NULL;\n    }\n    HashTable H = malloc(sizeof(struct HashTbl));\n    if (H == NULL) fatalError(\"out of space\");\n    H-&gt;tableSize = nextPrime(tableSize);  // better be prime.\n    H-&gt;theLists = malloc(sizeof(List) * H-&gt;tableSize);\n    if (H-&gt;theLists == NULL) fatalError(\"out of space\");\n    for (int i = 0; i &lt; H-&gt;tableSize; i++) {\n        H-&gt;theLists[i] = malloc(sizeof(struct ListNode));\n        if (H-&gt;theLists[i] == NULL) fatalError(\"out of space\");\n        else H-&gt;theLists[i]-&gt;next = NULL;\n    }\n    return H;\n}\n\nPosition find(ElementType key, HashTable H) {\n    List L = H-&gt;theLists[hash(key, H-&gt;tableSize)];\n    Position P = L-&gt;next;\n    while (P != NULL &amp;&amp; P-&gt;element != key) P = P-&gt;next;\n    return P;\n}\n\nvoid insert(ElementType key, HashTable H) {\n    Position pos = find(key, H);\n    if (pos == NULL) {\n        Position newCell = malloc(sizeof(struct ListNode));\n        if (newCell == NULL) fatalError(\"out of space\");\n        else {\n            List L = H-&gt;theLists[hash(key, H-&gt;tableSize)];\n            newCell-&gt;next = L-&gt;next;\n            newCell-&gt;element = key;\n            L-&gt;next = newCell;\n        }\n    }\n}\n</code></pre>"},{"location":"courses/fds/note3/#_15","title":"\u5f00\u653e\u5bfb\u5740","text":"<ul> <li>\u89e3\u51b3\u51b2\u7a81\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5f00\u653e\u5bfb\u5740\uff08open addressing\uff09</li> <li>\u5f53\u6709\u51b2\u7a81\u53d1\u751f\u65f6\uff0c\u5c1d\u8bd5\u9009\u62e9\u5176\u4ed6\u4f4d\u7f6e\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u7684\u4f4d\u7f6e\u4e3a\u6b62</li> <li>\u5efa\u8bae\uff1a\u8bbe\u8ba1\u54c8\u5e0c\u8868\u4e0e\u54c8\u5e0c\u51fd\u6570\uff0c\u4f7f $\\lambda &lt; 0.5$</li> <li>\u53ef\u4ee5\u89c6\u4f5c\u4f7f\u7528\u4e86\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570 $h_0(x),h_1(x),...$\uff0c\u5176\u4e2d $h_i(x)=(hash(x)+f(i)) \\bmod tableSize$<ul> <li>\u5176\u4e2d $f(i)$ \u4e3a\u589e\u91cf\u51fd\u6570\uff0c\u6709\u591a\u79cd\u9009\u53d6\u7684\u65b9\u5f0f</li> </ul> </li> </ul> <pre><code>void insert(ElementType key) {\n    index = hash(key); int i = 0;\n    while (collision at index) {\n        index = (hash(key) + f(i)) % tableSize;\n        if (table is full) break;\n        else i++;\n    }\n    if (table is full) error(\"no space left\");\n    else table[index] = key;\n}\n</code></pre>"},{"location":"courses/fds/note3/#_16","title":"\u7ebf\u6027\u63a2\u6d4b","text":"<ul> <li>\u7ebf\u6027\u63a2\u6d4b\uff08linear probing\uff09\u4f7f\u7528\u589e\u91cf\u51fd\u6570 $f(i)=i$</li> <li>\u5373\u51b2\u7a81\u4e86\u5c31\u5f80\u540e\u4e00\u4e2a\u4e00\u4e2a\u627e\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u7684\u4f4d\u7f6e\u4e3a\u6b62</li> <li>\u4f1a\u5bfc\u81f4\u4e00\u6b21\u805a\u96c6\uff08primary clustering\uff09\uff0c\u5373\u5982\u679c\u67d0\u4e2a\u4f4d\u7f6e\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u90a3\u4e48\u540e\u9762\u63d2\u5165\u5728\u9644\u8fd1\u7684\u5143\u7d20\u4e5f\u90fd\u5f88\u5bb9\u6613\u53d1\u751f\u51b2\u7a81\uff0c\u9700\u8981\u4e0d\u65ad\u5f80\u540e\u5bfb\u5740\uff0c\u5bfc\u81f4\u63d2\u5165\u548c\u641c\u7d22\u5f00\u9500\u90fd\u5927\u5e45\u589e\u52a0<ul> <li>\u7406\u89e3\uff1aany key that hashes into the cluster will add to the cluster after several attempts to resolve the collision.</li> <li>\u5bf9\u4e8e\u63d2\u5165\u548c\u4e0d\u6210\u529f\u7684\u641c\u7d22\uff0c\u63a2\u6d4b\u6b21\u6570\u7ea6\u4e3a $\\frac{1}{2}(1+\\frac{1}{(1-\\lambda)^ 2})$</li> <li>\u5bf9\u4e8e\u6210\u529f\u7684\u641c\u7d22\uff0c\u63a2\u6d4b\u6b21\u6570\u7ea6\u4e3a $\\frac{1}{2}(1+\\frac{1}{1-\\lambda})$</li> </ul> </li> </ul>"},{"location":"courses/fds/note3/#_17","title":"\u5e73\u65b9\u63a2\u6d4b","text":"<ul> <li>\u5e73\u65b9\u63a2\u6d4b\uff08quadratic probing\uff09\u4f7f\u7528\u589e\u91cf\u51fd\u6570 $f(i)=i^ 2$</li> <li>\u5bf9\u4e8e\u4f7f\u7528\u5e73\u65b9\u63a2\u6d4b\u7684\u5f00\u653e\u5bfb\u5740\u6cd5\uff0c\u5982\u679c tableSize \u4e3a\u8d28\u6570\uff0c\u4e14\u81f3\u5c11\u4e00\u534a\u4e3a\u7a7a\uff0c\u5219\u603b\u80fd\u6210\u529f\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u5143\u7d20</li> <li>\u5982\u679c tableSize \u4e3a\u5f62\u5982 4k+3 \u7684\u8d28\u6570\uff0c\u5219\u5e73\u65b9\u63a2\u6d4b\u7684\u63a2\u6d4b\u8303\u56f4\u53ef\u4ee5\u8986\u76d6\u6574\u4e2a\u8868</li> <li> <p>\u641c\u7d22</p> <ul> <li>$f(i) = f(i-1) + i^ 2 - (i-1)^ 2 = f(i-1) + 2i - 1$</li> </ul> <pre><code>Position find(ElementType key, HashTable H) {\n    Position currentPos = hash(key, H-&gt;tableSize); int collisionNum = 0;\n    while (H-&gt;theCells[currentPos].info != Empty &amp;&amp; H-&gt;theCells[currentPos].element != key) {\n        currentPos += 2 * ++collisionNum - 1;\n        if (currentPos &gt;= H-&gt;tableSize) currentPos -= H-&gt;tableSize;  // faster than mod.\n    }\n    return currentPos;\n}\n</code></pre> </li> <li> <p>\u63d2\u5165</p> <pre><code>void insert(ElementType key, HashTable H) {\n    Position pos = find(key, H);\n    if (H-&gt;theCells[pos].info != Legitimate) {\n        H-&gt;theCells[pos].info = Legitimate;\n        H-&gt;theCells[pos].element = key;\n    }\n}\n</code></pre> </li> <li> <p>\u4f1a\u5bfc\u81f4\u4e8c\u6b21\u805a\u96c6\uff08secondary clustering\uff09\uff0c\u5373\u5982\u679c\u67d0\u4e2a\u4f4d\u7f6e\u53d1\u751f\u591a\u6b21\u51b2\u7a81\uff0c\u540e\u6765\u53d1\u751f\u7684\u51b2\u7a81\u4f1a\u9700\u8981\u4e0d\u65ad\u5f80\u540e\u5bfb\u5740\uff0c\u5bfc\u81f4\u63d2\u5165\u548c\u641c\u7d22\u5f00\u9500\u90fd\u5927\u5e45\u589e\u52a0</p> <ul> <li>\u7406\u89e3\uff1akeys that hash to the same position will probe the same alternative cells.</li> </ul> </li> </ul>"},{"location":"courses/fds/note3/#_18","title":"\u53cc\u54c8\u5e0c","text":"<ul> <li>\u53cc\u54c8\u5e0c\uff08double hashing\uff09\u4f7f\u7528\u589e\u91cf\u51fd\u6570 $f(i)=i\\times hash_2(x)$\uff0c\u5176\u4e2d $hash_2$ \u662f\u53e6\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570</li> <li>\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u53d6\u65b9\u6848\uff1a$hash_2(x)=R-(x\\bmod R)$\uff0c\u5176\u4e2d $R$ \u4e3a\u4e00\u4e2a\u5c0f\u4e8e tableSize \u7684\u8d28\u6570</li> <li>\u7ebf\u6027\u63a2\u6d4b\u4e0e\u5e73\u65b9\u63a2\u6d4b\u90fd\u4f1a\u5bfc\u81f4 cluster \u7684\u51fa\u73b0\uff0c\u8fd9\u5bf9\u4e8e\u5f00\u653e\u5bfb\u5740\u6cd5\u7684\u6027\u80fd\u6709\u5f88\u5927\u7684\u5f71\u54cd\uff0c\u53cc\u54c8\u5e0c\u53ef\u4ee5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898</li> <li>\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u7531\u4e8e\u5e73\u65b9\u63a2\u6d4b\u4e0d\u9700\u8981\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u54c8\u5e0c\u51fd\u6570\uff0c\u6240\u4ee5\u901a\u5e38\u66f4\u52a0\u7b80\u5355\u5feb\u901f</li> </ul>"},{"location":"courses/fds/note3/#_19","title":"\u518d\u54c8\u5e0c","text":"<ul> <li>\u5f00\u653e\u5bfb\u5740\u6cd5\u5bf9\u4e8e $\\lambda &lt; 0.5$ \u662f\u9002\u7528\u7684\uff0c\u4f46\u5f53\u8868\u4e2d\u7684\u5143\u7d20\u8fc7\u591a\u65f6\uff0c\u64cd\u4f5c\u65f6\u95f4\u4f1a\u5f88\u957f\uff0c\u800c\u4e14\u5f88\u53ef\u80fd\u63d2\u5165\u5931\u8d25</li> <li>\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u518d\u54c8\u5e0c\uff08rehashing\uff09<ol> <li>\u5efa\u7acb\u4e00\u4e2a\u4e24\u500d\u5927\u7684\u54c8\u5e0c\u8868</li> <li>\u626b\u63cf\u539f\u59cb\u54c8\u5e0c\u8868</li> <li>\u7528\u4e00\u4e2a\u65b0\u7684\u54c8\u5e0c\u51fd\u6570\u628a\u539f\u59cb\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u6620\u5c04\u5230\u65b0\u7684\u54c8\u5e0c\u8868\u4e2d\uff0c\u5373 $hash_{new}(key)$</li> </ol> </li> <li>\u5982\u679c\u539f\u59cb\u54c8\u5e0c\u8868\u4e2d\u6709 $N$ \u4e2a\u5143\u7d20\uff0c\u5219\u518d\u54c8\u5e0c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Omicron(N)$</li> <li>\u4ec0\u4e48\u65f6\u5019\u8fdb\u884c\u518d\u54c8\u5e0c\uff1a<ul> <li>\u8868\u586b\u6ee1\u4e00\u534a\u4e86</li> <li>\u63d2\u5165\u5931\u8d25</li> <li>\u5f53\u54c8\u5e0c\u8868\u8fbe\u5230\u67d0\u4e2a\u7279\u5b9a\u7684\u88c5\u8f7d\u5bc6\u5ea6\u65f6</li> </ul> </li> </ul>"},{"location":"courses/ps/","title":"\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1","text":"<p> \u7ea6 116 \u4e2a\u5b57 </p> <p>Abstract</p> <ul> <li>\u6d59\u6c5f\u5927\u5b66\u300a\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1\u300b\u8bfe\u7a0b\u7b14\u8bb0</li> <li>\u8bfe\u7a0b\u7684\u6838\u5fc3\u7b14\u8bb0\u5df2\u7ecf\u66f4\u65b0\u5230 Isshiki\u4fee's Notebook \u4e2d\uff0c\u8bf7\u79fb\u6b65\u4fee\u4f6c\u7684\u6982\u7edf\u7b14\u8bb0</li> <li>\u8fd9\u91cc\u4ec5\u6536\u5f55\u90e8\u5206\u6982\u7edf\u76f8\u5173\u7684\u77e5\u8bc6\u4e0e\u601d\u8003\uff0c\u4f5c\u4e3a\u4e0a\u8ff0\u7b14\u8bb0\u7684\u8865\u5145\u5185\u5bb9</li> </ul>"},{"location":"courses/ps/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u6982\u7387\u8bba\u57fa\u7840</li> <li>\u6570\u7406\u7edf\u8ba1\u57fa\u7840<ul> <li>\u5047\u8bbe\u68c0\u9a8c\u6ca1\u5199\uff0c\u8865\u5929\u65f6\u5b66\u7684\uff0c\u8003\u5b8c\u4e5f\u4e0d\u60f3\u56de\u6765\u8865\u4e86</li> </ul> </li> </ul>"},{"location":"courses/ps/note1/","title":"\u6982\u7387\u8bba\u57fa\u7840","text":"<p> \u7ea6 1719 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p>"},{"location":"courses/ps/note1/#_2","title":"\u6982\u7387\u8bba\u7684\u57fa\u672c\u6982\u5ff5","text":""},{"location":"courses/ps/note1/#_3","title":"\u5168\u6982\u7387\u516c\u5f0f\u4e0e\u8d1d\u53f6\u65af\u516c\u5f0f","text":"<ul> <li>\u5168\u6982\u7387\u516c\u5f0f\u662f\u300c\u627e\u7ed3\u679c\u300d\uff0c\u800c\u8d1d\u53f6\u65af\u516c\u5f0f\u662f\u300c\u627e\u539f\u56e0\u300d</li> <li>\u5168\u6982\u7387\u516c\u5f0f\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u5982\u4f55\u627e\u5230\u4e00\u4e2a\u5408\u9002\u7684\u300c\u5212\u5206\u300d</li> <li>\u8d1d\u53f6\u65af\u516c\u5f0f\u4e2d\u6709\u4e00\u4e9b\u6982\u5ff5\u503c\u5f97\u6ce8\u610f\uff1a<ul> <li>\u5148\u9a8c\u6982\u7387\uff1a$P(B)$</li> <li>\u540e\u9a8c\u6982\u7387\uff1a$P(B|A)$</li> <li>\u4f3c\u7136\u6982\u7387\uff1a$P(A|B)$</li> </ul> </li> </ul> \u5168\u6982\u7387\u516c\u5f0f\u4e0e\u8d1d\u53f6\u65af\u516c\u5f0f <p>$$ P(A) = \\sum_{j=1}^n{P(B_j) P(A|B_j)} $$</p> <p>$$ P(B_i|A) = \\frac{P(AB_i)}{P(A)} = \\frac{P(B_i) P(A|B_i)}{\\sum_{j=1}^n{P(B_j) P(A|B_j)}} $$</p>"},{"location":"courses/ps/note1/#_4","title":"\u968f\u673a\u53d8\u91cf\u53ca\u5176\u6982\u7387\u5206\u5e03","text":""},{"location":"courses/ps/note1/#_5","title":"\u968f\u673a\u53d8\u91cf\u8865\u5145","text":"<ul> <li>\u79bb\u6563\u578b\u548c\u8fde\u7eed\u578b\u662f\u5e38\u89c1\u7684\u4e24\u7c7b\u968f\u673a\u53d8\u91cf\uff0c\u4f46\u968f\u673a\u53d8\u91cf\u5e76\u4e0d\u53ea\u6709\u8fd9\u4e24\u79cd\u3002</li> <li>\u4e66\u5199\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03\u5f8b\u65f6\u5343\u4e07\u4e0d\u8981\u6f0f\u6389\u968f\u673a\u53d8\u91cf\u7684\u53ef\u80fd\u53d6\u503c\u3002\u4f8b\u5982\uff1a$k=1,2,...$</li> </ul>"},{"location":"courses/ps/note1/#_6","title":"\u5206\u5e03\u51fd\u6570\u8865\u5145","text":"<ul> <li>\u5206\u5e03\u51fd\u6570\u901a\u5e38\u5199\u6210\u5927\u5199\u5b57\u6bcd\uff0c\u4f8b\u5982 $F(x)$</li> <li>\u5206\u5e03\u51fd\u6570\u7684\u5b9a\u4e49\u57df\u4e3a\u5168\u4f53\u5b9e\u6570</li> <li>\u5206\u5e03\u51fd\u6570\u7684\u5206\u6bb5\u5199\u6cd5\uff0c\u6309\u7167\u300c\u5de6\u95ed\u53f3\u5f00\u300d\u7684\u533a\u95f4\u8fdb\u884c\u5206\u6bb5\u662f\u4e00\u4e2a\u8f83\u597d\u7684\u4e60\u60ef\uff08\u4e3b\u8981\u9488\u5bf9\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u51fd\u6570\uff09</li> <li>\u652f\u6491\uff08support\uff09\u6307\u7684\u662f\u4f7f\u6982\u7387\u5206\u5e03\u4e3a\u6b63\u7684\u5bc6\u5ea6\u7684\u968f\u673a\u53d8\u91cf\u7684\u53d6\u503c\u7684\u96c6\u5408\uff0c\u5b9a\u4e49\u4e3a $ \\lbrace x: f(x)&gt;0\\rbrace $</li> </ul>"},{"location":"courses/ps/note1/#_7","title":"\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7406\u89e3","text":"<p>\u6709\u4e00\u4e2a\u5e38\u89c1\u7684\u8bef\u533a\uff0c\u5c31\u662f\u9519\u628a\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7684\u300c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7684\u51fd\u6570\u503c\u300d\u548c\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7684\u300c\u6982\u7387\u300d\u76f4\u63a5\u5212\u7b49\u53f7\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7684\u51fd\u6570\u503c\u4ee3\u8868\u7684\u662f\u6982\u7387\u5206\u5e03\u51fd\u6570\u7684\u53d8\u5316\u7387\uff08\u6240\u4ee5\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7684\u51fd\u6570\u503c\u5927\u4e8e $1$ \u4e5f\u662f\u5f88\u5408\u7406\u7684\uff09\uff1b\u800c\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u7684\u6982\u7387\uff0c\u53ea\u6709\u67d0\u6bb5\u533a\u95f4\u7684\u6982\u7387\u662f\u6709\u610f\u4e49\u7684\uff0c\u800c\u67d0\u4e2a\u70b9\u7684\u6982\u7387\u6052\u4e3a $0$\u3002</p> <p>\u90a3\u4e48\uff0c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u548c\u6982\u7387\u7684\u8054\u7cfb\u5230\u5e95\u662f\u4ec0\u4e48\u5462\uff1f\u7ed3\u8bba\u662f\uff0c\u67d0\u6bb5\u533a\u95f4\u4e0a\u300c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7684\u9762\u79ef\uff08\u79ef\u5206\uff09\u300d\u7b49\u4e8e\u968f\u673a\u53d8\u91cf\u843d\u5728\u8fd9\u6bb5\u533a\u95f4\u4e0a\u7684\u6982\u7387\u3002</p> <p>\u5173\u4e8e\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\uff0c\u6211\u4eec\u6709\u66f4\u52a0\u76f4\u89c2\u7684\u89e3\u91ca\u3002\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u7684\u51fd\u6570\u503c\u8f83\u5927\u7684\u5730\u65b9\uff0c\u4ee3\u8868\u8fd9\u4e2a\u70b9\u9644\u8fd1\u7684\u6982\u7387\u300c\u5bc6\u5ea6\u300d\u8f83\u5927\uff0c\u4e5f\u5c31\u662f\u8bf4\u968f\u673a\u53d8\u91cf\u843d\u5728\u8fd9\u4e2a\u70b9\u9644\u8fd1\u7684\u5355\u4f4d\u957f\u5ea6\u533a\u95f4\u4e0a\u7684\u6982\u7387\u8f83\u5927\u3002\u7528\u6570\u5b66\u516c\u5f0f\u8868\u793a\u5c31\u662f $f(x) \\Delta x = P = \\Delta F(x)$\u3002</p>"},{"location":"courses/ps/note1/#_8","title":"\u6307\u6570\u5206\u5e03\u7684\u65e0\u8bb0\u5fc6\u6027","text":"<p>\u5047\u8bbe $t_0&gt;0$\uff0c$t&gt;0$\uff0c</p> <p>$$ \\begin{aligned} P(X&gt;t_0+t \\;\\; | \\;\\; X&gt;t_0 ) &amp; = \\frac{P(X&gt;t_0+t)}{P(X&gt;t_0)} \\cr &amp; = \\frac{1-F(t_0+t)}{1-F(t_0)} \\cr &amp; = e^{-\\lambda t} = P(X&gt;t) \\end{aligned} $$</p> <p>$$ \\begin{aligned} P(X\\lt t_0+t \\;\\; | \\;\\; X&gt;t_0) &amp; = \\frac{P(t_0\\lt X\\lt t_0+t)}{P(X&gt;t_0)} \\cr &amp; = \\frac{F(t_0+t)-F(t_0)}{1-F(t_0)} \\cr &amp; = 1-e^{-\\lambda t} = P(X&lt;t) \\end{aligned} $$</p> \u65e0\u8bb0\u5fc6\u6027\u7684\u4e00\u4e2a\u4f8b\u5b50 <p>\u5047\u8bbe\u8bbe\u5907\u65e0\u6545\u969c\u8fd0\u884c\u7684\u65f6\u95f4 $T$ \u670d\u4ece\u6307\u6570\u5206\u5e03\u3002\u5df2\u77e5\u8bbe\u5907\u65e0\u6545\u969c\u8fd0\u884c\u4e8610\u4e2a\u5c0f\u65f6\uff0c\u6c42\u8be5\u8bbe\u5907\u518d\u65e0\u6545\u969c\u81f3\u5c11\u8fd0\u884c8\u4e2a\u5c0f\u65f6\u7684\u6982\u7387\u3002</p> <p>$$ P\\lbrace T\\geq 18 \\; | \\; T&gt;10 \\rbrace = \\frac{P\\lbrace T&gt;18\\rbrace }{P\\lbrace T&gt;10\\rbrace} = e^{-8\\lambda} = P\\lbrace T&gt;8\\rbrace $$</p> <p>\u6ce8\u610f\u5230\uff0c\u8fd9\u4e00\u6761\u4ef6\u6982\u7387\u4e0e\u65e0\u6761\u4ef6\u4e0b\u65e0\u6545\u969c\u8fd0\u884c8\u5c0f\u65f6\u7684\u6982\u7387\u6ca1\u6709\u533a\u522b\u3002</p>"},{"location":"courses/ps/note1/#_9","title":"\u6b63\u6001\u5206\u5e03\u6807\u51c6\u5316","text":"<p>\u5f53 $X\\sim N(\\mu,\\sigma^2)$ \u65f6\uff1a</p> <p>$$ P(X\\leq b) = \\int_{-\\infty}^b \\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu) ^2}{2\\sigma ^2}} \\mathrm{d}x $$</p> <p>\u505a\u53d8\u6362\uff1a$\\frac{x-\\mu}{\\sigma} = t$</p> <p>$$ \\begin{aligned} P(X\\leq b) &amp; = \\int_{-\\infty}^{\\frac{b-\\mu}{\\sigma}} \\frac{1}{\\sqrt{2\\pi}} e^{-\\frac{t ^2}{2}} \\mathrm{d}t \\cr &amp; = \\Phi(\\frac{b-\\mu}{\\sigma}) \\end{aligned} $$</p> <p>\u6362\u8a00\u4e4b\uff0c\u5f53 $X\\sim N(\\mu,\\sigma^2)$ \u65f6\uff0c$\\frac{X-\\mu}{\\sigma}\\sim N(0,1)$</p> <p>\u6807\u51c6\u6b63\u6001\u5206\u5e03\u8868</p> <p>https://en.wikipedia.org/wiki/Standard_normal_table#Cumulative_(less_than_Z)</p>"},{"location":"courses/ps/note1/#_10","title":"\u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570\u5206\u5e03","text":"<p>\u4e00\u822c\u5730\uff0c\u82e5\u5df2\u77e5 $X$ \u7684\u6982\u7387\u5206\u5e03\uff0c$Y=g(X)$\uff0c\u6c42 $Y$ \u7684\u6982\u7387\u5206\u5e03\u7684\u601d\u8def\u4e3a\uff1a\u5148\u7ed9\u51fa $Y$ \u7684\u53ef\u80fd\u53d6\u503c\uff0c\u518d\u5229\u7528\u300c\u7b49\u4ef7\u4e8b\u4ef6\u300d\u6c42\u89e3 $Y$ \u7684\u6982\u7387\u5206\u5e03\u51fd\u6570\u6216\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u3002</p> <ul> <li>\u5bf9\u4e8e\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\uff0c\u6bd4\u8f83\u7b80\u5355\uff0c\u5728\u6b64\u4e0d\u8d58\u8ff0\uff1b</li> <li>\u5bf9\u4e8e\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u6c42\u89e3\uff1a<ol> <li>\u5199\u51fa $Y$ \u7684\u6982\u7387\u5206\u5e03\u51fd\u6570 $F_Y(y)=P(Y \\leq y)$\uff1b</li> <li>\u627e\u51fa $(Y \\leq y)$ \u7684\u7b49\u4ef7\u4e8b\u4ef6 $(X \\in D)$\uff0c\u5f97\u5230 $F_Y(y)=P(X \\in D)$\uff0c\u89e3\u51fa $Y$ \u7684\u6982\u7387\u5206\u5e03\u51fd\u6570\uff1b</li> <li>\u8fdb\u800c\u6c42\u89e3 $Y$ \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 $f_Y(y) = \\frac{\\mathrm{d}}{\\mathrm{d}y} F_Y(y)$\uff1b    \u7279\u522b\u5730\uff0c\u82e5\u89e3\u51fa\u6982\u7387\u5206\u5e03\u51fd\u6570\u4e3a $F_Y(y) = F_X(h(y))$\uff0c\u5219\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e5f\u53ef\u5199\u6210 $f_Y(y) = \\frac{\\mathrm{d}}{\\mathrm{d}(h(y))} F_X(h(y)) \\cdot \\frac{\\mathrm{d}(h(y))}{\\mathrm{d}y} = f_X(h(y)) \\cdot h^{\\prime}(y)$\uff1b</li> </ol> </li> </ul>"},{"location":"courses/ps/note1/#_11","title":"\u591a\u5143\u968f\u673a\u53d8\u91cf\u53ca\u5176\u5206\u5e03","text":""},{"location":"courses/ps/note1/#_12","title":"\u4e8c\u7ef4\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u8865\u5145","text":"<p>\u5bf9\u4e8e\u4efb\u4f55\u5206\u5e03\u5f8b\u90fd\u6709\u4e24\u6761\u6027\u8d28\uff08\u5bf9\u8054\u5408\u3001\u8fb9\u9645\u3001\u6761\u4ef6\u5206\u5e03\u5f8b\u90fd\u6210\u7acb\uff09\uff1a</p> <ul> <li>$p_{ij} \\geq 0, \\; i,j=1,2,\\dots$</li> <li>$\\sum_{i=1}^{\\infty} \\sum_{j=1}^{\\infty} P_{ij} = 1$</li> </ul>"},{"location":"courses/ps/note1/#_13","title":"\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u51fd\u6570\u8865\u5145","text":"<ul> <li>\u8054\u5408\u5206\u5e03\u51fd\u6570 $F(x,y) = P(X \\leq x, Y \\leq y)$ \u662f\u4e8c\u5143\u51fd\u6570</li> <li>\u8fb9\u9645\u5206\u5e03\u51fd\u6570 $F_X(x) = P(X \\leq x) = lim_{y \\rarr +\\infty}F(x,y)$ \u662f\u5173\u4e8e $x$ \u7684\u4e00\u5143\u51fd\u6570</li> <li>\u6761\u4ef6\u5206\u5e03\u51fd\u6570 $F_{X \\mid Y}(x \\mid y) = P(X \\leq x \\mid Y=y)$ \u662f\u5173\u4e8e $x$ \u7684\u4e00\u5143\u51fd\u6570<ul> <li>$\\lim_{\\epsilon \\rarr 0^+}P(X\\leq x\\mid y&lt;Y\\leq y+\\epsilon)$ \u4e5f\u8bb0\u4e3a $P(X \\leq x \\mid Y=y)$\uff0c\u8bf7\u7279\u522b\u6ce8\u610f\u8fd9\u4e2a\u8bb0\u53f7\u6240\u5e26\u6765\u7684\u4e24\u79cd\u7406\u89e3</li> </ul> </li> </ul> <p>\u8054\u5408\u5206\u5e03\u3001\u8fb9\u9645\u5206\u5e03\u3001\u6761\u4ef6\u5206\u5e03\u6ee1\u8db3\u5982\u4e0b\u5173\u7cfb\uff1a</p> <p> </p>"},{"location":"courses/ps/note1/#_14","title":"\u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u8865\u5145","text":"<ul> <li>\u6761\u4ef6\u5bc6\u5ea6\u51fd\u6570\u7684\u91cd\u8981\u6027\u8d28\uff1a<ul> <li>$f(x,y) = f_{X|Y}(x|y)f_Y(y) = f_{Y|X}(y|x)f_X(x)$</li> <li>\u76f4\u89c2\u610f\u4e49\uff1a   $f_{X|Y}(x \\mid y) \\Delta x = \\frac{f(x,y)\\Delta x \\Delta y}{f_Y(y)\\Delta y} \\approx \\frac{P(x&lt;X\\leq x+\\Delta x, \\; y&lt;Y\\leq y+\\Delta y)}{P(y&lt;Y\\leq y+\\Delta y)} = P(x&lt;X\\leq x+\\Delta x \\mid y&lt;Y\\leq y+\\Delta y)$</li> </ul> </li> <li>\u4e8c\u7ef4\u5747\u5300\u5206\u5e03\u7684\u6761\u4ef6\u5206\u5e03\u4e3a\u4e00\u7ef4\u5747\u5300\u5206\u5e03</li> <li>\u4e8c\u7ef4\u6b63\u6001\u5206\u5e03\u7684\u8fb9\u9645\u5206\u5e03\u548c\u6761\u4ef6\u5206\u5e03\u4e3a\u4e00\u7ef4\u6b63\u6001\u5206\u5e03\uff08\u4e0d\u4f9d\u8d56\u4e8e $\\rho$\uff09<ul> <li>\u4e8c\u7ef4\u6b63\u6001\u5206\u5e03\u7684\u8bb0\u53f7\uff1a$(X,Y) \\sim N({\\mu}_1, \\; {\\mu_2}; \\; {\\sigma}_1^2, \\; {\\sigma}_2^2; \\; \\rho)$</li> </ul> </li> </ul>"},{"location":"courses/ps/note1/#_15","title":"\u968f\u673a\u53d8\u91cf\u7684\u72ec\u7acb\u6027\u8865\u5145","text":"<ul> <li>\u82e5 $(X,Y)$ \u662f\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\uff0c\u5219 $X,Y$ \u76f8\u4e92\u72ec\u7acb\u7b49\u4ef7\u4e8e $p_{ij} = p_{i\\cdot}p_{\\cdot j}$ \u5bf9\u4e00\u5207 $i,j$ \u90fd\u6210\u7acb</li> <li>\u82e5 $(X,Y)$ \u662f\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\u5219 $X,Y$ \u76f8\u4e92\u72ec\u7acb\u7b49\u4ef7\u4e8e $f(x,y) = f_X(x)f_Y(y)$ \u603b\u662f\u6210\u7acb\uff0c\u5e73\u9762\u4e0a\u201c\u9762\u79ef\u201d\u4e3a\u96f6\u7684\u96c6\u5408\u9664\u5916\uff08\u53ef\u4ee5\u5728\u4e0d\u8fde\u7eed\u70b9\u4e0a\u4e0d\u76f8\u7b49\uff09<ul> <li>\u6b64\u5916\uff0c$X,Y$ \u76f8\u4e92\u72ec\u7acb\u4e5f\u7b49\u4ef7\u4e8e\u5b58\u5728\u4e00\u5143\u51fd\u6570 $m,n$\uff0c\u4f7f\u5f97 $f(x,y)=m(x)n(y)\\;,\\;|x|&lt;+\\infty,|y|&lt;-\\infty$\uff08\u6ce8\u610f\uff1a\u8054\u5408\u5bc6\u5ea6\u51fd\u6570\u7684\u51fd\u6570\u5f0f\u548c\u5b9a\u4e49\u57df\u5747\u987b\u53ef\u5206\uff09</li> <li>\u4e8c\u7ef4\u6b63\u6001\u5206\u5e03\u662f\u72ec\u7acb\u7684\uff0c\u7b49\u4ef7\u4e8e $\\rho = 0$</li> </ul> </li> <li>$n$ \u7ef4\u968f\u673a\u53d8\u91cf\u72ec\u7acb\u6027\u76f8\u5173\u5b9a\u7406\uff1a<ul> <li>\u8bbe $(X_1,X_2,\\cdots ,X_m)$ \u4e0e $(Y_1,Y_2,\\cdots ,Y_n)$ \u76f8\u4e92\u72ec\u7acb\uff0c\u5219 $X_i(i=1,2,\\cdots ,m)$ \u4e0e $Y_j(j=1,2,\\cdots ,n)$ \u76f8\u4e92\u72ec\u7acb</li> <li>\u8bbe $(X_1,X_2,\\cdots ,X_m)$ \u4e0e $(Y_1,Y_2,\\cdots ,Y_n)$ \u76f8\u4e92\u72ec\u7acb\uff0c\u82e5 $h(x_1,x_2,\\cdots ,x_m)$ \u4e0e $g(y_1,y_2,\\cdots ,y_n)$ \u662f\u8fde\u7eed\u51fd\u6570\uff0c\u5219 $h(X_1,X_2,\\cdots ,X_m)$ \u4e0e $g(Y_1,Y_2,\\cdots ,Y_n)$ \u76f8\u4e92\u72ec\u7acb</li> </ul> </li> </ul>"},{"location":"courses/ps/note1/#_16","title":"\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570\u5206\u5e03","text":"<ul> <li>$Z=X+Y$ \u7684\u5206\u5e03\uff08\u8fd9\u91cc\u8ba8\u8bba\u8fde\u7eed\u578b\uff0c\u79bb\u6563\u578b\u53ea\u9700\u628a\u79ef\u5206\u7b26\u53f7\u6362\u6210\u6c42\u548c\u7b26\u53f7\u5373\u53ef\uff09<ul> <li>$f_Z(z)=\\int_{-\\infty}^{+\\infty}f(z-y,y)\\mathrm{d}y=\\int_{-\\infty} ^ {+\\infty}f(x,z-x)\\mathrm{d}x$\uff08$x$\uff0c$y$\u662f\u5bf9\u79f0\u7684\uff09</li> <li>\u5f53 $X$ \u548c $Y$ \u76f8\u4e92\u72ec\u7acb\u65f6\uff0c$Z$ \u7684\u5bc6\u5ea6\u51fd\u6570\u516c\u5f0f\u4e5f\u79f0\u4e3a\u5377\u79ef\u516c\u5f0f\uff1a$f_X*f_Y=\\int_{-\\infty}^{+\\infty}f_X(z-y)f_Y(y)\\mathrm{d}y=\\int_{-\\infty} ^ {+\\infty}f_X(x)f_Y(z-x)\\mathrm{d}x$</li> </ul> </li> <li>$M=max(X,Y)$ \u4e0e $N=min(X,Y)$ \u7684\u5206\u5e03\uff08\u57fa\u4e8e $X$ \u548c $Y$ \u76f8\u4e92\u72ec\u7acb\uff09<ul> <li>$F_{max}(z)=F_X(z)F_Y(z)$</li> <li>$F_{min}(z)=1-(1-F_X(z))(1-F_Y(z))$</li> <li>$n$ \u4e2a\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\u540c\u7406</li> </ul> </li> </ul>"},{"location":"courses/ps/note1/#_17","title":"\u5e38\u89c1\u5206\u5e03\u7684\u5377\u79ef","text":"<p>\u5206\u5e03\u7684\u5377\u79ef\u95ee\u9898\uff0c\u4e5f\u5373\u662f\u5206\u5e03\u7684\u72ec\u7acb\u53ef\u52a0\u6027\u95ee\u9898\u3002</p> <p>1.\u4e8c\u9879\u5206\u5e03\u7684\u53ef\u52a0\u6027\uff1a\u8bbe $X\\sim B(n,p)$\uff0c$Y\\sim B(m,p)$\uff0c$0&lt;p&lt;1$\uff0c$m$\uff0c$n$ \u5747\u4e3a\u6b63\u6574\u6570\uff0c\u82e5 $X$ \u4e0e $Y$ \u72ec\u7acb\uff0c\u5219</p> <p>$$ X+Y\\sim B(m+n,p) $$</p> <p>\u4e8c\u9879\u5206\u5e03\u7684\u53ef\u52a0\u6027\u6709\u52a9\u4e8e\u7406\u89e3\u4e8c\u9879\u5206\u5e03\u4e0e\u4e24\u70b9\u5206\u5e03\u7684\u53ef\u52a0\u6027\u3002</p> <p>2.\u6cca\u677e\u5206\u5e03\u7684\u53ef\u52a0\u6027\uff1a\u8bbe $X\\sim P({\\lambda}_1)$\uff0c$Y\\sim P({\\lambda}_2)$\uff0c${\\lambda}_i&gt;0$\uff0c$i=1,2$\uff0c\u82e5 $X$ \u4e0e $Y$ \u72ec\u7acb\uff0c\u5219</p> <p>$$ X+Y\\sim P({\\lambda}_1+{\\lambda}_2) $$</p> <p>3.\u6b63\u6001\u5206\u5e03\u7684\u53ef\u52a0\u6027\uff1a\u8bbe $X\\sim N({\\mu}_1,{\\sigma}_1^2)$\uff0c$Y\\sim N({\\mu}_2,{\\sigma}_2^2)$\uff0c$-\\infty &lt;{\\mu}_i&lt;+\\infty$\uff0c${\\sigma}_i&gt;0$\uff0c$i=1,2$\uff0c\u82e5 $X$ \u4e0e $Y$ \u72ec\u7acb\uff0c\u5219</p> <p>$$ X+Y\\sim N({\\mu}_1+{\\mu}_2,{\\sigma}_1^2+{\\sigma}_2 ^ 2) $$</p> <p>\u6b64\u5916\uff0c\u82e5 $(X,Y)\\sim N({\\mu}_1,{\\mu}_2,{\\sigma}_1^2 ,{\\sigma}_2^2 ,\\rho)$\uff0c\u5219\u4e0d\u8bba $X$ \u4e0e $Y$ \u662f\u5426\u72ec\u7acb\uff08\u5373 $\\rho$ \u662f\u5426\u4e3a $0$\uff09\uff0c\u90fd\u6709\uff1a</p> <p>$$ aX+bY+c\\sim N(a{\\mu}_1+b{\\mu}_2+c,a^2 {\\sigma}_1^2 +b^2 {\\sigma}_2 ^ 2 + 2ab{\\sigma}_1{\\sigma}_2\\rho) $$</p> <p>4.$\\Gamma$ \u5206\u5e03\u7684\u53ef\u52a0\u6027\uff1a\u8bbe $X\\sim \\Gamma ({\\alpha}_1,\\beta)$\uff0c$Y\\sim \\Gamma ({\\alpha}_2,\\beta)$\uff0c${\\alpha}_i&gt;0$\uff0c$i=1,2$\uff0c$\\beta &gt;0$ \u5747\u4e3a\u6b63\u6574\u6570\uff0c\u82e5 $X$ \u4e0e $Y$ \u72ec\u7acb\uff0c\u5219</p> <p>$$ X+Y\\sim \\Gamma ({\\alpha}_1+{\\alpha}_2,\\beta) $$</p> <p>\u6307\u6570\u5206\u5e03\u662f\u7279\u6b8a\u7684 $\\Gamma$ \u5206\u5e03\uff0c$E(\\lambda)=\\Gamma (1,\\lambda)$\u3002</p>"},{"location":"courses/ps/note1/#_18","title":"\u968f\u673a\u53d8\u91cf\u7684\u6570\u5b66\u7279\u5f81","text":""},{"location":"courses/ps/note1/#_19","title":"\u5e38\u89c1\u5206\u5e03\u7684\u671f\u671b\u4e0e\u65b9\u5dee","text":"\u5206\u5e03 \u5206\u5e03\u5f8b\u6216\u5bc6\u5ea6\u51fd\u6570 \u6570\u5b66\u671f\u671b \u65b9\u5dee $0-1$ \u5206\u5e03 $P(X=k)=p^k (1-p)^{1-k},\\;\\;k=0,1$ $p$ $p(1-p)$ \u4e8c\u9879\u5206\u5e03 $B(n,p)$ $P(X=k)=C_n^k p^k (1-p)^{1-k},\\;\\;k=0,1,...,n$ $np$ $np(1-p)$ \u6cca\u677e\u5206\u5e03 $P(\\lambda)$ $P(X=k)=\\frac{\\lambda ^k e^{-\\lambda}}{k!},\\;\\;k=0,1,...$ $\\lambda$ $\\lambda$ \u5747\u5300\u5206\u5e03 $U(a,b)$ $f(x)=\\begin{cases} \\frac{1}{b-a} &amp; ,a&lt;x&lt;b \\cr 0 &amp; ,\\text{else} \\end{cases}$ $\\frac{a+b}{2}$ $\\frac{(b-a)^2}{12}$ \u6307\u6570\u5206\u5e03 $E(\\lambda)$ $f(x)=\\begin{cases} \\lambda e^{-\\lambda x} &amp; ,x&gt;0 \\cr 0 &amp; ,\\text{else} \\end{cases}$ $\\frac{1}{\\lambda}$ $\\frac{1}{\\lambda ^2}$ \u6b63\u6001\u5206\u5e03 $N(\\mu ,\\sigma ^2)$ $f(x)=\\frac{1}{\\sqrt{2\\pi}\\sigma} e^{-\\frac{(x-\\mu) ^2 }{2\\sigma ^2 }},\\;\\;-\\infty&lt;x&lt;+\\infty$ $\\mu$ $\\sigma ^2$"},{"location":"courses/ps/note1/#_20","title":"\u6570\u5b66\u671f\u671b\u4e0e\u5206\u5e03\u51fd\u6570\u7684\u5173\u7cfb","text":"<p>\u8bbe\u968f\u673a\u53d8\u91cf $X$ \u7684\u5206\u5e03\u51fd\u6570\u4e3a $F(x)$\uff0c\u5219\u5206\u90e8\u79ef\u5206\u6cd5\u6613\u8bc1\uff1a</p> <p>$$ E(X) = \\int_{0}^{+\\infty} (1-F(x))\\mathrm{d}x-\\int_{-\\infty}^{0} F(x)\\mathrm{d}x $$</p> <ul> <li>\u5f53 $X$ \u4e3a\u975e\u8d1f\u968f\u673a\u53d8\u91cf\uff08\u5373 $P(X\\geq 0)=1$\uff09\u65f6\uff0c\u6709\uff1a$E(X)=\\int _0^{+\\infty} (1-F(x))\\mathrm{d}x$\uff1b</li> <li>\u5f53 $X$ \u4e3a\u53d6\u975e\u8d1f\u6574\u6570\u503c\u5f97\u968f\u673a\u53d8\u91cf\u65f6\uff0c\u6709\uff1a$E(X)=\\sum _{k=1}^{+\\infty} P(X\\geq k)$\uff1b</li> </ul>"},{"location":"courses/ps/note1/#_21","title":"\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u51fd\u6570\u7684\u6570\u5b66\u671f\u671b","text":"<p>\u8bbe $Z$ \u662f\u968f\u673a\u53d8\u91cf $X,Y$ \u7684\u51fd\u6570\uff1a$Z=h(X,Y)$\uff08$h$ \u662f\u8fde\u7eed\u51fd\u6570\uff09\uff1a</p> <ul> <li>\u82e5\u4e8c\u7ef4\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf $(X,Y)$ \u7684\u5206\u5e03\u5f8b\u4e3a $P(X=x_i,Y=y_j)=p_{ij},\\;\\;i,j=1,2,...$\uff0c\u5219\u6709\uff1a$E(Z)=E[h(X,Y)]=\\sum_{i=1}^{\\infty} \\sum_{i=1}^{\\infty} h(x_i,y_j)p_{ij}$\uff0c\u8fd9\u91cc\u8bbe\u4e0a\u5f0f\u53f3\u8fb9\u7684\u7ea7\u6570\u7edd\u5bf9\u6536\u655b\uff1b</li> <li>\u82e5\u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf $(X,Y)$ \u7684\u6982\u7387\u5bc6\u5ea6\u4e3a $f(x,y)$\uff0c\u5219\u6709\uff1a$E(Z)=E[h(X,Y)]=\\int_{-\\infty}^{+\\infty} \\int_{-\\infty}^{+\\infty} h(x,y)f(x,y)\\mathrm{d}x\\mathrm{d}y$\uff0c\u8fd9\u91cc\u8bbe\u4e0a\u5f0f\u53f3\u8fb9\u7684\u79ef\u5206\u7edd\u5bf9\u6536\u655b\uff1b</li> <li>\u7279\u522b\u5730\uff1a<ul> <li>$E(XY)=\\int_{-\\infty}^{+\\infty} \\int_{-\\infty}^{+\\infty} xyf(x,y)\\mathrm{d}x\\mathrm{d}y$\uff1b</li> <li>$E(X)=\\int_{-\\infty}^{+\\infty} \\int_{-\\infty}^{+\\infty} xf(x,y)\\mathrm{d}x\\mathrm{d}y$\uff1b</li> <li>$E(Y)=\\int_{-\\infty}^{+\\infty} \\int_{-\\infty}^{+\\infty} yf(x,y)\\mathrm{d}x\\mathrm{d}y$\uff1b</li> </ul> </li> </ul>"},{"location":"courses/ps/note1/#_22","title":"\u6761\u4ef6\u6570\u5b66\u671f\u671b","text":"<p>\u82e5 $(X,Y)$ \u4e3a\u4e8c\u7ef4\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\uff0c\u4e14\u5728\u7ed9\u5b9a $X=x$ \u4e0b\uff0c$Y$ \u7684\u6761\u4ef6\u5206\u5e03\u5f8b\u4e3a $P(Y=y_j | X=x)=p_j(x),\\;\\;j=1,2,...$\uff1b\u6216\u8005 $(X,Y)$ \u4e3a\u4e8c\u7ef4\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\u4e14\u5728\u7ed9\u5b9a $X=x$ \u4e0b\uff0c$Y$ \u7684\u6761\u4ef6\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a $f_{Y|X}(y|x)$\uff0c\u5219 $Y$ \u7684\u6761\u4ef6\u671f\u671b\u4e3a\uff1a</p> <p>$$ E(Y|X=x)= \\begin{cases} \\sum_{j=1}^{+\\infty} y_j p_j(x) &amp; ,\\text{discrete} \\cr \\int_{-\\infty}^{+\\infty} y f_{Y|X}(y|x) \\mathrm{d}y &amp; ,\\text{continuous} \\end{cases} $$</p> <p>$(X,Y)$ \u4e3a\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\uff0c\u82e5 $E(Y)$ \u5b58\u5728\uff0c\u5219\u6709\u5168\u671f\u671b\u516c\u5f0f\uff08Total Expectation Formula\uff09\uff1a</p> <p>$$ E(Y) = E[E(Y|X)] $$</p>"},{"location":"courses/ps/note1/#_23","title":"\u6807\u51c6\u5316\u53d8\u91cf","text":"<p>\u8bbe\u968f\u673a\u53d8\u91cf $X$ \u5177\u6709\u6570\u5b66\u671f\u671b $E(X)=\\mu$\uff0c\u65b9\u5dee $D(X)=\\sigma ^2 \\neq 0$\uff0c\u8bb0 $X^{*} = \\frac{X-\\mu}{\\sigma}$\u3002$E(X^{*} )=0$\uff0c$D(X^{*})=1$\uff0c\u79f0 $X^{*}$ \u4e3a $X$ \u7684\u6807\u51c6\u5316\u53d8\u91cf\u3002</p> <p>\u7279\u522b\u5730\uff0c\u6b63\u6001\u53d8\u91cf\u7684\u6807\u51c6\u5316\u53d8\u91cf\u670d\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\u3002</p>"},{"location":"courses/ps/note1/#_24","title":"\u72ec\u7acb\u6027\u4e0e\u76f8\u5173\u6027","text":"<p>\u968f\u673a\u53d8\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u4ec5\u9488\u5bf9\u300c\u7ebf\u6027\u5173\u7cfb\u300d\u800c\u8a00\uff0c$X,Y$ \u4e0d\u76f8\u5173\u7b49\u4ef7\u4e8e $Cov(X,Y)=0$\u3002</p> <p>\u800c\u72ec\u7acb\u6027\u662f\u4e00\u4e2a\u5f88\u5f3a\u7684\u6761\u4ef6\uff0c\u968f\u673a\u53d8\u91cf\u76f8\u4e92\u72ec\u7acb\uff0c\u5b9a\u4e49\u4e0a\u8981\u6c42\u5176\u4e2d\u4efb\u4e00\u53d8\u91cf\u7684\u5b58\u5728\u4e0e\u5426\uff0c\u90fd\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03\u4ea7\u751f\u5f71\u54cd\u3002$X,Y$ \u72ec\u7acb\u7b49\u4ef7\u4e8e $Cov(f(X),g(Y))=0$ \u5bf9\u4efb\u4f55\u51fd\u6570 $f,g$ \u90fd\u6210\u7acb\uff0c\u4e5f\u5c31\u662f\u8bf4\u8981\u6c42 $X,Y$ \u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5305\u62ec\u7ebf\u6027\u7684\u548c\u975e\u7ebf\u6027\u7684\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\uff0c\u72ec\u7acb\u6027\u6bd4\u76f8\u5173\u6027\u5f3a\u5f97\u591a\uff0c\u72ec\u7acb\u662f\u4e0d\u76f8\u5173\u7684\u5145\u5206\u4e0d\u5fc5\u8981\u6761\u4ef6\u3002\u901a\u4fd7\u5730\u8bb2\uff0c\u72ec\u7acb\u624d\u662f\u6211\u4eec\u6240\u8bf4\u7684\u201c\u6ca1\u6709\u5173\u7cfb\u201d\uff0c\u800c\u4e0d\u76f8\u5173\u4ec5\u4ec5\u8868\u8fbe\u201c\u6ca1\u6709\u7ebf\u6027\u5173\u7cfb\u201d\u3002</p> <p>\u4e8c\u7ef4\u6b63\u6001\u53d8\u91cf $(X,Y)$ \u7684\u72ec\u7acb\u6027\u4e0e\u76f8\u5173\u6027\uff1a</p> <ul> <li>$\\rho _{XY} = \\rho$\uff1b</li> <li>$X,Y$ \u76f8\u4e92\u72ec\u7acb $\\Rightarrow$ $X,Y$ \u4e0d\u76f8\u5173\uff1b</li> </ul>"},{"location":"courses/ps/note1/#_25","title":"\u5176\u5b83\u6570\u5b57\u7279\u5f81","text":"<p>\u8bbe $X,Y$ \u662f\u968f\u673a\u53d8\u91cf\uff1a</p> <ul> <li>\u82e5 $E(X^k),\\;\\;k=1,2,...$ \u5b58\u5728\uff0c\u5219\u79f0\u4e4b\u4e3a $X$ \u7684 $k$ \u9636\uff08\u539f\u70b9\uff09\u77e9\uff1b</li> <li>\u82e5 $E\\lbrace [X-E(X)]^k \\rbrace,\\;\\;k=1,2,...$ \u5b58\u5728\uff0c\u5219\u79f0\u4e4b\u4e3a $X$ \u7684 $k$ \u9636\u4e2d\u5fc3\u77e9\uff1b</li> <li>\u82e5 $E(X^k Y^l),\\;\\;k,l=1,2,...$ \u5b58\u5728\uff0c\u5219\u79f0\u4e4b\u4e3a $X,Y$ \u7684 $k+l$ \u9636\u6df7\u5408\uff08\u539f\u70b9\uff09\u77e9\uff1b</li> <li>\u82e5 $E\\lbrace [X-E(X)]^k [Y-E(Y)]^l \\rbrace,\\;\\;k,l=1,2,...$ \u5b58\u5728\uff0c\u5219\u79f0\u4e4b\u4e3a $X,Y$ \u7684 $k+l$ \u9636\u6df7\u5408\u4e2d\u5fc3\u77e9\uff1b</li> </ul> <p>\u8bbe $X$ \u4e3a\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\uff0c\u5176\u5206\u5e03\u51fd\u6570\u548c\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u5206\u522b\u4e3a $F(x)$ \u548c $f(x)$\uff0c\u79f0\u6ee1\u8db3\u6761\u4ef6 $P(X&gt;x_{\\alpha})=1-F(x_{\\alpha})=\\int_{x_{\\alpha}}^{+\\infty} f(x) \\mathrm{d}x = \\alpha$ \u7684\u5b9e\u6570 $x_{\\alpha}$ \u4e3a\u968f\u673a\u53d8\u91cf $X$ \u7684\u4e0a $x_{\\alpha}$ \u5206\u4f4d\u6570\u3002</p> <ul> <li>\u5f53 $\\alpha = \u00bd$ \u65f6\uff0c$x_{\u00bd}$ \u79f0\u4e3a $X$ \u7684\u4e2d\u4f4d\u6570\uff1b</li> <li>\u5bf9\u4e8e\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c$x_{\u00bd}=0$\uff0c$x_{1-\\alpha}=-x_{\\alpha}$\uff1b</li> </ul>"},{"location":"courses/ps/note2/","title":"\u6570\u7406\u7edf\u8ba1\u57fa\u7840","text":"<p> \u7ea6 1963 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p>"},{"location":"courses/ps/note2/#_2","title":"\u5927\u6570\u5b9a\u5f8b\u53ca\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406","text":""},{"location":"courses/ps/note2/#_3","title":"\u5927\u6570\u5b9a\u5f8b\u8865\u5145","text":"<p>\u5927\u6570\u5b9a\u5f8b\u63ed\u793a\u4e86\u4e00\u4e9b\u968f\u673a\u4e8b\u4ef6\u5728\u5927\u6570\u6761\u4ef6\u4e0b\u5448\u73b0\u51fa\u7684\u7a33\u5b9a\u6027\u3002\u4e0d\u8bba\u662f\u72ec\u7acb\u91cd\u590d\u8bd5\u9a8c\u4e0b\u7684\u4e8b\u4ef6\u53d1\u751f\u9891\u7387\uff08\u4f2f\u52aa\u5229\u5927\u6570\u5b9a\u5f8b\uff09\uff0c\u8fd8\u662f\u968f\u673a\u53d8\u91cf\u5e8f\u5217\u7684\u7b97\u672f\u5e73\u5747\uff08\u8f9b\u94a6\u5927\u6570\u5b9a\u5f8b\uff09\uff0c\u90fd\u80fd\u4f9d\u6982\u7387\u6536\u655b\u5230\u4e00\u4e2a\u7a33\u5b9a\u503c\uff08\u5206\u522b\u662f\u6982\u7387\u548c\u671f\u671b\uff09\u3002</p> <p>In probability theory, the law of large numbers (LLN) is a mathematical theorem that states that the average of the results obtained from a large number of independent and identical random samples converges to the true value, if it exists.</p> <p>\u5728\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1\u8fd9\u95e8\u8bfe\u7a0b\u4e2d\uff1a</p> <ul> <li>\u4e24\u4e2a\u91cd\u8981\u4e0d\u7b49\u5f0f\u4e2d\uff0c\u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f\u66f4\u4e3a\u5e38\u7528\uff1b</li> <li>\u5e38\u89c1\u7684\u51e0\u79cd\u5927\u6570\u5b9a\u5f8b\u4e2d\uff0c\u8f9b\u94a6\u5927\u6570\u5b9a\u5f8b\u6700\u4e3a\u5e38\u7528\uff1b<ul> <li>\u5c24\u5176\u662f\u8f9b\u94a6\u5927\u6570\u5b9a\u5f8b\u7684\u63a8\u8bba\uff0c\u76f4\u63a5\u6307\u51fa\u4e86\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u7684\u51fd\u6570\u4f9d\u6982\u7387\u6536\u655b\u5230\u5176\u5747\u503c\uff08\u4e0d\u4e25\u8c28\uff0c\u9700\u8981\u52a0\u4e0a\u4e00\u4e9b\u6761\u4ef6\uff0c\u8be6\u89c1\u5176\u4e25\u683c\u5b9a\u4e49\uff09\uff1b</li> </ul> </li> </ul>"},{"location":"courses/ps/note2/#_4","title":"\u5176\u4ed6\u5e38\u89c1\u7684\u5927\u6570\u5b9a\u5f8b","text":"<p>\u9a6c\u5c14\u53ef\u592b\u5927\u6570\u5b9a\u5f8b</p> <p>\u8bbe $\\lbrace X_i,i \\geq 1 \\rbrace$ \u4e3a\u4e00\u968f\u673a\u53d8\u91cf\u5e8f\u5217\uff0c\u82e5\u5bf9\u6240\u6709\u7684 $i \\geq 1$\uff0c$X_i$ \u7684\u65b9\u5dee\u90fd\u5b58\u5728\uff0c\u4e14 $lim_{n \\rarr +\\infty} \\frac{1}{n^2} Var(\\sum_{i=1}^{n} X_i) = 0$\uff0c\u5219\u5bf9 $\\forall \\epsilon &gt; 0$\uff0c\u6709\uff1a</p> <p>$$ lim_{n \\rarr +\\infty} P \\lbrace | \\frac{1}{n} \\sum_{i=1}^{n}X_i - \\frac{1}{n}E(X_i) | \\geq \\epsilon \\rbrace = 0 $$</p> <p>\u6210\u7acb\uff0c\u5373\u968f\u673a\u53d8\u91cf $\\lbrace X_i,i \\geq 1 \\rbrace$ \u670d\u4ece\u5927\u6570\u5b9a\u5f8b\u3002</p> <p>\u5207\u6bd4\u96ea\u592b\u5927\u6570\u5b9a\u5f8b</p> <p>\u8bbe $\\lbrace X_i,i \\geq 1 \\rbrace$ \u4e3a\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\u5e8f\u5217\uff0c\u82e5\u5b58\u5728\u5e38\u6570 $C$\uff0c\u4f7f\u5f97 $Var(X_i) \\leq C , i=1,2,...$\uff0c\u5373\u6240\u6709\u7684 $X_i$ \u7684\u65b9\u5dee\u6709\u5171\u540c\u7684\u4e0a\u754c\uff0c\u5219\u5bf9 $\\forall \\epsilon &gt; 0$\uff0c\u6709\uff1a</p> <p>$$ lim_{n \\rarr +\\infty} P \\lbrace | \\frac{1}{n} \\sum_{i=1}^{n}X_i - \\frac{1}{n}E(X_i) | \\geq \\epsilon \\rbrace = 0 $$</p> <p>\u6210\u7acb\uff0c\u5373\u968f\u673a\u53d8\u91cf $\\lbrace X_i,i \\geq 1 \\rbrace$ \u670d\u4ece\u5927\u6570\u5b9a\u5f8b\u3002</p> <p>\u5207\u6bd4\u96ea\u592b\u5927\u6570\u5b9a\u5f8b\u7684\u63a8\u8bba\uff1a</p> <p>\u8bbe $\\lbrace X_i,i \\geq 1 \\rbrace$ \u4e3a\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\u5e8f\u5217\uff0c\u82e5\u5b83\u4eec\u7684\u65b9\u5dee\u5b58\u5728\u4e14\u76f8\u540c\uff08\u8bb0\u4e3a ${\\sigma}^2$\uff09\uff0c\u5219\u968f\u673a\u53d8\u91cf $\\lbrace X_i,i \\geq 1 \\rbrace$ \u670d\u4ece\u5927\u6570\u5b9a\u5f8b\u3002</p> <p>\u7279\u522b\u5730\uff08\u8f83\u5e38\u7528\uff0c\u9700\u8981\u638c\u63e1\uff09\uff0c$\\lbrace X_i,i \\geq 1 \\rbrace$ \u4e3a\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\u5e8f\u5217\uff0c\u4e14\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u671f\u671b $\\mu$ \u548c\u76f8\u540c\u7684\u65b9\u5dee ${\\sigma}^2$\uff0c\u5219 $\\frac{1}{n} \\sum_{i=1}^{n}X_i \\xrightarrow{P} \\mu \\; , \\; n \\rarr +\\infty$\u3002</p>"},{"location":"courses/ps/note2/#_5","title":"\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u8865\u5145","text":"<p>\u6709\u8bb8\u591a\u968f\u673a\u53d8\u91cf\uff0c\u5b83\u4eec\u662f\u7531\u5927\u91cf\u7684\u76f8\u4e92\u72ec\u7acb\u7684\u968f\u673a\u53d8\u91cf\u7684\u7efc\u5408\u5f71\u54cd\u6240\u5f62\u6210\u7684\uff0c\u800c\u5176\u4e2d\u6bcf\u4e2a\u4e2a\u522b\u56e0\u7d20\u7684\u4f5c\u7528\u90fd\u5f88\u5c0f\u3002\u8fd9\u79cd\u968f\u673a\u53d8\u91cf\u5f80\u5f80\u670d\u4ece\u6216\u8fd1\u4f3c\u670d\u4ece\u6b63\u6001\u5206\u5e03\uff0c\u6216\u8005\u8bf4\u5b83\u7684\u6781\u9650\u5206\u5e03\u662f\u6b63\u6001\u5206\u5e03\u3002\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\u6b63\u662f\u4ece\u6570\u5b66\u4e0a\u8bba\u8bc1\u4e86\u8fd9\u4e00\u73b0\u8c61\u3002</p>  \u5bf9\u4e8e\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1\u8fd9\u95e8\u8bfe\u7a0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u638c\u63e1\u72ec\u7acb\u540c\u5206\u5e03\u7684\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff08\u6797\u5fb7\u4f2f\u683c-\u83b1\u7ef4\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406\uff09\u53ca\u5176\u63a8\u8bba\uff08\u4e8c\u9879\u5206\u5e03\u7684\u6b63\u6001\u8fd1\u4f3c\uff0c\u5373\u68e3\u83ab\u5f17-\u62c9\u666e\u62c9\u65af\u5b9a\u7406\uff09\u5373\u53ef\u3002"},{"location":"courses/ps/note2/#_6","title":"\u7edf\u8ba1\u91cf\u4e0e\u62bd\u6837\u5206\u5e03","text":""},{"location":"courses/ps/note2/#_7","title":"\u4ece\u6982\u7387\u8bba\u5230\u6570\u7406\u7edf\u8ba1","text":"<p>\u6982\u7387\u8bba\u544a\u8bc9\u6211\u4eec\uff0c\u73b0\u5b9e\u4e2d\u7684\u8bb8\u591a\u968f\u673a\u4e8b\u4ef6\u90fd\u4f1a\u5728\u5927\u6570\u6761\u4ef6\u4e0b\u5448\u73b0\u51fa\u7a33\u5b9a\u6027\uff08\u89c4\u5f8b\u6027\uff09\uff0c\u56e0\u800c\u7406\u8bba\u4e0a\u53ea\u8981\u5bf9\u968f\u673a\u73b0\u8c61\u8fdb\u884c\u8db3\u591f\u591a\u6b21\u89c2\u5bdf\uff0c\u4e00\u5b9a\u80fd\u6e05\u695a\u5730\u8ba1\u7b97\u51fa\u5404\u79cd\u7ed3\u679c\u7684\u89c4\u5f8b\u6027\u3002\u4f46\u662f\uff0c\u5b9e\u9645\u4e0a\u6240\u5141\u8bb8\u7684\u89c2\u5bdf\u6c38\u8fdc\u662f\u6709\u9650\u7684\uff0c\u751a\u81f3\u662f\u5c11\u91cf\u7684\u3002</p> <p>\u4ece\u6709\u9650\u7684\u89c2\u5bdf\u4e2d\u63a8\u6d4b\u65e0\u9650\u89c2\u5bdf\u624d\u80fd\u5f97\u5230\u7684\u89c4\u5f8b\uff0c\u4ee5\u6837\u672c\u7684\u4fe1\u606f\u6765\u63a8\u65ad\u603b\u4f53\u7684\u4fe1\u606f\uff0c\u8fd9\u5c31\u662f\u6570\u7406\u7edf\u8ba1\u5b66\u7814\u7a76\u7684\u95ee\u9898\u4e4b\u4e00\u3002\u6839\u636e Glivenko-Cantelli \u5b9a\u7406\uff0c\u7ecf\u9a8c\u5206\u5e03\u51fd\u6570\u7684\u6536\u655b\u884c\u4e3a\u968f\u7740\u72ec\u7acb\u540c\u5206\u5e03\u7684\u89c2\u6d4b\u503c\u6570\u91cf\u7684\u589e\u52a0\u800c\u589e\u5f3a\uff0c\u8fd9\u4e5f\u8bc1\u660e\u4e86\u6570\u7406\u7edf\u8ba1\u5b66\u901a\u8fc7\u6837\u672c\u4fe1\u606f\u63a8\u65ad\u603b\u4f53\u4fe1\u606f\u8fd9\u4e00\u65b9\u6cd5\u7684\u53ef\u884c\u6027\u548c\u6b63\u786e\u6027\u3002</p> <p>\u4e0a\u6587\u63d0\u5230\u7684\u4ece\u6837\u672c\u51fa\u53d1\u63a8\u65ad\u603b\u4f53\uff0c\u6b63\u662f\u6240\u8c13\u7684\u300c\u7edf\u8ba1\u63a8\u65ad\u300d\u3002R.A Fisher \u5c06\u7edf\u8ba1\u63a8\u65ad\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a</p> <ul> <li>\u62bd\u6837\u5206\u5e03\uff08\u7edf\u8ba1\u91cf\u7684\u5206\u5e03\uff09\uff1b</li> <li>\u53c2\u6570\u4f30\u8ba1\uff1b</li> <li>\u5047\u8bbe\u68c0\u9a8c\uff1b</li> </ul>"},{"location":"courses/ps/note2/#_8","title":"\u4e09\u5927\u62bd\u6837\u5206\u5e03\u8868","text":"<p>$\\chi^{2}$ \u5206\u5e03\uff08\u5361\u65b9\u5206\u5e03\uff09\uff1a</p> <p>https://www.obhrm.net/index.php/\u5361\u65b9\u5206\u5e03\u8868_Chi-Square_Probabilities</p> <p>$t$ \u5206\u5e03\uff08\u5b66\u751f\u6c0f\u5206\u5e03\uff09\uff0c\u5173\u6ce8 one-sided \u90e8\u5206\u5373\u53ef\uff1a</p> <p>https://en.wikipedia.org/wiki/Student%27s_t-distribution</p> <p>$F$ \u5206\u5e03\uff1a</p> <p>https://blog.csdn.net/sinat_34439107/article/details/78577412</p> <p>\u788e\u788e\u5ff5</p> <p>\u8fd9\u4e09\u5f20\u5206\u5e03\u8868\u627e\u5f97\u6709\u70b9\u96be\u53d7\uff0c\u5f88\u5947\u602a\u4e3a\u4ec0\u4e48 Wikipedia \u4e0d\u7ed9\u51fa\u5b8c\u6574\u7684\u5206\u5e03\u8868\u3002\u4ee5\u6211\u7684\u5f3a\u8feb\u75c7\uff0c\u5982\u679c\u7f51\u5740\u548c\u5206\u5e03\u8868\u4e0d\u591f\u4f18\u96c5\u7684\u8bdd\uff0c\u6211\u4e5f\u8bb8\u4f1a\u81ea\u5df1\u6765\u505a\u8fd9\u4ef6\u4e8b\uff08\u9003\u3002</p>"},{"location":"courses/ps/note2/#_9","title":"\u53c2\u6570\u4f30\u8ba1","text":""},{"location":"courses/ps/note2/#_10","title":"\u7ea0\u504f\u65b9\u6cd5","text":"<p>\u65e0\u504f\u6027\u662f\u5bf9\u4f30\u8ba1\u91cf\u7684\u4e00\u4e2a\u6700\u5e38\u89c1\u7684\u91cd\u8981\u8981\u6c42\uff0c\u662f\u201c\u597d\u201d\u4f30\u8ba1\u7684\u6807\u51c6\u4e4b\u4e00\u3002\u5f53\u4f30\u8ba1\u91cf $\\hat{\\theta}$ \u4e0d\u6ee1\u8db3\u65e0\u504f\u6027\u65f6\uff0c\u5373 $E(\\hat{\\theta}) \\not = \\theta$ \u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9 $\\hat{\\theta}$ \u8fdb\u884c\u5fae\u8c03\uff0c\u4ee5\u4f7f\u5176\u6ee1\u8db3\u65e0\u504f\u6027\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u79f0\u4e3a\u7ea0\u504f\u3002</p> <p>\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u7ea0\u504f\u60c5\u5f62\uff1a\u5982\u679c $E(\\hat{\\theta})=a\\theta +b$\uff0c\u5176\u4e2d $a,b$ \u4e3a\u5e38\u6570\uff0c\u4e14 $a\\not =0$\uff0c\u5219 $\\frac{1}{a}(\\hat{\\theta}-b)$ \u662f\u5bf9 $\\theta$ \u7684\u65e0\u504f\u4f30\u8ba1\u3002</p>"},{"location":"courses/ps/note2/#_11","title":"\u67a2\u8f74\u91cf\u6cd5\u8865\u5145","text":"<p>\u7528\u67a2\u8f74\u91cf\u53d1\u6c42\u89e3\u7f6e\u4fe1\u533a\u95f4\u65f6\uff0c\u82e5\u5e38\u6570 $a,b$ \u662f\u4e0d\u552f\u4e00\u7684\uff0c\u5219\u6839\u636e Neyman \u539f\u5219\uff0c\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u80fd\u4f7f\u533a\u95f4\u5e73\u5747\u957f\u5ea6\u6700\u77ed\u7684 $a,b$\u3002</p> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5e38\u53d6 $a,b$ \u6ee1\u8db3\uff1a</p> <p>$$ P(G(X;\\theta)\\leq a) = P(G(X;\\theta)\\geq b) = \\alpha /2 $$</p> <p>\u8fd9\u6837\u5f97\u5230\u7684\u7f6e\u4fe1\u533a\u95f4\u79f0\u4e3a\u7b49\u5c3e\u7f6e\u4fe1\u533a\u95f4\u3002</p>"},{"location":"courses/ps/note2/#_12","title":"\u53cc\u4fa7\u7f6e\u4fe1\u4e0e\u5355\u4fa7\u7f6e\u4fe1","text":"<p>\u6ce8\u610f\u533a\u5206\u53cc\u4fa7\u7f6e\u4fe1\u548c\u5355\u4fa7\u7f6e\u4fe1\uff0c\u5728\u76f8\u540c\u6761\u4ef6\u4e0b\uff0c\u53cc\u4fa7\u7f6e\u4fe1\u533a\u95f4\u7684\u4e0b\u9650\uff08\u6216\u4e0a\u9650\uff09\u5e76\u4e0d\u7b49\u540c\u4e8e\u5355\u4fa7\u7f6e\u4fe1\u4e0b\u9650\uff08\u6216\u4e0a\u9650\uff09\u3002</p> <p>\u7279\u522b\u5730\uff0c\u5728\u4e0b\u8868\u4e2d\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u51e0\u4e2a\u53cc\u4fa7\u7f6e\u4fe1\u9650\u4e0e\u5355\u4fa7\u7f6e\u4fe1\u9650\u7684\u533a\u522b\uff0c\u6070\u6070\u662f\u4e0a $x_{\\alpha /2}$ \u5206\u4f4d\u6570\u548c\u4e0a $x_{\\alpha}$ \u5206\u4f4d\u6570\u7684\u533a\u522b\u3002</p>"},{"location":"courses/ps/note2/#_13","title":"\u6b63\u6001\u603b\u4f53\u53c2\u6570\u533a\u95f4\u4f30\u8ba1\u8868","text":"<p>\u524d\u4e09\u884c\u4e3a\u4e00\u4e2a\u6b63\u6001\u603b\u4f53\uff0c\u540e\u4e09\u884c\u4e3a\u4e24\u4e2a\u6b63\u6001\u603b\u4f53\uff1a</p> \u5f85\u4f30\u53c2\u6570 \u5176\u4ed6\u53c2\u6570 \u67a2\u8f74\u91cf\u53ca\u5176\u5206\u5e03 \u7f6e\u4fe1\u533a\u95f4 \u5355\u4fa7\u7f6e\u4fe1\u9650 $\\mu$ $\\sigma^ {2}$ \u5df2\u77e5 $\\frac{\\overline{X}-\\mu}{\\sigma /\\sqrt{n}} \\sim N(0,1)$ $\\left( \\overline{X} \\pm \\frac{\\sigma}{\\sqrt{n}}z_{\\alpha /2} \\right)$ $\\overline{X} \\pm \\frac{\\sigma}{\\sqrt{n}}z_{\\alpha}$ $\\mu$ $\\sigma^ {2}$ \u672a\u77e5 $\\frac{\\overline{X}-\\mu}{S /\\sqrt{n}} \\sim t(n-1)$ $\\left( \\overline{X} \\pm \\frac{S}{\\sqrt{n}}t_{\\alpha /2}(n-1) \\right)$ $\\overline{X} \\pm \\frac{S}{\\sqrt{n}}t_{\\alpha}(n-1)$ $\\sigma^ {2}$ $\\mu$ \u672a\u77e5 $\\frac{(n-1)S^ 2}{\\sigma^{2}} \\sim \\chi^{2}(n-1)$ $\\left( \\frac{(n-1)S^ 2}{\\chi_{\\alpha /2}^{2}(n-1)}, \\frac{(n-1)S^2}{\\chi_{1-\\alpha /2}^{2}(n-1)} \\right)$ $\\frac{(n-1)S^ 2}{\\chi_{\\alpha}^{2}(n-1)}, \\frac{(n-1)S^ 2}{\\chi_{1-\\alpha}^{2}(n-1)}$ $\\mu_{1}-\\mu_{2}$ $\\sigma_{1}^ {2}, \\sigma_{2}^ {2}$ \u5df2\u77e5 $\\frac{(\\overline{X}-\\overline{Y})-(\\mu_{1}-\\mu_{2})}{\\sqrt{\\frac{\\sigma_{1}^ {2}}{n_1}+\\frac{\\sigma_{2}^ {2}}{n_2}}} \\sim N(0,1)$ $\\left( (\\overline{X}-\\overline{Y}) \\pm z_{\\alpha /2}\\sqrt{\\frac{\\sigma_{1}^ {2}}{n_1}+\\frac{\\sigma_{2}^ {2}}{n_2}} \\right)$ $(\\overline{X}-\\overline{Y}) \\pm z_{\\alpha}\\sqrt{\\frac{\\sigma_{1}^ {2}}{n_1}+\\frac{\\sigma_{2}^ {2}}{n_2}}$ $\\mu_{1}-\\mu_{2}$ $\\sigma_{1}^ {2}, \\sigma_{2}^ {2}$ \u672a\u77e5 $\\frac{(\\overline{X}-\\overline{Y})-(\\mu_{1}-\\mu_{2})}{S_w\\sqrt{\\frac{1}{n_1}+\\frac{1}{n_2}}} \\sim t(n_1+n_2-2)$ $\\left( (\\overline{X}-\\overline{Y}) \\pm t_{\\alpha /2}(n_1+n_2-2)S_w\\sqrt{\\frac{1}{n_1}+\\frac{1}{n_2}} \\right)$ $(\\overline{X}-\\overline{Y}) \\pm t_{\\alpha}(n_1+n_2-2)S_w\\sqrt{\\frac{1}{n_1}+\\frac{1}{n_2}}$ $\\frac{\\sigma_{1}^ {2}}{\\sigma_{2}^ {2}}$ $\\mu_{1}, \\mu_{2}$ \u672a\u77e5 $\\frac{S_1^ 2/S_2^ 2}{\\sigma_{1}^ {2}/\\sigma_{2}^ {2}} \\sim F(n_1-1,n_2-1)$ $\\left( \\frac{S_1^ 2}{S_2^ 2}\\frac{1}{F_{\\alpha /2}(n_1-1,n_2-1)}, \\frac{S_1^ 2}{S_2^ 2}\\frac{1}{F_{1-\\alpha /2}(n_1-1,n_2-1)} \\right)$ $\\frac{S_1^ 2}{S_2^ 2}\\frac{1}{F_{\\alpha}(n_1-1,n_2-1)}, \\frac{S_1^ 2}{S_2^ 2}\\frac{1}{F_{1-\\alpha}(n_1-1,n_2-1)}$"},{"location":"courses/ps/note2/#_14","title":"\u5047\u8bbe\u68c0\u9a8c","text":""},{"location":"courses/qi/","title":"\u91cf\u5b50\u4fe1\u606f\u57fa\u7840","text":"<p> \u7ea6 63 \u4e2a\u5b57 </p> <p>Abstract</p> <ul> <li>\u6d59\u6c5f\u5927\u5b66\u300a\u91cf\u5b50\u4fe1\u606f\u57fa\u7840\u300b\u8bfe\u7a0b\u7b14\u8bb0</li> </ul>"},{"location":"courses/qi/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u91cf\u5b50\u57fa\u7840</li> <li>\u91cf\u5b50\u7ea0\u9519<ul> <li>\u5b8c\u5168\u6ca1\u5199\uff0c\u7ea0\u9519\u90e8\u5206\u7684\u77e5\u8bc6\u5f88\u7e41\u6742\uff0c\u6309\u7167\u8001\u5e08\u590d\u4e60\u8bfe\u4e0a\u5217\u51fa\u7684\u91cd\u70b9\u590d\u4e60\u5373\u53ef</li> </ul> </li> </ul>"},{"location":"courses/qi/note1/","title":"\u91cf\u5b50\u57fa\u7840","text":"<p> \u7ea6 4880 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 20 \u5206\u949f</p>"},{"location":"courses/qi/note1/#_2","title":"\u4fe1\u606f\u3001\u71b5\u4e0e\u8ba1\u7b97\u590d\u6742\u5ea6","text":""},{"location":"courses/qi/note1/#_3","title":"\u9999\u519c\u71b5","text":"<p>\u6d88\u606f\u7684\u4fe1\u606f\u91cf\u53d6\u51b3\u4e8e\u6d88\u606f\u5185\u5bb9\u4ee4\u4eba\u60ca\u8bb6\u7684\u7a0b\u5ea6\uff0c\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u968f\u7740\u4e8b\u4ef6\u53d1\u751f\u6982\u7387 $p$ \u51cf\u5c0f\u800c\u589e\u5927\u7684\u51fd\u6570 $I(p)$\u3002</p> <p>\u53ef\u4ee5\u8fd9\u6837\u53bb\u7406\u89e3\u4fe1\u606f\u91cf\u4e0e\u6982\u7387\u7684\u5173\u7cfb\uff1a\u77e5\u9053\u67d0\u4e2a\u7279\u5b9a\u6570\u5b57\u4e0d\u4f1a\u6210\u4e3a\u5f69\u7968\u4e2d\u5956\u53f7\u7801\u6240\u63d0\u4f9b\u7684\u4fe1\u606f\u91cf\u975e\u5e38\u5c11\uff0c\u56e0\u4e3a\u4efb\u4f55\u9009\u5b9a\u7684\u6570\u5b57\u51e0\u4e4e\u90fd\u4e0d\u4f1a\u4e2d\u5956\uff1b\u4f46\u662f\u77e5\u9053\u67d0\u4e2a\u7279\u5b9a\u6570\u5b57\u4f1a\u4e2d\u5956\u6240\u63d0\u4f9b\u7684\u4fe1\u606f\u91cf\u5219\u662f\u5de8\u5927\u7684\uff0c\u56e0\u4e3a\u5b83\u4f20\u9012\u4e86\u6781\u4f4e\u6982\u7387\u4e8b\u4ef6\u7684\u7ed3\u679c\u3002</p> <p>\u4fe1\u606f\u91cf\u51fd\u6570 $I(p)$ \u6ee1\u8db3\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\u8fde\u7eed\u6027\uff1a$I(p)$ \u662f\u5173\u4e8e $p$ \u7684\u8fde\u7eed\u51fd\u6570</li> <li>\u53ef\u52a0\u6027\uff1a$I(p_x, p_y) = I(p_x) + I(p_y)$ \u5bf9\u4e8e\u72ec\u7acb\u4e8b\u4ef6 $x, y$ \u5747\u6210\u7acb</li> </ul> <p>\u6839\u636e\u8fd9\u4e24\u6761\u6027\u8d28\u53ef\u4ee5\u63a8\u5bfc\u51fa\uff1a</p> <ul> <li>\u7531\u53ef\u52a0\u6027\uff0c\u5bf9\u4e8e\u4efb\u610f\u5b9e\u6570 $r$\uff0c\u6709 $I(p_x ^ r) = rI(p_x)$</li> <li>\u8fdb\u4e00\u6b65\u5730\uff0c\u7531\u8fde\u7eed\u6027\uff0c\u6709 $I(p_x) = I((\u00bd) ^ {-\\log _2 (p_x)}) = -\\log _2 (p_x) I(\u00bd)$</li> </ul> <p>\u5e38\u6570 $I(\u00bd)$ \u53ef\u4ee5\u88ab\u89c6\u4f5c\u4fe1\u606f\u91cf\u7684\u5355\u4f4d\uff0c\u4ece\u800c\u53ef\u4ee5\u5b9a\u4e49\u9999\u519c\u71b5\uff1a</p> <ul> <li>\u53d1\u751f\u6982\u7387\u4e3a $p_x$ \u7684\u4e8b\u4ef6 $x$ \u7684\u9999\u519c\u71b5\u4e3a $-\\log _2 (p_x)$</li> <li>\u4e00\u7cfb\u5217\u53d1\u751f\u6982\u7387\u5206\u522b\u4e3a $p_1, p_2, ..., p_n$ \u7684\u4e8b\u4ef6\u7684\u5e73\u5747\u4fe1\u606f\u91cf\u4e3a $H \\sim -\\sum _{i=1} ^ n p_i \\log _2 p_i$</li> </ul> <p>\u9999\u519c\u71b5\u7684\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u9999\u519c\u6e90\u7f16\u7801\u7406\u8bba\uff1a\u5bf9\u4e8e\u6e90\u4e3a\u72ec\u7acb\u540c\u5206\u5e03\u968f\u673a\u53d8\u91cf\u7684\u6570\u636e\uff0c\u9999\u519c\u71b5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6570\u636e\u538b\u7f29\u7684\u4e0b\u754c\u3002\u5177\u4f53\u800c\u8a00\uff0c\u5f53\u6570\u636e\u91cf\u8d8b\u4e8e\u65e0\u7a77\u65f6\uff0c\u4e0d\u53ef\u80fd\u538b\u7f29\u8fd9\u4e9b\u6570\u636e\u4ee5\u4f7f\u5f97\u7801\u7387\uff08\u6bcf\u4e2a\u7b26\u53f7\u7684\u5e73\u5747 bit \u4f4d\u6570\uff09\u5c0f\u4e8e\u6e90\u7684\u9999\u519c\u71b5 $H$\u3002</p>"},{"location":"courses/qi/note1/#_4","title":"\u8ba1\u7b97\u590d\u6742\u5ea6","text":"<ul> <li>P\uff1a\u4ee3\u8868\u6240\u6709\u53ef\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u51b3\u7b56\u95ee\u9898\uff0c\u8fd9\u7c7b\u95ee\u9898\u5f80\u5f80\u662f\u6613\u4e8e\u89e3\u51b3\u7684</li> <li>NP\uff1a\u4ee3\u8868\u6240\u6709\u53ef\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1\u7684\u51b3\u7b56\u95ee\u9898\uff0c\u5373\u5bf9\u4e8e\u4efb\u4e00\u7ed9\u5b9a\u7684\u731c\u6d4b\uff0c\u90fd\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u5224\u65ad\u731c\u6d4b\u662f\u5426\u6b63\u786e<ul> <li>\u663e\u7136 P $\\sube$ NP\uff0c\u800c\u8457\u540d\u7684 P = NP? \u95ee\u9898\u81f3\u4eca\u672a\u88ab\u89e3\u51b3</li> <li>NP \u5b8c\u5168\u95ee\u9898\u662f NP \u4e2d\u6700\u96be\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\u7684\u7b97\u6cd5\u4e5f\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u4efb\u4f55\u5176\u4ed6 NP \u95ee\u9898</li> </ul> </li> <li>BPP\uff1a\u5982\u679c\u5b58\u5728\u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\u7684\u7b97\u6cd5\uff0c\u5219\u51b3\u7b56\u95ee\u9898\u5c5e\u4e8e BPP<ul> <li>\u5141\u8bb8\u629b\u786c\u5e01\u5e76\u505a\u51fa\u968f\u673a\u51b3\u5b9a\uff1b\u4fdd\u8bc1\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u8fd0\u884c\uff1b\u5bf9\u4e8e\u7b97\u6cd5\u7684\u4efb\u4f55\u4e00\u6b21\u8fd0\u884c\uff0c\u7ed9\u51fa\u9519\u8bef\u7b54\u6848\u7684\u6982\u7387\u4e0d\u8d85\u8fc7 \u2153</li> <li>\u663e\u7136 P $\\sube$ BPP\uff0c\u968f\u7740\u8d8a\u6765\u8d8a\u591a BPP \u95ee\u9898\u88ab\u8bc1\u660e\u5c5e\u4e8e P\uff0c\u4eba\u4eec\u63a8\u6d4b P = BPP\uff08\u53bb\u968f\u673a\u5316\uff09</li> </ul> </li> <li>BQP\uff1a\u4ee3\u8868\u6240\u6709\u53ef\u7531\u91cf\u5b50\u8ba1\u7b97\u673a\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u4ee5\u9ad8\u6982\u7387\u89e3\u51b3\u7684\u51b3\u7b56\u95ee\u9898\uff0c\u53ef\u4ee5\u89c6\u4f5c BPP \u95ee\u9898\u7684\u91cf\u5b50\u63a8\u5e7f<ul> <li>\u6709 BPP $\\sube$ BQP\uff0c\u800c BPP = BQP? \u662f\u672a\u77e5\u7684</li> </ul> </li> </ul>"},{"location":"courses/qi/note1/#_5","title":"\u590d\u5411\u91cf\u7a7a\u95f4\u4e0b\u7684\u5149\u5b50\u53ca\u5176\u91cf\u5b50\u6001","text":""},{"location":"courses/qi/note1/#_6","title":"\u72c4\u62c9\u514b\u8bb0\u53f7","text":"<p>\u72c4\u62c9\u514b\u8bb0\u53f7\u5e7f\u6cdb\u5e94\u7528\u4e8e\u91cf\u5b50\u4fe1\u606f\u9886\u57df\uff0c\u5176\u57fa\u672c\u8bb0\u6cd5\u5982\u4e0b\uff1a</p> <ul> <li>\u590d\u5411\u91cf\u7a7a\u95f4 $V$ \u4e2d\u7684\u5411\u91cf\u8bb0\u4e3a $\\ket{v}$\uff0c\u7ebf\u6027\u6cdb\u51fd $f: V \\rightarrow \\Complex$ \u8bb0\u4e3a $\\bra{f}$\uff0c\u7ebf\u6027\u6cdb\u51fd\u4f5c\u7528\u4e8e\u5411\u91cf\u8bb0\u4e3a $\\braket{f|v} \\in \\Complex$</li> <li>\u590d\u5411\u91cf\u5185\u79ef\u7a7a\u95f4 $V$ \u4e2d\u6709\u5185\u79ef $(\\cdot , \\cdot)$ \u4e14\u7b2c\u4e00\u4f4d\u662f\u5171\u8f6d\u7ebf\u6027\u7684\uff0c\u5bf9\u4e8e\u5411\u91cf $\\phi$ \u53ef\u4ee5\u5b9a\u4e49 $(\\phi , \\cdot) \\equiv \\bra{\\phi}$\uff0c\u5176\u4e2d\u7ebf\u6027\u6cdb\u51fd $\\bra{\\phi}$ \u662f\u5411\u91cf $\\ket{\\phi}$ \u7684\u4f34\u968f\uff08\u77e9\u9635\u5f62\u5f0f\u7684\u5171\u8f6d\u8f6c\u7f6e\uff09\uff0c\u4ece\u800c\u5185\u79ef\u8bb0\u4e3a $(\\phi , \\psi) \\equiv \\braket{\\phi | \\psi}$<ul> <li>\u5185\u79ef $\\braket{\\phi | \\psi}$ \u8868\u793a $\\ket{\\psi}$ \u6295\u5f71\u5230 $\\ket{\\phi}$ \u4e0a\uff0c\u6ce8\u610f $\\braket{\\phi | \\psi} = \\braket{\\psi | \\phi} ^ *$</li> </ul> </li> <li>\u7ebf\u6027\u6cdb\u51fd $\\bra{\\phi}$ \u548c\u5411\u91cf $\\ket{\\psi}$ \u53ef\u4ee5\u901a\u8fc7\u5916\u79ef\u7ed3\u5408\u6210\u7b97\u5b50 $\\ket{\\psi} \\bra{\\phi}$\uff0c\u5b9a\u4e49\u4e3a $\\ket{\\psi} \\bra{\\phi} : \\ket{\\xi} \\mapsto \\ket{\\psi} \\braket{\\phi | \\xi}$<ul> <li>\u5916\u79ef $P_k \\equiv \\ket{k} \\bra{k}$ \u8868\u793a $\\ket{k}$ \u65b9\u5411\u7684\u6295\u5f71\u7b97\u5b50\uff0c$P_k \\ket{v} = \\ket{k} \\braket{k | v}$</li> </ul> </li> </ul> <p>\u4ece\u77e9\u9635\u5f62\u5f0f\u601d\u8003\uff0c\u72c4\u62c9\u514b\u8bb0\u53f7\u4e0b\u7ebf\u6027\u6cdb\u51fd\u4e0e\u5411\u91cf\u7684\u7ed3\u5408\u9075\u5faa\u77e9\u9635\u4e58\u6cd5\uff1a</p> <ul> <li>$\\braket{\\phi | \\psi} \\doteq \\begin{pmatrix} \\phi _1 ^ * &amp; \\phi _2 ^ * &amp; \\cdots &amp; \\phi _N ^ * \\end{pmatrix} \\begin{pmatrix} \\psi _1 \\cr \\psi _2 \\cr \\vdots \\cr \\psi _N \\end{pmatrix} = \\sum _ {i=1} ^ N \\phi _i ^ * \\psi _i$</li> <li>$\\ket{\\phi} \\bra{\\psi} \\doteq \\begin{pmatrix} \\phi _1 \\cr \\phi _2 \\cr \\vdots \\cr \\phi _N \\end{pmatrix} \\begin{pmatrix} \\psi _1 ^ * &amp; \\psi _2 ^ * &amp; \\cdots &amp; \\psi _N ^ * \\end{pmatrix} = \\begin{pmatrix} \\phi _1 \\psi _1 ^ * &amp; \\phi _1 \\psi _2 ^ * &amp; \\cdots &amp; \\phi _1 \\psi _N ^ * \\cr \\phi _2 \\psi _1 ^ * &amp; \\phi _2 \\psi _2 ^ * &amp; \\cdots &amp; \\phi _2 \\psi _N ^ * \\cr \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\cr \\phi _N \\psi _1 ^ * &amp; \\phi _N \\psi _2 ^ * &amp; \\cdots &amp; \\phi _N \\psi _N ^ * \\end{pmatrix}$</li> </ul>"},{"location":"courses/qi/note1/#_7","title":"\u5149\u7684\u504f\u632f","text":"<p>\u5149\u7684\u504f\u632f\u662f\u4e8c\u7ef4\u590d\u5411\u91cf\u7a7a\u95f4\u7684\u4e00\u4e2a\u8303\u4f8b\uff0c\u6216\u8005\u8bf4\u5149\u7684\u504f\u632f\u662f\u91cf\u5b50\u6bd4\u7279 qubit \u7684\u4e00\u4e2a\u8303\u4f8b\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u590d\u5411\u91cf\u6765\u8868\u793a\u4e00\u4e2a\u504f\u632f\u5149\u3002</p> <ul> <li>\u7ebf\u504f\u632f\u5149\uff1a$\\begin{cases} E_x = E_0 \\cos \\theta \\cos \\omega t \\cr E_y = E_0 \\sin \\theta \\cos \\omega t \\end{cases}$<ul> <li>\u53ef\u4ee5\u7528\u5355\u4f4d\u590d\u5411\u91cf $\\ket{p} = (\\cos \\theta , \\sin \\theta) ^ T$ \u8868\u793a\u8fd9\u4e2a\u7ebf\u504f\u632f\u5149</li> <li>Malus \u5b9a\u5f8b $I ^ {\\prime} = I \\cos ^ 2 \\theta$ \u7684\u7edf\u8ba1\u5b66\u63cf\u8ff0\uff1a\u504f\u632f\u65b9\u5411\u4e3a $\\ket{p} = (\\cos \\theta , \\sin \\theta) ^ T$ \u7684 $N$ \u4e2a\u5149\u5b50\u900f\u8fc7\u504f\u632f\u65b9\u5411\u4e3a $\\ket{n} = (1, 0) ^ T$ \u7684\u504f\u632f\u7247\uff0c\u900f\u8fc7\u7387\u7ea6\u4e3a $N_x / N \\simeq \\cos ^ 2 \\theta = \\braket{p | n}$</li> </ul> </li> <li>\u692d\u5706\u504f\u632f\u5149\uff1a$\\begin{cases} E_x = E_0 \\cos \\theta \\cos (\\omega t - \\delta _x) = E_0 \\text{Re} (\\mu e ^ {-i\\omega t}) &amp; ,\\; \\mu = \\cos \\theta e ^ {i\\delta _x} \\cr E_y = E_0 \\sin \\theta \\cos (\\omega t - \\delta _y) = E_0 \\text{Re} (\\nu e ^ {-i\\omega t}) &amp; ,\\; \\nu = \\sin \\theta e ^ {i\\delta _y} \\end{cases}$<ul> <li>\u53ef\u4ee5\u7528\u5355\u4f4d\u590d\u5411\u91cf $\\ket{p} = (\\mu, \\nu) ^ T$ \u8868\u793a\u8fd9\u4e2a\u692d\u5706\u504f\u632f\u5149\uff0c\u7531\u4e8e\u7269\u7406\u4e0a\u76f8\u4f4d\u5dee $\\delta = \\delta _y - \\delta _x$ \u624d\u662f\u6709\u610f\u4e49\u7684\uff0c\u56e0\u6b64 $\\ket{p}$ \u53ef\u7531\u4e24\u4e2a\u5b9e\u53c2\u6570 $\\theta , \\delta$ \u552f\u4e00\u786e\u5b9a</li> <li>\u5706\u504f\u632f\u5149\u7684 $\\theta = \\pi / 4$ \u4e14 $\\delta = \\pm \\pi / 2$\uff0c\u53ef\u4ee5\u7528\u5355\u4f4d\u590d\u5411\u91cf $\\frac{1}{\\sqrt{2}} (1 , \\pm i) ^ T$ \u8868\u793a</li> </ul> </li> </ul> <p>\u4e0b\u9762\u8003\u8651\u7528\u72c4\u62c9\u514b\u8bb0\u53f7\u8868\u8fbe\u5149\u7684\u504f\u632f\uff08\u4ee5\u7ebf\u504f\u632f\u5149\u4e3a\u4f8b\uff09\uff1a</p> <ul> <li>\u5f15\u5165\u6b63\u4ea4\u57fa $\\ket{h} = \\begin{pmatrix} 1 \\cr 0 \\end{pmatrix} , \\ket{v} = \\begin{pmatrix} 0 \\cr 1 \\end{pmatrix}$\uff0c\u4ee5\u53ca\u76f8\u5e94\u7684\u6295\u5f71\u7b97\u5b50 $P_h = \\ket{h} \\bra{h} = \\begin{pmatrix} 1 &amp; 0 \\cr 0 &amp; 0 \\end{pmatrix} , P_v = \\ket{v} \\bra{v} = \\begin{pmatrix} 0 &amp; 0 \\cr 0 &amp; 1 \\end{pmatrix}$\uff0c\u6ce8\u610f\u5230 $P_h + P_v = I _ {2\\times 2}$</li> <li>\u4ece\u800c\u7ebf\u504f\u632f\u5149\u53ef\u4ee5\u8868\u793a\u4e3a $\\ket{p} = I _ {2\\times 2} \\ket{p} = \\ket{h} \\bra{h} \\ket{p} + \\ket{v} \\bra{v} \\ket{p} = \\mu \\ket{h} + \\nu \\ket{v}$\uff0c\u6ce8\u610f\u5230 $|\\mu| ^ 2 + |\\nu| ^ 2 = 1$<ul> <li>$\\mu = \\braket{h | p} , \\nu = \\braket{v | p}$ \u79f0\u4e3a\u6982\u7387\u5e45\uff0c\u5206\u522b\u53cd\u6620\u4e86\u91cf\u5b50\u6001 $\\ket{p}$ \u574d\u7f29\u5230 $\\ket{h}$ \u548c $\\ket{v}$ \u7684\u53ef\u80fd\u6027</li> <li>\u6982\u7387\u5e45\u7684\u6a21\u5e73\u65b9\u8868\u793a\u6982\u7387\uff0c\u4f8b\u5982 $\\text{P} _ h = |\\mu| ^ 2 = \\braket{p | h} \\braket{h | p} \\equiv \\braket{p | P _ h | p}$\uff0c\u5176\u4e2d $\\text{P}_h$ \u8868\u793a\u6982\u7387\u800c $P_h$ \u8868\u793a $\\ket{h}$ \u5bf9\u5e94\u7684\u6295\u5f71\u7b97\u5b50</li> </ul> </li> </ul>"},{"location":"courses/qi/note1/#_8","title":"\u81ea\u65cb\u3001\u91cf\u5b50\u6bd4\u7279\u4e0e\u7ebf\u6027\u7b97\u5b50","text":""},{"location":"courses/qi/note1/#_9","title":"\u81ea\u65cb\u4e0e\u7ebf\u6027\u7b97\u5b50","text":"<p>\u5b64\u7acb\u7684 \u00bd \u81ea\u65cb\u662f\u91cf\u5b50\u6bd4\u7279 qubit \u7684\u4e00\u4e2a\u8303\u4f8b\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u590d\u5411\u91cf\u6765\u8868\u793a\u4e00\u4e2a \u00bd \u81ea\u65cb\u72b6\u6001\u3002</p> <ul> <li>\u5f15\u5165\u6b63\u4ea4\u57fa $\\ket{0} \\equiv \\ket{\\uparrow} = \\begin{pmatrix} 1 \\cr 0 \\end{pmatrix} , \\ket{1} \\equiv \\ket{\\downarrow} = \\begin{pmatrix} 0 \\cr 1 \\end{pmatrix}$</li> <li>\u4efb\u610f\u81ea\u65cb\u72b6\u6001\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a $\\ket{\\uparrow}$ \u548c $\\ket{\\downarrow}$ \u8fd9\u4e24\u79cd\u81ea\u65cb\u72b6\u6001\u7684\u53e0\u52a0 $\\ket{\\psi} = \\alpha \\ket{\\uparrow} + \\beta \\ket{\\downarrow}$ \u4e14 $|\\alpha| ^ 2 + |\\beta| ^ 2 = 1$</li> </ul> <p>\u5bf9\u7cfb\u7edf\u7684\u81ea\u65cb\u72b6\u6001\u7684\u89c2\u6d4b\u7528\u4e00\u4e2a\u5384\u7c73\u7684\uff08Hermitian\uff09\u7ebf\u6027\u7b97\u5b50\u8868\u793a\u3002</p> <ul> <li>\u8003\u8651\u5176\u7279\u5f81\u65b9\u7a0b $M \\ket{\\lambda} = \\lambda \\ket{\\lambda}$\uff0c\u6bcf\u4e2a\u7279\u5f81\u503c $\\lambda$ \u90fd\u662f\u5b9e\u7684</li> <li>\u8003\u8651\u5176\u7279\u5f81\u5206\u89e3 $M = \\sum _ {\\lambda \\lambda ^ \\prime} \\ket{\\lambda} \\bra{\\lambda} M \\ket{\\lambda ^ \\prime} \\bra{\\lambda ^ \\prime} = \\sum _ {\\lambda} \\lambda \\ket{\\lambda} \\bra{\\lambda} = \\sum _{\\lambda} \\lambda P _ {\\lambda}$</li> <li>\u5bf9\u4e8e\u81ea\u65cb\u72b6\u6001 $\\ket{\\psi}$ \u548c\u89c2\u6d4b $M$\uff0c\u89c2\u6d4b\u5230\u7279\u5f81\u5411\u91cf $\\ket{\\lambda}$ \u8868\u793a\u7684\u81ea\u65cb\u72b6\u6001\u7684\u6982\u7387\u4e3a $\\text{P} _ {\\lambda} = \\braket{\\psi | \\lambda} \\braket{\\lambda | \\psi}$</li> <li>\u5bf9\u4e8e\u81ea\u65cb\u72b6\u6001 $\\ket{\\psi}$ \u548c\u89c2\u6d4b $M$\uff0c\u5b9a\u4e49\u671f\u671b\u4e3a $\\braket{M} \\equiv \\braket{\\psi | M | \\psi} = \\sum _ {\\lambda} \\lambda \\braket{\\psi | \\lambda} \\braket{\\lambda | \\psi} = \\sum _ {\\lambda} \\lambda \\text{P} _ {\\lambda}$</li> <li>\u89c2\u6d4b\u662f\u4e0d\u53ef\u9006\u7684\uff0c\u7ecf\u8fc7\u89c2\u6d4b\u7684\u7cfb\u7edf\u4f1a\u574d\u7f29\u5230\u5176\u4e00\u7279\u5f81\u5411\u91cf\u8868\u793a\u7684\u81ea\u65cb\u72b6\u6001\uff08\u7ecf\u5178\u7684 Stern-Gerlach \u5b9e\u9a8c\u53cd\u6620\u4e86\u89c2\u6d4b\u5982\u4f55\u5f71\u54cd \u00bd \u7cfb\u7edf\u7684\u81ea\u65cb\u72b6\u6001\uff09\uff1b\u6211\u4eec\u65e0\u6cd5\u9884\u6d4b\u7cfb\u7edf\u4f1a\u574d\u7f29\u5230\u54ea\u79cd\u72b6\u6001\uff0c\u4f46\u6211\u4eec\u80fd\u5206\u6790\u7cfb\u7edf\u574d\u7f29\u5230\u8fd9\u4e9b\u72b6\u6001\u7684\u6982\u7387</li> </ul>"},{"location":"courses/qi/note1/#_10","title":"\u6ce1\u5229\u77e9\u9635","text":"<p>\u6ce1\u5229\u77e9\u9635\u662f\u4e09\u4e2a\u5384\u7c73\u7684 $2 \\times 2$ \u590d\u5411\u91cf\u77e9\u9635\uff0c\u5b83\u4eec\u672c\u8eab\u5373\u53ef\u8868\u793a\u4e09\u79cd\u89c2\u6d4b\uff1b\u66f4\u4e3a\u91cd\u8981\u7684\u662f\uff0c\u5b83\u4eec\u7684\u7ebf\u6027\u7ec4\u5408\u53ef\u4ee5\u6784\u9020\u51fa\u6cbf\u7740\u4efb\u610f\u81ea\u65cb\u65b9\u5411\u7684\u89c2\u6d4b\u3002</p> <p>\u4e09\u4e2a\u6ce1\u5229\u77e9\u9635\u53ca\u5176\u7279\u5f81\u5411\u91cf\u5982\u4e0b\uff08\u6ce8\u610f\u5b83\u4eec\u7684\u7279\u5f81\u503c\u90fd\u662f $\\pm 1$\uff0c\u5206\u522b\u5bf9\u5e94\u4e24\u79cd\u6b63\u4ea4\u7684\u81ea\u65cb\u72b6\u6001\uff09\uff1a</p> <ul> <li>$\\sigma _ z = \\begin{pmatrix} 1 &amp; 0 \\cr 0 &amp; -1 \\end{pmatrix}$\uff0c\u5bf9\u5e94 $\\ket{0}$ \u548c $\\ket{1}$</li> <li>$\\sigma _ x = \\begin{pmatrix} 0 &amp; 1 \\cr 1 &amp; 0 \\end{pmatrix} \\;\\;$\uff0c\u5bf9\u5e94 $\\ket{r} = \\frac{1}{\\sqrt{2}} \\ket{0} + \\frac{1}{\\sqrt{2}} \\ket{1}$ \u548c $\\ket{l} = \\frac{1}{\\sqrt{2}} \\ket{0} - \\frac{1}{\\sqrt{2}} \\ket{1}$</li> <li>$\\sigma _ y = \\begin{pmatrix} 0 &amp; -i \\cr i &amp; 0 \\end{pmatrix}$\uff0c\u5bf9\u5e94 $\\ket{i} = \\frac{1}{\\sqrt{2}} \\ket{0} + \\frac{i}{\\sqrt{2}} \\ket{1}$ \u548c $\\ket{o} = \\frac{1}{\\sqrt{2}} \\ket{0} - \\frac{i}{\\sqrt{2}} \\ket{1}$</li> </ul> <p>\u4e0b\u9762\u5c55\u793a\u5982\u4f55\u901a\u8fc7\u6ce1\u5229\u77e9\u9635\u6784\u9020\u51fa\u6cbf\u7740\u4efb\u610f\u81ea\u65cb\u65b9\u5411\u7684\u89c2\u6d4b\u77e9\u9635\uff1a</p> <ul> <li>\u5728\u73b0\u5b9e\u4e2d\uff0c\u81ea\u65cb\u65b9\u5411\u662f\u7531\u4e00\u4e2a\u4e09\u7ef4\u5b9e\u5411\u91cf\u8868\u793a\u7684\uff1b\u800c\u5728\u91cf\u5b50\u529b\u5b66\u4e2d\uff0c\u81ea\u65cb\u72b6\u6001\u662f\u7531\u4e00\u4e2a\u4e8c\u7ef4\u590d\u5411\u91cf\u8868\u793a\u7684</li> <li>\u5b9a\u4e49\u6ce1\u5229\u5411\u91cf $\\vec{\\sigma} = \\sigma _ x \\hat{x} + \\sigma _ y \\hat{y} + \\sigma _ z \\hat{z}$\uff0c\u5bf9\u4e8e\u81ea\u65cb\u65b9\u5411 $\\hat{n} = (n_x, n_y, n_z)$\uff0c\u6cbf\u7740\u8fd9\u4e2a\u65b9\u5411\u7684\u89c2\u6d4b\u53ef\u4ee5\u8868\u793a\u6210\u77e9\u9635 $\\sigma _ n = \\vec{\\sigma} \\cdot \\hat{n} = \\sigma _ x n _ x + \\sigma _ y n _ y + \\sigma _ z n _ z = \\begin{pmatrix} n _ z &amp; n _ x - i n _ y \\cr n _ x + i n _ y &amp; - n _ z \\end{pmatrix}$\uff0c\u6ce8\u610f\u5230\u8fd9\u4e2a\u77e9\u9635\u7684\u7279\u5f81\u503c\u4e5f\u4e3a $\\pm 1$\uff0c\u5206\u522b\u5bf9\u5e94\u6cbf\u7740\u8fd9\u4e2a\u81ea\u65cb\u65b9\u5411\u7684\u4e24\u79cd\u6b63\u4ea4\u7684\u81ea\u65cb\u72b6\u6001</li> <li>\u501f\u52a9\u6ce1\u5229\u5411\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4efb\u610f\u7531\u4e09\u7ef4\u5b9e\u5411\u91cf\u8868\u793a\u7684\u81ea\u65cb\u65b9\u5411\u6765\u6784\u9020\u76f8\u5e94\u7684\u7531\u4e8c\u7ef4\u590d\u5384\u7c73\u77e9\u9635\u8868\u793a\u7684\u89c2\u6d4b</li> </ul>"},{"location":"courses/qi/note1/#bloch","title":"Bloch\u2009\u7403","text":"<p>Bloch \u7403\u662f qubit \u7684\u4e00\u79cd\u51e0\u4f55\u8868\u793a\uff1a</p> <ul> <li>Bloch \u7403\u8868\u9762\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u90fd\u8868\u793a\u4e00\u79cd\u91cf\u5b50\u72b6\u6001\uff08\u81ea\u65cb\u72b6\u6001\uff09</li> <li>Bloch \u7403\u4e2d\u6bcf\u6761\u7a7f\u8fc7\u7403\u5fc3\u7684\u8f74\u7684\u4e24\u6781\u90fd\u8868\u793a\u4e00\u5bf9\u6b63\u4ea4\u7684\u91cf\u5b50\u72b6\u6001</li> <li>Bloch \u7403\u7684 $x,y,z$ \u8f74\u5206\u522b\u8868\u793a\u4e09\u4e2a\u6ce1\u5229\u77e9\u9635\u5bf9\u5e94\u7684\u6b63\u4ea4\u91cf\u5b50\u72b6\u6001</li> <li>\u91cf\u5b50\u72b6\u6001\u8bb0\u4e3a $\\ket{\\psi} = \\cos (\\theta / 2) \\ket{0} + e ^ {i \\phi} \\sin (\\theta / 2) \\ket{1}$</li> </ul> <p>\u5173\u4e8e\u201c\u4e3a\u4ec0\u4e48 Bloch \u7403\u8981\u8fd9\u6837\u5b9a\u4e49\u201d\uff0c\u4e0b\u9762\u7ed9\u51fa\u4e00\u79cd\u89e3\u91ca\uff1a</p> <p>\u9996\u5148\u53d6\u57fa\u72b6\u6001 $\\ket{0}$ \u548c $\\ket{1}$\uff0c\u4efb\u610f\u91cf\u5b50\u72b6\u6001\u53ef\u4ee5\u8868\u793a\u4e3a\u57fa\u72b6\u6001\u7684\u53e0\u52a0 $\\ket{\\psi} = \\alpha \\ket{0} + \\beta \\ket{1}$\uff0c\u5176\u4e2d $|\\alpha| ^ 2 + |\\beta| ^ 2 = 1$\uff1b\u7136\u540e\u8003\u8651\u4ee5\u8fd9\u4e2a\u91cf\u5b50\u72b6\u6001\u53ca\u5176\u6b63\u4ea4\u6001 $\\ket{\\bar{\\psi}} = \\beta ^ * \\ket{0} - \\alpha ^ * \\ket{1}$ \u4f5c\u4e3a\u7279\u5f81\u5411\u91cf\uff0c\u5229\u7528\u7279\u5f81\u5206\u89e3\u6784\u9020\u4e00\u4e2a\u89c2\u6d4b\uff1a</p> <p>$$ M = \\sum _ {\\lambda = \\pm 1} \\lambda P _ \\lambda = \\ket{\\psi} \\bra{\\psi} - \\ket{\\bar{\\psi}} \\bra{\\bar{\\psi}} = \\begin{pmatrix} |\\alpha| ^ 2 - |\\beta| ^ 2 &amp; 2\\alpha \\beta ^ * \\cr 2\\alpha ^ * \\beta &amp; |\\beta| ^ 2 - |\\alpha| ^ 2 \\end{pmatrix} $$</p> <p>\u6ce8\u610f\u5230\u6cbf\u7740\u81ea\u65cb\u65b9\u5411 $\\hat{n} = (n_x, n_y, n_z)$ \u6784\u9020\u7684\u89c2\u6d4b\u53ef\u4ee5\u8868\u793a\u6210\u77e9\u9635 $\\sigma _ n = \\vec{\\sigma} \\cdot \\hat{n} = \\sigma _ x n _ x + \\sigma _ y n _ y + \\sigma _ z n _ z = \\begin{pmatrix} n _ z &amp; n _ x - i n _ y \\cr n _ x + i n _ y &amp; - n _ z \\end{pmatrix}$\uff1b\u4ece\u800c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u89c2\u6d4b $M$ \u5bf9\u5e94\u7684\u81ea\u65cb\u65b9\u5411 $\\hat{\\psi} = (\\psi _ x, \\psi _ y, \\psi _ z)$\uff0c\u5176\u4e2d $\\psi _ z = |\\alpha| ^ 2 - |\\beta| ^ 2 ,\\; \\psi _ x + i\\psi _ y = 2\\alpha ^ * \\beta$\u3002</p> <p>\u8fd9\u65f6\u5019\u5982\u679c\u6211\u4eec\u53d6 $\\alpha = \\cos (\\theta / 2) ,\\; \\beta = \\sin (\\theta / 2) e ^ {i\\phi}$\uff08\u6b63\u5982 Bloch \u7403\u5b9a\u4e49\u7684\u90a3\u6837\uff09\uff0c\u89c2\u6d4b\u5bf9\u5e94\u7684\u81ea\u65cb\u65b9\u5411\u53ef\u4ee5\u8bb0\u4e3a $\\hat{\\psi} = (\\sin {\\theta} \\cos {\\phi} , \\sin {\\theta} \\sin {\\phi} , \\cos {\\theta})$\uff1b\u6ce8\u610f\u5230\u8fd9\u65f6\u5019\u81ea\u65cb\u65b9\u5411\u5177\u6709\u4e86\u6781\u5750\u6807\u7684\u5f62\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cBloch \u7403\u4e00\u65b9\u9762\u53ef\u89c6\u5316\u4e86\u7531\u4e8c\u7ef4\u590d\u5411\u91cf\u8868\u793a\u7684 qubit\uff0c\u53e6\u4e00\u65b9\u9762\u53ef\u89c6\u5316\u4e86\u7531\u4e09\u7ef4\u5b9e\u5411\u91cf\u8868\u793a\u7684\u81ea\u65cb\u65b9\u5411\uff0c\u800c\u4e14\u8fd9\u4e24\u8005\u5728 Bloch \u7403\u4e2d\u662f\u5b8c\u5168\u91cd\u5408\u7684\u3002</p> <p>\u503c\u5f97\u5f3a\u8c03\u7684\u662f\uff0c\u4e0a\u6587\u63cf\u8ff0\u7684 Bloch \u7403\u4e2d\u540c\u4e00\u70b9\u5bf9\u5e94\u7684\u91cf\u5b50\u72b6\u6001\u4e0e\u81ea\u65cb\u65b9\u5411\u662f\u6709\u5b9e\u9645\u8054\u7cfb\u7684\u3002\u5bf9\u4e8e\u91cf\u5b50\u6001 $\\ket{\\psi} = \\cos (\\theta / 2) \\ket{0} + e ^ {i \\phi} \\sin (\\theta / 2) \\ket{1}$\uff0c\u603b\u80fd\u627e\u5230\u4e00\u4e2a\u7279\u5b9a\u65b9\u5411 $\\hat{n}$\uff0c\u4f7f\u5f97\u76f8\u5e94\u7684\u89c2\u6d4b\u671f\u671b\u4e3a $\\braket{\\vec{\\sigma} \\cdot \\hat{n}} = 1$\uff0c\u800c\u8fd9\u4e2a\u65b9\u5411\u6070\u4e3a $\\hat{n} = (\\sin {\\theta} \\cos {\\phi} , \\sin {\\theta} \\sin {\\phi} , \\cos {\\theta})$\u3002</p>"},{"location":"courses/qi/note1/#_11","title":"\u591a\u91cf\u5b50\u6bd4\u7279\u4e0e\u91cf\u5b50\u7ea0\u7f20","text":""},{"location":"courses/qi/note1/#_12","title":"\u591a\u91cf\u5b50\u6bd4\u7279\u7cfb\u7edf","text":"<p>\u7531\u591a\u4e2a\u91cf\u5b50\u6bd4\u7279\u7ec4\u6210\u7684\u7cfb\u7edf\u53ef\u4ee5\u5206\u4e3a\u76f4\u79ef\u6001\u548c\u7ea0\u7f20\u6001\uff0c\u8fd9\u91cc\u4ee5 two-qubit \u7cfb\u7edf\u4e3a\u4f8b\u3002\u9996\u5148\u5b9a\u4e49\u5f20\u91cf\u79ef\u5982\u4e0b\uff1a</p> <p>$$ A \\otimes B = \\begin{pmatrix} a _ {11} B &amp; a _ {12} B &amp; \\cdots &amp; a _ {1n} B \\cr a _ {21} B &amp; a _ {22} B &amp; \\cdots &amp; a _ {2n} B \\cr \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\cr a _ {n1} B &amp; a _ {n2} B &amp; \\cdots &amp; a _ {nn} B \\end{pmatrix} $$</p> <p>\u53d6\u4efb\u610f\u4e24\u4e2a qubit \u5206\u522b\u4e3a $\\alpha _ 1 \\ket{0} + \\beta _ 1 \\ket{1}$ \u548c $\\alpha _ 2 \\ket{0} + \\beta _ 2 \\ket{1}$\uff0c\u4f7f\u7528\u5f20\u91cf\u79ef\u6784\u5efa\u76f4\u79ef\u6001\u7684 two-qubit \u7cfb\u7edf\uff1a</p> <p>$$ (\\alpha _ 1 \\ket{0} + \\beta _ 1 \\ket{1}) \\otimes (\\alpha _ 2 \\ket{0} + \\beta _ 2 \\ket{1}) = \\alpha _ 1 \\alpha _ 2 \\ket{00} + \\alpha _ 1 \\beta _ 2 \\ket{01} + \\beta _ 1 \\alpha _ 2 \\ket{10} + \\beta _ 1 \\beta _ 2 \\ket{11} $$</p> <p>\u5bf9\u4e8e\u76f4\u79ef\u6001\u7684 two-qubit \u800c\u8a00\uff0c\u8fd9\u4e24\u4e2a qubit \u662f\u72ec\u7acb\u7684\u3001\u53ef\u5206\u7684\uff0c\u53ef\u4ee5\u4ec5\u5bf9\u5176\u4e2d\u4e00\u4e2a qubit \u8fdb\u884c\u64cd\u4f5c\uff1a</p> <p>$$ (L \\otimes I) (\\ket{u} \\otimes \\ket{v}) = (L \\ket{u}) \\otimes \\ket{v} $$</p> <p>\u4e0d\u540c\u4e8e\u76f4\u79ef\u6001\uff0c\u7ea0\u7f20\u6001\u7684 two-qubit \u4e0d\u80fd\u62c6\u5206\u6210\u5f20\u91cf\u79ef\u7684\u5f62\u5f0f\uff0c\u4e24\u4e2a qubit \u662f\u76f8\u4e92\u7ea0\u7f20\u3001\u975e\u72ec\u7acb\u7684\u3002</p> <p>\u4f8b\u5982\u8d1d\u5c14\u6001\uff08\u7ea0\u7f20\u6001\u7684\u4e00\u4e2a\u8303\u4f8b\uff09\uff0c\u53d6 $\\ket{\\Psi _ {+}} = \\frac{1}{\\sqrt{2}} (\\ket{01} + \\ket{10})$\uff0c\u6ce8\u610f\u5230\u5982\u679c\u7b2c\u4e00\u4e2a qubit \u5904\u4e8e\u72b6\u6001 $\\ket{0}$\uff0c\u5219\u7b2c\u4e8c\u4e2a qubit \u5fc5\u7136\u5904\u4e8e\u72b6\u6001 $\\ket{1}$\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002</p>"},{"location":"courses/qi/note1/#_13","title":"\u8d1d\u5c14\u6001","text":"<p>\u8d1d\u5c14\u6001\u5177\u6709\u56db\u4e2a\u57fa\u72b6\u6001\uff1a</p> <ul> <li>$\\ket{\\Phi _ {+}} = \\frac{1}{\\sqrt{2}} (\\ket{00} + \\ket{11})$\uff0c$\\ket{\\Phi _ {-}} = \\frac{1}{\\sqrt{2}} (\\ket{00} - \\ket{11})$</li> <li>$\\ket{\\Psi _ {+}} = \\frac{1}{\\sqrt{2}} (\\ket{01} + \\ket{10})$\uff0c$\\ket{\\Psi _ {-}} = \\frac{1}{\\sqrt{2}} (\\ket{01} - \\ket{10})$</li> </ul> <p>\u4e3a\u4e86\u8fdb\u4e00\u6b65\u7406\u89e3\u76f4\u79ef\u6001\u548c\u7ea0\u7f20\u6001\u7684\u533a\u522b\uff0c\u6211\u4eec\u8003\u8651\u4ec5\u5bf9\u7b2c\u4e00\u4e2a qubit \u8fdb\u884c\u89c2\u6d4b\uff1a</p> <ul> <li>\u5bf9\u4e8e\u76f4\u79ef\u6001\uff0c\u4e24\u4e2a qubit \u662f\u5b8c\u5168\u72ec\u7acb\u7684\uff0c\u56e0\u6b64\u4ec5\u5bf9\u7b2c\u4e00\u4e2a qubit \u8fdb\u884c\u89c2\u6d4b\u7684\u7ed3\u679c\u4e0e\u76f4\u63a5\u5bf9\u5355\u4e2a qubit \u8fdb\u884c\u89c2\u6d4b\u662f\u4e00\u6837\u7684<ul> <li>\u53d6 $\\ket{\\psi} = \\cos (\\theta / 2) \\ket{0} + e ^ {i \\phi} \\sin (\\theta / 2) \\ket{1}$\uff0c\u603b\u80fd\u627e\u5230\u4e00\u4e2a\u7279\u5b9a\u65b9\u5411 $\\hat{n} = (\\sin {\\theta} \\cos {\\phi} , \\sin {\\theta} \\sin {\\phi} , \\cos {\\theta})$\uff0c\u4f7f\u5f97\u76f8\u5e94\u7684\u89c2\u6d4b\u671f\u671b\u4e3a $\\braket{\\vec{\\sigma} \\cdot \\hat{n}} = 1$</li> </ul> </li> <li>\u5bf9\u4e8e\u7ea0\u7f20\u6001\uff0c\u4e24\u4e2a qubit \u662f\u76f8\u4e92\u7ea0\u7f20\u7684\uff0c\u800c\u4e14\u4ec5\u5bf9\u7b2c\u4e00\u4e2a qubit \u8fdb\u884c\u89c2\u6d4b\u662f\u65e0\u6cd5\u5f97\u5230\u6709\u6548\u4fe1\u606f\u7684<ul> <li>\u53d6\u8d1d\u5c14\u57fa $\\ket{\\Psi _ {+}}$\uff0c\u5bf9\u4efb\u610f\u65b9\u5411 $\\hat{n}$\uff0c\u5747\u6709 $\\braket{\\vec{\\sigma ^ {(1)}} \\cdot \\hat{n}} = 0$\uff0c\u5176\u4e2d\u89c2\u6d4b\u4e25\u683c\u6765\u8bf4\u5e94\u8be5\u5199\u4e3a $(\\vec{\\sigma ^ {(1)}} \\cdot \\hat{n}) \\otimes I$\uff1b\u5373\u4ec5\u5bf9\u7b2c\u4e00\u4e2a qubit \u8fdb\u884c\u7684\u4efb\u4f55\u89c2\u6d4b\u671f\u671b\u5747\u4e3a 0\uff0c\u89c2\u6d4b\u7ed3\u679c\u7b49\u53ef\u80fd\u5730\u5206\u5e03\u4e8e $\\pm 1$\uff0c\u65e0\u6cd5\u5f97\u5230\u4efb\u4f55\u4fe1\u606f</li> </ul> </li> </ul> <p>\u5982\u679c\u60f3\u8981\u5f97\u5230\u975e\u96f6\u7684\u89c2\u6d4b\u7ed3\u679c\uff08\u5373\u5305\u542b\u6709\u6548\u4fe1\u606f\u7684\u89c2\u6d4b\u7ed3\u679c\uff09\uff0c\u9700\u8981\u5bf9\u7ea0\u7f20\u6001\u6574\u4f53\u8fdb\u884c\u89c2\u6d4b\uff0c\u4f8b\u5982\uff1a</p> <p>$$ \\sigma ^ {(1)} \\cdot \\sigma ^ {(2)} = \\sigma ^ {(1)} _ {x} \\sigma ^ {(2)} _ {x} + \\sigma ^ {(1)} _ {y} \\sigma ^ {(2)} _ {y} + \\sigma ^ {(1)} _ {z} \\sigma ^ {(2)} _ {z} $$</p> <p>\u4e0a\u8ff0\u89c2\u6d4b\u4f5c\u7528\u4e8e\u8d1d\u5c14\u6001\u7684\u56db\u4e2a\u57fa\u72b6\u6001\u5f97\u5230\u7684\u671f\u671b\u5206\u522b\u4e3a $+1, +1, +1, -3$\uff0c\u6070\u597d\u5bf9\u5e94\u4e8e\u8fd9\u4e2a\u89c2\u6d4b\u7684\u56db\u4e2a\u7279\u5f81\u503c\u3002</p>"},{"location":"courses/qi/note1/#_14","title":"\u5bc6\u5ea6\u77e9\u9635\u4e0e\u7ea6\u5316\u5bc6\u5ea6\u77e9\u9635","text":"<p>\u5bc6\u5ea6\u77e9\u9635\u662f\u63cf\u8ff0\u91cf\u5b50\u7cfb\u7edf\u7684\u91cd\u8981\u5de5\u5177\uff0c\u53ef\u4ee5\u7528\u4e8e\u4f30\u8ba1\u89c2\u6d4b\u7ed3\u679c\uff0c\u4e0e\u7ecf\u5178\u7cfb\u7edf\u7684\u6982\u7387\u8bba\u76f8\u5bf9\u5e94\u3002</p> <ul> <li>\u7eaf\u6001 $\\ket{\\psi}$ \u7684\u5bc6\u5ea6\u77e9\u9635\u4e3a $\\rho \\equiv \\ket{\\psi} \\bra{\\psi}$\uff0c\u6df7\u5408\u6001\u7684\u5bc6\u5ea6\u77e9\u9635\u4e3a $\\rho = \\sum _ {i} \\text{P} _ i \\ket{\\psi _ {i}} \\bra{\\psi _ {i}}$</li> <li>\u89c2\u6d4b $L$ \u4f5c\u7528\u4e8e\u91cf\u5b50\u6001\u7684\u671f\u671b\u53ef\u4ee5\u901a\u8fc7\u76f8\u5e94\u7684\u5bc6\u5ea6\u77e9\u9635\u8ba1\u7b97\u5f97\u5230\uff0c$\\braket{L} = \\text{Tr} (\\rho L)$\uff0c\u5bf9\u4e8e\u7eaf\u6001\u548c\u6df7\u5408\u6001\u5747\u9002\u7528\uff1b\u5176\u4e2d\uff0c$\\text{Tr}$ \u8868\u793a\u77e9\u9635\u6c42\u8ff9\uff0c\u5b9a\u4e49\u4e3a $\\text{Tr} (L) = \\sum _ {i} \\braket{i | L | i}$</li> </ul> <p>\u5bc6\u5ea6\u77e9\u9635\u5177\u6709\u5982\u4e0b\u6027\u8d28\uff1a</p> <ul> <li>\u5bc6\u5ea6\u77e9\u9635\u90fd\u662f\u5384\u7c73\u7684\uff0c\u5373 $\\rho _ {ij} = \\rho _ {ji} ^ *$</li> <li>\u5bc6\u5ea6\u77e9\u9635\u7684\u8ff9\u5747\u4e3a 1\uff0c\u5373 $\\text{Tr} (\\rho) = 1$</li> <li>\u5bc6\u5ea6\u77e9\u9635\u7684\u7279\u5f81\u503c\u5747\u4e3a\u4ecb\u4e8e 0 \u548c 1 \u4e4b\u95f4\u7684\u6b63\u6570</li> </ul> <p>\u7ea6\u5316\u5bc6\u5ea6\u77e9\u9635\u662f\u63cf\u8ff0\u591a\u91cf\u5b50\u6bd4\u7279\u7cfb\u7edf\u7684\u5b50\u7cfb\u7edf\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u7528\u4e8e\u4f30\u8ba1\u4ec5\u4f5c\u7528\u4e8e\u5b50\u7cfb\u7edf\u7684\u89c2\u6d4b\u7ed3\u679c\u3002\u5bf9\u4e8e two-qubit \u7cfb\u7edf\uff0c\u8bb0\u4e24\u4e2a qubit \u5206\u522b\u8868\u793a\u5b50\u7cfb\u7edf A \u548c B\uff0c\u5219\u63cf\u8ff0\u5b50\u7cfb\u7edf A \u7684\u7ea6\u5316\u5bc6\u5ea6\u77e9\u9635\u4e3a $\\rho _ {A} = \\text{Tr} _ {B} (\\rho)$\uff0c\u89c2\u6d4b\u671f\u671b\u4e3a $\\braket{L _ {A}} = \\text{Tr} _ {A} (\\rho _ {A} L _ {A})$\u3002\u6ce8\u610f\uff0c\u5176\u4e2d $\\text{Tr} _ {A}$ \u8868\u793a\u77e9\u9635\u6c42\u90e8\u5206\u8ff9\uff0c\u4e14\u57fa\u4e8e\u7ea6\u5316\u5bc6\u5ea6\u77e9\u9635\u7684\u671f\u671b\u5e76\u975e\u5e38\u6570\uff0c\u800c\u662f\u4e00\u4e2a\u66f4\u4f4e\u7ef4\u7684\u77e9\u9635\u3002</p> <ul> <li>\u5bf9\u4e8e\u76f4\u79ef\u6001 $\\ket{\\psi} = \\ket{\\lambda} _ {A} \\ket{\\phi} _ {B}$\uff0c\u5b50\u7cfb\u7edf A \u7684\u7ea6\u5316\u5bc6\u5ea6\u77e9\u9635\u4e3a $\\rho _ {A} = \\text{Tr} _ {B} (\\rho) = \\ket{\\lambda} \\bra{\\lambda}$\uff0c\u6ce8\u610f\u5230 $\\text{Tr} (\\rho _ {A} ^ 2) = \\text{Tr} (\\rho _ {A}) = 1$\uff0c\u6545\u5b50\u7cfb\u7edf A \u662f\u7eaf\u6001</li> <li>\u5bf9\u4e8e\u7ea0\u7f20\u6001\uff0c\u7eaf\u7684\u7ea0\u7f20\u6001\u53ef\u4ee5\u5199\u4f5c $\\ket{\\psi} = \\sum _ i c _ i \\ket{\\lambda _ i} _ A \\ket{\\phi _ i} _ B$\uff0c\u5b50\u7cfb\u7edf A \u7684\u7ea6\u5316\u5bc6\u5ea6\u77e9\u9635\u4e3a $\\rho _ {A} = \\text{Tr} _ {B} (\\rho) = \\sum _ i | c _ i | ^ 2 \\ket{\\lambda _ i} \\bra{\\lambda _ i}$\uff0c\u6ce8\u610f\u5230 $\\text{Tr} (\\rho _ A) = 1$\uff0c\u4f46 $\\text{Tr} (\\rho _ A ^ 2) = \\text{Tr} (\\rho _ B ^ 2) \\not = 1$\uff0c\u6545\u5b50\u7cfb\u7edf A \u662f\u6df7\u5408\u6001</li> </ul> <p>\u7c7b\u4f3c\u4e8e\u9999\u519c\u71b5\u53ef\u4ee5\u63cf\u8ff0\u4fe1\u606f\u91cf\uff0c\u4e3a\u63cf\u8ff0\u7531 A \u548c B \u4e24\u4e2a\u5b50\u7cfb\u7edf\u6784\u6210\u7684\u7ea0\u7f20\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5b9a\u4e49\u7ea0\u7f20\u71b5\uff1a</p> <p>$$ S _ A \\equiv - \\text{Tr} _ A (\\rho _ A \\log _ 2 \\rho _ A) = - \\sum _ i | c _ i | ^ 2 \\log _ 2 | c _ i | ^ 2 \\;,\\;\\; S _ A = S _ B $$</p>"},{"location":"courses/qi/note1/#_15","title":"\u7eaf\u6001\u4e0e\u6df7\u5408\u6001","text":"<p>\u7eaf\u6001\u662f\u7ecf\u8fc7\u5145\u5206\u7684\u89c2\u6d4b\u540e\u88ab\u5b8c\u5168\u786e\u5b9a\u7684\u91cf\u5b50\u6001\uff0c\u800c\u6df7\u5408\u6001\u662f\u4e00\u7cfb\u5217\u7eaf\u6001\u7684\u7edf\u8ba1\u5b66\u53e0\u52a0\u3002</p> <ul> <li>\u7eaf\u6001\u65e2\u53ef\u7528\u72c4\u62c9\u514b\u8bb0\u53f7\u63cf\u8ff0\uff0c\u4e5f\u53ef\u7528\u5bc6\u5ea6\u77e9\u9635\u63cf\u8ff0\uff1b\u800c\u6df7\u5408\u6001\u53ea\u53ef\u7528\u5bc6\u5ea6\u77e9\u9635\u63cf\u8ff0</li> <li>\u5bf9\u4e8e\u7eaf\u6001\uff0c\u6709 $\\rho ^ 2 = \\rho ,\\;\\; \\text{Tr} (\\rho ^ 2) = 1$\uff1b\u5bf9\u4e8e\u6df7\u5408\u6001\uff0c\u6709 $\\rho ^ 2 \\not = \\rho ,\\;\\; \\text{Tr} (\\rho ^ 2) &lt; 1$</li> <li>\u5728 Bloch \u7403\u4e2d\uff0c\u7403\u8868\u9762\u4e0a\u7684\u70b9\u8868\u793a\u7eaf\u6001\uff0c\u7403\u5185\u90e8\u7684\u70b9\u8868\u793a\u6df7\u5408\u6001</li> </ul> <p>\u6b64\u5916\uff0c\u4e3a\u4e86\u8fdb\u4e00\u6b65\u7406\u89e3\u4e3a\u4ec0\u4e48\u201c\u6982\u7387\u5e45\u4e0d\u662f\u7ecf\u5178\u7cfb\u7edf\u7684\u6982\u7387\u8bba\u7684\u91cf\u5b50\u5bf9\u5e94\uff0c\u4f46\u5bc6\u5ea6\u77e9\u9635\u662f\u201d\uff0c\u6211\u4eec\u8003\u8651\u6784\u5efa\u4e00\u4e2a 50%-50% \u7684\u53e0\u52a0\u6001\uff1a</p> <ul> <li>\u8003\u8651\u7eaf\u6001 $\\ket{\\psi} = \\frac{1}{\\sqrt{2}} \\ket{0} + \\frac{1}{\\sqrt{2}} \\ket{1}$\uff0c\u5176\u4e2d\u4e24\u4e2a\u57fa\u6001\u7684\u6982\u7387\u5e45\u76f8\u7b49\uff0c\u4f46 $\\ket{\\psi}$ \u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u662f\u4e00\u4e2a 50%-50% \u7684\u53e0\u52a0\u6001\uff0c\u56e0\u4e3a $\\ket{0}$ \u548c $\\ket{1}$ \u5b58\u5728\u76f8\u4e92\u5e72\u6d89\u3002\u5f53\u6211\u4eec\u8003\u5bdf\u5bc6\u5ea6\u77e9\u9635 $\\rho = \\ket{\\psi} \\bra{\\psi} = \\frac{1}{2} \\ket{0} \\bra{0} + \\frac{1}{2} \\ket{0} \\bra{1} + \\frac{1}{2} \\ket{1} \\bra{0} + \\frac{1}{2} \\ket{1} \\bra{1}$ \u6216\u8005\u89c2\u6d4b\u671f\u671b $\\braket{A} = \\frac{1}{2} \\braket{0 | A | 0} + \\frac{1}{2} \\braket{0 | A | 1} + \\frac{1}{2} \\braket{1 | A | 0} + \\frac{1}{2} \\braket{1 | A | 1}$ \u65f6\uff0c\u53ef\u4ee5\u660e\u663e\u6ce8\u610f\u5230\u7ed3\u679c\u7684\u4e2d\u95f4\u6709\u4e24\u4e2a $\\ket{0}$ \u548c $\\ket{1}$ \u7684\u76f8\u5e72\u9879</li> <li>\u8003\u8651\u6df7\u5408\u6001 $\\rho = \\frac{1}{2} \\ket{0} \\bra{0} + \\frac{1}{2} \\ket{1} \\bra{1}$\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u624d\u662f\u6211\u4eec\u60f3\u8981\u7684 50%-50% \u7684\u53e0\u52a0\u6001\uff0c\u4e24\u4e2a\u57fa\u6001\u4e4b\u95f4\u5e76\u4e0d\u76f8\u5e72\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7ecf\u5178\u7cfb\u7edf\u6982\u7387\u8bba\u7684\u52a0\u6cd5\u539f\u7406\u8fdb\u884c\u53e0\u52a0\u3002\u5f53\u6211\u4eec\u8003\u8651\u89c2\u6d4b\u671f\u671b $\\braket{A} = \\frac{1}{2} \\braket{0 | A | 0} + \\frac{1}{2} \\braket{1 | A | 1}$ \u65f6\uff0c\u4e5f\u53ef\u4ee5\u660e\u663e\u6ce8\u610f\u5230\u7ed3\u679c\u4e2d\u5e76\u4e0d\u5b58\u5728\u76f8\u5e72\u9879</li> </ul>"},{"location":"courses/qi/note1/#_16","title":"\u91cf\u5b50\u7cfb\u7edf\u7684\u542b\u65f6\u6f14\u5316","text":""},{"location":"courses/qi/note1/#_17","title":"\u542b\u65f6\u6f14\u5316","text":"<p>\u91cf\u5b50\u7cfb\u7edf\u7684\u542b\u65f6\u6f14\u5316\u662f\u786e\u5b9a\u7684\u3001\u53ef\u9006\u7684\uff0c\u6709\u522b\u4e8e\u4e0d\u786e\u5b9a\u7684\u3001\u4e0d\u53ef\u9006\u7684\u89c2\u6d4b\u884c\u4e3a\u3002</p> <ul> <li>\u542b\u65f6\u6f14\u5316\u53ef\u7531\u4e00\u4e2a\u9149\u77e9\u9635\u63cf\u8ff0\uff1a$\\ket{\\psi (t)} = U(t) \\ket{\\psi (0)}$\uff0c\u5176\u4e2d $U(t)$ \u4e3a\u542b\u65f6\u6f14\u5316\u7b97\u5b50</li> <li>\u542b\u65f6\u6f14\u5316\u9075\u5faa\u859b\u5b9a\u8c14\u65b9\u7a0b\uff1a $i\\hbar \\frac{\\partial}{\\partial t} \\ket{\\psi (t)} = H \\ket{\\psi (t)}$\uff0c\u5176\u4e2d $H$ \u4e3a\u54c8\u5bc6\u987f\u91cf</li> <li>\u5bc6\u5ea6\u77e9\u9635 $\\rho = \\sum _ {i} \\text{P} _ i \\ket{\\psi _ i} \\bra{\\psi _ i}$ \u7684\u542b\u65f6\u6f14\u5316\u7ed3\u679c\u53ef\u4ee5\u63cf\u8ff0\u4e3a $\\rho ^ {\\prime} = U \\rho U ^ {+}$\uff0c\u5176\u4e2d $\\ket{\\psi _ i ^ {\\prime}} = U \\ket{\\psi _ i}$</li> </ul> <p>\u901a\u5e38\u800c\u8a00\uff0c\u6211\u4eec\u901a\u8fc7\u5b9e\u9a8c\u6d4b\u91cf\u3001\u7406\u8bba\u63a8\u5bfc\u7b49\u65b9\u5f0f\u5f97\u5230\u91cf\u5b50\u7cfb\u7edf\u7684\u54c8\u5bc6\u987f\u91cf\uff0c\u4ece\u800c\u8ba1\u7b97\u91cf\u5b50\u7cfb\u7edf\u5982\u4f55\u968f\u7740\u65f6\u95f4\u53d1\u751f\u6f14\u5316\u3002\u5982\u679c\u54c8\u5bc6\u987f\u91cf\u4e0e\u65f6\u95f4\u65e0\u5173\uff0c\u5219\u859b\u5b9a\u8c14\u65b9\u7a0b\u663e\u7136\u6709\u89e3 $\\ket{\\psi (t)} \\equiv U(t) \\ket{\\psi (0)} = e ^ {-iHt / \\hbar} \\ket{\\psi (0)}$\u3002</p>"},{"location":"courses/qi/note1/#rabi","title":"Rabi\u2009\u632f\u52a8","text":"<p>\u5bf9\u4e8e\u5904\u5728\u78c1\u573a $\\vec{B}$ \u4e2d\u7684 qubit\uff0c\u54c8\u5bc6\u987f\u91cf\u53ef\u7531 $H = -\\sigma \\cdot \\vec{B}$ \u8ba1\u7b97\u5f97\u5230\u3002\u53d6\u78c1\u573a\u4e3a $\\vec{B} = B _ z \\hat{z} + B _ 1 (\\cos \\omega t \\hat{x} - \\sin \\omega t \\hat{y})$\uff0c\u5219\u54c8\u5bc6\u987f\u91cf\u4e3a\uff1a</p> <p>$$ H(t) = - \\frac{\\hbar \\omega _ 0}{2} \\sigma _ z - \\frac{\\hbar \\omega _ 1}{2} (\\sigma _ x \\cos \\omega t - \\sigma _ y \\sin \\omega t) $$</p> <p>\u65cb\u8f6c\u53c2\u8003\u7cfb\u4f7f\u5f97\u54c8\u5bc6\u987f\u91cf\u4e0e\u65f6\u95f4\u65e0\u5173\uff1a</p> <p>$$ H ^ {\\prime} = - \\frac{\\hbar (\\omega _ 0 - \\omega)}{2} \\sigma _ z - \\frac{\\hbar \\omega _ 1}{2} \\sigma _ x $$</p> <p>\u53d6 $\\ket{\\psi (0)} = \\ket{0}$\uff0c\u5219\u5728\u65f6\u95f4 $t$ \u65f6\u91cf\u5b50\u6001\u5904\u4e8e $\\ket{1}$ \u7684\u6982\u7387\u662f\uff1a</p> <p>$$ |\\braket{1 | \\psi (t)}| ^ 2 = |\\braket{1 | e ^ {-iH ^ {\\prime}t / \\hbar} | 0}| ^ 2 = (\\frac{\\omega _ 1}{\\Omega}) ^ 2 \\sin ^ 2 \\frac{\\Omega t}{2} $$</p> <p>\u5176\u4e2d\uff0c$\\Omega = \\sqrt{(\\omega - \\omega _ 0) ^ 2 + \\omega _ 1 ^ 2}$\uff1b\u6ce8\u610f\u8fd9\u91cc\u63a8\u5bfc\u7684\u5173\u952e\u4e00\u6b65\u662f\u53d8\u6362 $\\exp (i\\frac{\\theta}{2} \\sigma \\cdot \\hat{n}) = I \\cos \\frac{\\theta}{2} + i (\\sigma \\cdot \\hat{n}) \\sin \\frac{\\theta}{2}$\u3002</p>"},{"location":"courses/qi/note1/#_18","title":"\u91cf\u5b50\u7535\u8def","text":""},{"location":"courses/qi/note1/#_19","title":"\u91cf\u5b50\u903b\u8f91\u95e8","text":"<p>\u91cf\u5b50\u7535\u8def\u7531\u91cf\u5b50\u903b\u8f91\u95e8\u7ec4\u6210\uff0c\u6bcf\u4e2a\u91cf\u5b50\u95e8\u90fd\u76f8\u5f53\u4e8e\u4e00\u4e2a\u53ef\u9006\u7b97\u5b50\u3002</p> <ul> <li>\u6ce1\u5229 X \u95e8\uff0c$X = \\begin{pmatrix} 0 &amp; 1 \\cr 1 &amp; 0 \\end{pmatrix}$\uff0c\u5c06 $\\ket{0}$ \u548c $\\ket{1}$ \u91cf\u5b50\u6001\u4e92\u76f8\u7ffb\u8f6c\uff0c\u6545\u53c8\u79f0\u975e\u95e8</li> <li>\u6ce1\u5229 Z \u95e8\uff0c$Z = \\begin{pmatrix} 1 &amp; 0 \\cr 0 &amp; -1 \\end{pmatrix}$\uff0c\u4fdd\u6301 $\\ket{0}$ \u4e0d\u53d8\uff0c\u5e76\u5c06 $\\ket{1}$ \u6620\u5c04\u6210 $-\\ket{1}$</li> <li>\u54c8\u8fbe\u739b\u95e8\uff0c$H = \\frac{1}{\\sqrt{2}} \\begin{pmatrix} 1 &amp; 1 \\cr 1 &amp; -1 \\end{pmatrix}$\uff0c\u4f7f\u5f97 $H \\ket{0} = \\frac{1}{\\sqrt{2}} (\\ket{0} + \\ket{1})$\uff0c$H \\ket{1} = \\frac{1}{\\sqrt{2}} (\\ket{0} - \\ket{1})$\uff0c\u5e38\u7528\u4e8e\u91cf\u5b50\u5e76\u884c\u5316</li> <li>$\\pi / 4$ \u95e8\uff0c$S = \\begin{pmatrix} 1 &amp; 0 \\cr 0 &amp; i \\end{pmatrix}$</li> <li>$\\pi / 8$ \u95e8\uff0c$T = \\begin{pmatrix} 1 &amp; 0 \\cr 0 &amp; e ^ {i\\pi / 4} \\end{pmatrix}$</li> <li>\u53d7\u63a7\u975e\u95e8\uff08CNOT\uff09\uff0c\u4f5c\u7528\u4e8e\u53cc\u91cf\u5b50\u4f4d\uff0c\u5f53\u63a7\u5236\u91cf\u5b50\u4f4d\u4e3a $\\ket{1}$ \u65f6\uff0c\u5bf9\u53d7\u63a7\u91cf\u5b50\u4f4d\u6267\u884c\u975e\u95e8\uff0c\u5426\u5219\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c</li> </ul> <p>\u6807\u51c6\u7684\u903b\u8f91\u5b8c\u5907\u91cf\u5b50\u95e8\u7531 H\u3001S\u3001T\u3001CNOT \u95e8\u7ec4\u6210\uff0c\u80fd\u591f\u65e0\u9650\u8d8b\u8fd1\u5730\u5b9e\u73b0\u91cf\u5b50\u8ba1\u7b97\u4e2d\u7684\u4efb\u610f\u9149\u7b97\u5b50\u3002</p>"},{"location":"courses/qi/note1/#_20","title":"\u91cf\u5b50\u9690\u5f62\u4f20\u6001","text":"<p>\u91cf\u5b50\u9690\u5f62\u4f20\u6001\u662f\u4e00\u79cd\u5c06\u91cf\u5b50\u6001\u4f20\u9001\u81f3\u4efb\u610f\u8ddd\u79bb\u7684\u6280\u672f\u3002</p> <ul> <li>\u91cf\u5b50\u9690\u5f62\u4f20\u6001\u4e0d\u662f\u514b\u9686\uff0c\u5728\u63a5\u6536\u7aef\u91cd\u6784\u51fa\u91cf\u5b50\u6001\u524d\uff0c\u53d1\u9001\u7aef\u7684\u91cf\u5b50\u6001\u4e00\u5b9a\u5df2\u7ecf\u574d\u7f29\uff0c\u5e76\u4e0d\u8fdd\u80cc\u4e0d\u53ef\u514b\u9686\u539f\u7406</li> <li>\u91cf\u5b50\u9690\u5f62\u4f20\u6001\u4e0d\u80fd\u8d85\u5149\u901f\uff0c\u56e0\u4e3a\u53d1\u9001\u7aef\u5fc5\u987b\u4f7f\u7528\u7ecf\u5178\u4fe1\u9053\u4f20\u9012\u4e00\u5b9a\u4fe1\u606f\u7ed9\u63a5\u6536\u7aef</li> </ul> <p>\u4e0b\u9762\u5206\u6790\u4e00\u4e2a\u91cf\u5b50\u9690\u5f62\u4f20\u6001\u7684\u7b80\u5355\u6a21\u578b\uff1a\u5047\u8bbe Alice \u62e5\u6709\u4e00\u4e2a\u91cf\u5b50\u6001 $\\ket{\\psi} = a \\ket{0} + b \\ket{1}$\uff0c\u4f46\u5979\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u8fd9\u4e2a\u91cf\u5b50\u6001\u5177\u4f53\u662f\u4ec0\u4e48\uff08\u4e0d\u9700\u8981\u77e5\u9053\u53c2\u6570 $a$ \u548c $b$\uff09\uff0c\u5979\u7684\u76ee\u6807\u662f\u4f7f\u8fd9\u4e2a\u91cf\u5b50\u6001\u80fd\u591f\u88ab\u4efb\u610f\u8fdc\u5904\u7684 Bob \u91cd\u6784\u51fa\u6765\u3002</p> <p>\u9996\u5148\u51c6\u5907\u8d1d\u5c14\u6001 $\\ket{\\Omega} = \\frac{1}{\\sqrt{2}} (\\ket{00} + \\ket{11})$ \u5e76\u5c06\u8fd9\u4e24\u4e2a\u7ea0\u7f20\u7684\u91cf\u5b50\u6bd4\u7279\u5206\u53d1\u7ed9 Alice \u548c Bob\uff0c\u6b64\u65f6\u6574\u4e2a\u7cfb\u7edf\u7684\u91cf\u5b50\u6001\u53ef\u4ee5\u5199\u4f5c\uff1a</p> <p>$$ \\begin{aligned} \\ket{\\Psi} &amp;= (a\\ket{0} + b\\ket{1}) \\otimes \\frac{1}{\\sqrt{2}} (\\ket{00} + \\ket{11}) \\cr &amp;= \\frac{1}{\\sqrt{2}} (\\ket{00} + \\ket{11}) (a\\ket{0} + b\\ket{1}) + \\frac{1}{\\sqrt{2}} (\\ket{01} + \\ket{10}) (a\\ket{1} + b\\ket{0}) \\cr &amp;+ \\frac{1}{\\sqrt{2}} (\\ket{00} - \\ket{11}) (a\\ket{0} - b\\ket{1}) + \\frac{1}{\\sqrt{2}} (\\ket{01} - \\ket{10}) (a\\ket{1} - b\\ket{0}) \\end{aligned} $$</p> <p>\u968f\u540e\uff0cAlice \u5bf9\u81ea\u5df1\u7684\u4e24\u4e2a\u91cf\u5b50\u6bd4\u7279\u8fdb\u884c\u53cd\u53d8\u6362\uff08CNOT\u3001H \u95e8\uff09\uff0c\u6b64\u65f6\u6574\u4e2a\u7cfb\u7edf\u7684\u91cf\u5b50\u6001\u4e3a\uff1a</p> <p>$$ \\begin{aligned} \\ket{\\Psi} &amp;= \\frac{1}{2} \\ket{00} (a\\ket{0} + b\\ket{1}) + \\frac{1}{2} \\ket{01} (a\\ket{1} + b\\ket{0}) + \\frac{1}{2} \\ket{10} (a\\ket{0} - b\\ket{1}) + \\frac{1}{2} \\ket{11} (a\\ket{1} - b\\ket{0}) \\cr &amp;= \\frac{1}{2} (\\ket{00} I + \\ket{01} X + \\ket{10} Z + \\ket{11} XZ) (a\\ket{0} + b\\ket{1}) \\end{aligned} $$</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0cAlice \u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u89c2\u6d4b\u81ea\u5df1\u7684\u4e24\u4e2a\u91cf\u5b50\u6bd4\u7279\uff0c\u6765\u5224\u65ad\u51fa Bob \u7684\u90a3\u4e2a\u91cf\u5b50\u6bd4\u7279\u7684\u72b6\u6001\uff0c\u4ece\u800c\u901a\u8fc7\u7ecf\u5178\u4fe1\u9053\u901a\u77e5 Bob \u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\uff0c\u5e76\u6700\u7ec8\u4f7f Bob \u7684\u90a3\u4e2a\u91cf\u5b50\u6bd4\u7279\u6f14\u5316\u6210 $a\\ket{0} + b\\ket{0}$\u3002\u6ce8\u610f\u5230\u6b64\u65f6\u7531\u4e8e\u89c2\u6d4b\uff0cAlice \u5904\u7684 $\\ket{\\psi}$ \u5df2\u7ecf\u574d\u7f29\uff0c\u6574\u4e2a\u8fc7\u7a0b\u5176\u5b9e\u662f $\\ket{\\psi}$ \u5728 Alice \u5904\u6d88\u89e3\uff0c\u968f\u540e\u53c8\u5728 Bob \u5904\u91cd\u6784\u3002\u4e8b\u5b9e\u4e0a\uff0c\u91cf\u5b50\u9690\u5f62\u4f20\u6001\u4f20\u9012\u7684\u5e76\u4e0d\u662f\u91cf\u5b50\u6001 $\\ket{\\psi}$ \u672c\u8eab\uff0c\u800c\u662f\u91cf\u5b50\u6001\u8574\u542b\u7684\u4fe1\u606f $a$ \u548c $b$\u3002</p>"},{"location":"courses/qi/note2/","title":"\u91cf\u5b50\u7ea0\u9519","text":"<p> \u7ea6 4 \u4e2a\u5b57 </p>"}]}